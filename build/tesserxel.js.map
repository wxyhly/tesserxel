{"version":3,"file":"tesserxel.js","sources":["../src/math/const.ts","../src/math/pool.ts","../src/math/algebra/vec2.ts","../src/math/algebra/mat3.ts","../src/math/algebra/mat4.ts","../src/math/algebra/quaternion.ts","../src/math/algebra/rotor.ts","../src/math/algebra/bivec.ts","../src/math/algebra/vec4.ts","../src/math/algebra/vec3.ts","../src/math/random.ts","../src/math/algebra/mat2.ts","../src/math/algebra/cplx.ts","../src/math/algebra/affine.ts","../src/math/algebra/group.ts","../src/math/geometry/camera.ts","../src/math/geometry/primitive.ts","../src/math/geometry/spline.ts","../src/math/noise.ts","../src/math/geometry/polytope.ts","../src/render/slice/interfaces.ts","../node_modules/wgsl_reflect/wgsl_reflect.module.js","../src/render/wgsl.ts","../src/render/slice/pipeline.ts","../src/render/slice/renderer.ts","../src/render/gpu.ts","../src/mesh/index.ts","../src/mesh/tetra/tetramesh.ts","../src/mesh/face/facemesh.ts","../src/mesh/face/geom.ts","../src/mesh/tetra/geom.ts","../src/four/scene.ts","../src/four/light.ts","../src/four/renderer.ts","../src/four/vertexshader.ts","../src/four/material.ts","../src/mesh/objparser.ts","../src/mesh/cwmesh/geoms.ts","../src/mesh/cwmesh/cwmesh.ts","../src/four/geom.ts","../src/four/wireframe.ts","../src/util/ctrl.ts","../src/four/app.ts","../src/math/algebra/matrix.ts","../src/physics/rigid.ts","../src/physics/broadPhase.ts","../src/physics/forces.ts","../src/physics/gjk.ts","../src/physics/narrowphase.ts","../src/physics/solver.ts","../src/physics/engine.ts","../src/render/voxel/buffer.ts"],"sourcesContent":["export const _180 = Math.PI;\r\nexport const _30 = Math.PI / 6;\r\nexport const _60 = Math.PI / 3;\r\nexport const _45 = Math.PI / 4;\r\nexport const _90 = Math.PI / 2;\r\nexport const _120 = Math.PI * 2 / 3;\r\nexport const _360 = Math.PI * 2;\r\nexport const _DEG2RAD = Math.PI / 180;\r\nexport const _RAD2DEG = 180 / Math.PI;\r\nexport const _SQRT_3 = Math.sqrt(3);\r\nexport const _COS30 = Math.sqrt(3) / 2;\r\nexport const _TAN30 = Math.sqrt(3) / 3;\r\nexport const _GOLDRATIO = (Math.sqrt(5) - 1) / 2;","// from cannon.js: src/utils/pool.js\r\nexport abstract class Pool<T> {\r\n    objects: T[] = [];\r\n    abstract constructObject(): T;\r\n    pop() {\r\n        if (this.objects.length === 0) {\r\n            return this.constructObject();\r\n        } else {\r\n            return this.objects.pop()!;\r\n        }\r\n    }\r\n    push(...args: T[]) {\r\n        this.objects.push(...args);\r\n    }\r\n    resize(size: number) {\r\n        let objects = this.objects;\r\n        while (objects.length > size) {\r\n            objects.pop();\r\n        }\r\n        while (objects.length < size) {\r\n            objects.push(this.constructObject());\r\n        }\r\n        return this;\r\n    }\r\n}","\r\nimport { Complex } from \"./cplx.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport {_360} from \"../const.js\";\r\nimport { Pool } from \"../pool.js\";\r\nexport class Vec2Pool extends Pool<Vec2>{\r\n    constructObject() { return new Vec2; }\r\n}\r\nexport const vec2Pool = new Vec2Pool;\r\nexport class Vec2 {\r\n    x: number;\r\n    y: number;\r\n    static readonly x = new Vec2(1, 0);\r\n    static readonly y = new Vec2(0, 1);\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x; this.y = y;\r\n    }\r\n    flat(): number[] {\r\n        return [this.x, this.y];\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        b[offset] = this.x;\r\n        b[offset + 1] = this.y;\r\n    }\r\n    set(x: number = 0, y: number = 0): Vec2 {\r\n        this.x = x; this.y = y; return this;\r\n    }\r\n    copy(v: Vec2): Vec2 {\r\n        this.x = v.x; this.y = v.y; return this;\r\n    }\r\n    copyc(v: Complex): Vec2 {\r\n        this.x = v.re; this.y = v.im; return this;\r\n    }\r\n    clone(): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n    add(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x + v2.x, this.y + v2.y);\r\n    }\r\n    addset(v1: Vec2, v2: Vec2): Vec2 {\r\n        this.x = v1.x + v2.x; this.y = v1.y + v2.y; return this;\r\n    }\r\n    addf(v2: number): Vec2 {\r\n        return new Vec2(this.x + v2, this.y + v2);\r\n    }\r\n    adds(v2: Vec2): Vec2 {\r\n        this.x += v2.x; this.y += v2.y; return this;\r\n    }\r\n    addfs(v2: number): Vec2 {\r\n        this.x += v2; this.y += v2; return this;\r\n    }\r\n    /** this += v * k */\r\n    addmulfs(v: Vec2, k: number) {\r\n        this.x += v.x * k; this.y += v.y * k; return this;\r\n    }\r\n    neg(): Vec2 {\r\n        return new Vec2(-this.x, -this.y);\r\n    }\r\n    negs(): Vec2 {\r\n        this.x = - this.x; this.y = -this.y;\r\n        return this;\r\n    }\r\n    sub(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x - v2.x, this.y - v2.y);\r\n    }\r\n    subset(v1: Vec2, v2: Vec2): Vec2 {\r\n        this.x = v1.x - v2.x; this.y = v1.y - v2.y; return this;\r\n    }\r\n    subf(v2: number): Vec2 {\r\n        return new Vec2(this.x - v2, this.y - v2);\r\n    }\r\n    subs(v2: Vec2): Vec2 {\r\n        this.x -= v2.x; this.y -= v2.y; return this;\r\n    }\r\n    subfs(v2: number): Vec2 {\r\n        this.x -= v2; this.y -= v2; return this;\r\n    }\r\n    mulf(v2: number): Vec2 {\r\n        return new Vec2(this.x * v2, this.y * v2);\r\n    }\r\n    mulfs(v2: number): Vec2 {\r\n        this.x *= v2; this.y *= v2; return this;\r\n    }\r\n    mul(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x * v2.x, this.y * v2.y);\r\n    }\r\n    muls(v2: Vec2): Vec2 {\r\n        this.x *= v2.x; this.y *= v2.y; return this;\r\n    }\r\n    divf(v2: number): Vec2 {\r\n        v2 = 1 / v2;\r\n        return new Vec2(this.x * v2, this.y * v2);\r\n    }\r\n    divfs(v2: number): Vec2 {\r\n        v2 = 1 / v2;\r\n        this.x *= v2; this.y *= v2; return this;\r\n    }\r\n    div(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x / v2.x, this.y / v2.y);\r\n    }\r\n    divs(v2: Vec2): Vec2 {\r\n        this.x /= v2.x; this.y /= v2.y; return this;\r\n    }\r\n    dot(v2: Vec2): number {\r\n        return this.x * v2.x + this.y * v2.y;\r\n    }\r\n    norm(): number {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n    norms(): Vec2 {\r\n        let v2 = Math.hypot(this.x, this.y);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.x *= v2; this.y *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    norm1(): number {\r\n        return Math.abs(this.x) + Math.abs(this.y);\r\n    }\r\n    norminf(): number {\r\n        return Math.max(Math.abs(this.x), Math.abs(this.y));\r\n    }\r\n    normi(i: number): number {\r\n        return Math.pow(Math.pow(this.x, i) + Math.pow(this.y, i), 1 / i);\r\n    }\r\n    wedge(v2: Vec2): number {\r\n        return this.x * v2.y - this.y * v2.x;\r\n    }\r\n    rotate(angle: number): Vec2 {\r\n        let s = Math.sin(angle); let c = Math.cos(angle);\r\n        return new Vec2(\r\n            this.x * c - this.y * s,\r\n            this.x * s + this.y * c,\r\n        )\r\n    }\r\n    rotates(angle: number): Vec2 {\r\n        let s = Math.sin(angle); let c = Math.cos(angle);\r\n        let x = this.x * c - this.y * s;\r\n        this.y = this.x * s + this.y * c;\r\n        this.x = x;\r\n        return this;\r\n    }\r\n    static rand(): Vec2 {\r\n        let a = Math.random() * _360;\r\n        return new Vec2(Math.cos(a), Math.sin(a));\r\n    }\r\n    static srand(seed: Srand): Vec2 {\r\n        let a = seed.nextf() * _360;\r\n        return new Vec2(Math.cos(a), Math.sin(a));\r\n    }\r\n    distanceTo(p: Vec2) {\r\n        return Math.hypot(p.x - this.x, p.y - this.y);\r\n    }\r\n    distanceSqrTo(p: Vec2) {\r\n        let x = p.x - this.x, y = p.y - this.y;\r\n        return x * x + y * y;\r\n    }\r\n    equal(v: Vec2) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n    pushPool(pool: Vec2Pool = vec2Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\n\r\nexport let _vec2 = new Vec2();","import { Pool } from \"../pool.js\";\r\nimport { Quaternion } from \"./quaternion.js\";\r\nimport { Vec3 } from \"./vec3.js\";\r\n\r\nexport class Mat3Pool extends Pool<Mat3>{\r\n    constructObject() { return new Mat3; }\r\n}\r\nexport const mat3Pool = new Mat3Pool;\r\nexport class Mat3 {\r\n    elem: number[];\r\n    static id = new Mat3(1, 0, 0, 0, 1, 0, 0, 0, 1);\r\n    static zero = new Mat3(0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    static diag(a: number, b: number, c: number): Mat3 {\r\n        return new Mat3(\r\n            a, 0, 0,\r\n            0, b, 0,\r\n            0, 0, c\r\n        );\r\n    }\r\n    constructor(\r\n        a: number = 1, b: number = 0, c: number = 0,\r\n        d: number = 0, e: number = 1, f: number = 0,\r\n        g: number = 0, h: number = 0, i: number = 1\r\n    ) { this.elem = [a, b, c, d, e, f, g, h, i]; }\r\n    set(\r\n        a: number = 0, b: number = 0, c: number = 0,\r\n        d: number = 0, e: number = 0, f: number = 0,\r\n        g: number = 0, h: number = 0, i: number = 0\r\n    ): Mat3 { this.elem = [a, b, c, d, e, f, g, h, i]; return this; }\r\n    setid(): Mat3 { this.elem = [1, 0, 0, 0, 1, 0, 0, 0, 1]; return this; }\r\n\r\n    ts(): Mat3 {\r\n        let me = this.elem;\r\n        let tmp = me[1]; me[1] = me[3]; me[3] = tmp;\r\n        tmp = me[2]; me[2] = me[6]; me[6] = tmp;\r\n        tmp = me[5]; me[5] = me[7]; me[7] = tmp;\r\n        return this;\r\n    }\r\n    t(): Mat3 {\r\n        return new Mat3(\r\n            this.elem[0], this.elem[3], this.elem[6],\r\n            this.elem[1], this.elem[4], this.elem[7],\r\n            this.elem[2], this.elem[5], this.elem[8]\r\n        );\r\n    }\r\n\r\n    /** col vector */x_(): Vec3 { return new Vec3(this.elem[0], this.elem[3], this.elem[6]); }\r\n    /** col vector */y_(): Vec3 { return new Vec3(this.elem[1], this.elem[4], this.elem[7]); }\r\n    /** col vector */z_(): Vec3 { return new Vec3(this.elem[2], this.elem[5], this.elem[8]); }\r\n\r\n    /** row vector */_x(): Vec3 { return new Vec3(this.elem[0], this.elem[1], this.elem[2]); }\r\n    /** row vector */_y(): Vec3 { return new Vec3(this.elem[3], this.elem[4], this.elem[5]); }\r\n    /** row vector */_z(): Vec3 { return new Vec3(this.elem[6], this.elem[7], this.elem[8]); }\r\n    copy(m2: Mat3): Mat3 {\r\n        for (var i = 0; i < 4; i++) {\r\n            this.elem[i] = m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    add(m2: Mat3): Mat3 {\r\n        let m = new Mat3();\r\n        for (var i = 0; i < 9; i++) {\r\n            m.elem[i] = this.elem[i] + m2.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    adds(m2: Mat3): Mat3 {\r\n        for (var i = 0; i < 9; i++) {\r\n            this.elem[i] += m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    neg(): Mat3 {\r\n        let m = new Mat3();\r\n        for (var i = 0; i < 9; i++) {\r\n            m.elem[i] = -this.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    negs(): Mat3 {\r\n        for (var i = 0; i < 9; i++) {\r\n            this.elem[i] = -this.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    sub(m2: Mat3): Mat3 {\r\n        let m = new Mat3();\r\n        for (var i = 0; i < 9; i++) {\r\n            m.elem[i] = this.elem[i] - m2.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    subs(m2: Mat3): Mat3 {\r\n        for (var i = 0; i < 9; i++) {\r\n            this.elem[i] -= m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    mulf(k: number): Mat3 {\r\n        let m = new Mat3();\r\n        for (var i = 0; i < 9; i++) {\r\n            m.elem[i] = this.elem[i] * k;\r\n        }\r\n        return m;\r\n    }\r\n    mulfs(k: number): Mat3 {\r\n        for (var i = 0; i < 9; i++) {\r\n            this.elem[i] *= k;\r\n        }\r\n        return this;\r\n    }\r\n    mulv(v: Vec3): Vec3 {\r\n        let a = this.elem;\r\n        return new Vec3(\r\n            v.x * a[0] + v.y * a[1] + v.z * a[2],\r\n            v.x * a[3] + v.y * a[4] + v.z * a[5],\r\n            v.x * a[6] + v.y * a[7] + v.z * a[8]\r\n        );\r\n    }\r\n    mul(m: Mat3): Mat3 {\r\n        let a = this.elem; let b = m.elem;\r\n        return new Mat3(\r\n            a[0] * b[0] + a[1] * b[3] + a[2] * b[6], a[0] * b[1] + a[1] * b[4] + a[2] * b[7], a[0] * b[2] + a[1] * b[5] + a[2] * b[8],\r\n            a[3] * b[0] + a[4] * b[3] + a[5] * b[6], a[3] * b[1] + a[4] * b[4] + a[5] * b[7], a[3] * b[2] + a[4] * b[5] + a[5] * b[8],\r\n            a[6] * b[0] + a[7] * b[3] + a[8] * b[6], a[6] * b[1] + a[7] * b[4] + a[8] * b[7], a[6] * b[2] + a[7] * b[5] + a[8] * b[8],\r\n        );\r\n    }\r\n    muls(m: Mat3): Mat3 {\r\n        let a = this.elem; let b = m.elem;\r\n        this.set(\r\n            a[0] * b[0] + a[1] * b[3] + a[2] * b[6], a[0] * b[1] + a[1] * b[4] + a[2] * b[7], a[0] * b[2] + a[1] * b[5] + a[2] * b[8],\r\n            a[3] * b[0] + a[4] * b[3] + a[5] * b[6], a[3] * b[1] + a[4] * b[4] + a[5] * b[7], a[3] * b[2] + a[4] * b[5] + a[5] * b[8],\r\n            a[6] * b[0] + a[7] * b[3] + a[8] * b[6], a[6] * b[1] + a[7] * b[4] + a[8] * b[7], a[6] * b[2] + a[7] * b[5] + a[8] * b[8],\r\n        );\r\n        return this;\r\n    }\r\n    inv(): Mat3 {\r\n        let me = this.elem;\r\n        let n11 = me[0], n21 = me[1], n31 = me[2],\r\n            n12 = me[3], n22 = me[4], n32 = me[5],\r\n            n13 = me[6], n23 = me[7], n33 = me[8],\r\n            t11 = n33 * n22 - n32 * n23,\r\n            t12 = n32 * n13 - n33 * n12,\r\n            t13 = n23 * n12 - n22 * n13,\r\n            det = n11 * t11 + n21 * t12 + n31 * t13;\r\n        if (det === 0) {\r\n            console.warn(\"Matrix determinant is 0\");\r\n            return new Mat3(0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n        }\r\n        let detInv = 1 / det;\r\n        return new Mat3(\r\n            t11 * detInv,\r\n            (n31 * n23 - n33 * n21) * detInv,\r\n            (n32 * n21 - n31 * n22) * detInv,\r\n            t12 * detInv,\r\n            (n33 * n11 - n31 * n13) * detInv,\r\n            (n31 * n12 - n32 * n11) * detInv,\r\n            t13 * detInv,\r\n            (n21 * n13 - n23 * n11) * detInv,\r\n            (n22 * n11 - n21 * n12) * detInv\r\n        );\r\n    }\r\n    invs(): Mat3 {\r\n        let me = this.elem;\r\n        let n11 = me[0], n21 = me[1], n31 = me[2],\r\n            n12 = me[3], n22 = me[4], n32 = me[5],\r\n            n13 = me[6], n23 = me[7], n33 = me[8],\r\n            t11 = n33 * n22 - n32 * n23,\r\n            t12 = n32 * n13 - n33 * n12,\r\n            t13 = n23 * n12 - n22 * n13,\r\n            det = n11 * t11 + n21 * t12 + n31 * t13;\r\n        if (det === 0) {\r\n            var msg = \"Matrix determinant is 0\";\r\n            console.warn(msg);\r\n            me.fill(0);\r\n            return this;\r\n        }\r\n        let detInv = 1 / det;\r\n        me[0] = t11 * detInv;\r\n        me[1] = (n31 * n23 - n33 * n21) * detInv;\r\n        me[2] = (n32 * n21 - n31 * n22) * detInv;\r\n        me[3] = t12 * detInv;\r\n        me[4] = (n33 * n11 - n31 * n13) * detInv;\r\n        me[5] = (n31 * n12 - n32 * n11) * detInv;\r\n        me[6] = t13 * detInv;\r\n        me[7] = (n21 * n13 - n23 * n11) * detInv;\r\n        me[8] = (n22 * n11 - n21 * n12) * detInv;\r\n        return this;\r\n    }\r\n\r\n    setFromRotaion(q: Quaternion): Mat3 {\r\n        let xt2 = q.y + q.y, yt2 = q.z + q.z, zt2 = q.w + q.w;\r\n        let x2 = q.y * xt2;\r\n        let y2 = q.z * yt2;\r\n        let z2 = q.w * zt2;\r\n\r\n        let xy = q.y * yt2;\r\n        let yz = q.w * yt2;\r\n        let xz = q.w * xt2;\r\n\r\n        let wx = q.x * xt2;\r\n        let wy = q.x * yt2;\r\n        let wz = q.x * zt2;\r\n        return this.set(\r\n            1 - (y2 + z2), xy - wz, xz + wy,\r\n            xy + wz, 1 - x2 - z2, yz - wx,\r\n            xz - wy, yz + wx, 1 - x2 - y2\r\n        );\r\n    }\r\n    pushPool(pool: Mat3Pool = mat3Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\nexport let _mat3 = new Mat3();","import { Pool } from \"../pool.js\";\r\nimport { Mat3 } from \"./mat3.js\";\r\nimport { Quaternion } from \"./quaternion.js\";\r\nimport { Rotor } from \"./rotor.js\";\r\nimport { Vec3 } from \"./vec3.js\";\r\nimport { Vec4 } from \"./vec4.js\";\r\n\r\n\r\nexport class Mat4Pool extends Pool<Mat4>{\r\n    constructObject() { return new Mat4; }\r\n}\r\nexport const mat4Pool = new Mat4Pool;\r\nexport class Mat4 {\r\n    elem: number[];\r\n    static readonly id = new Mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    static readonly zero = new Mat4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    static diag(a: number, b: number, c: number, d: number): Mat4 {\r\n        return new Mat4(\r\n            a, 0, 0, 0,\r\n            0, b, 0, 0,\r\n            0, 0, c, 0,\r\n            0, 0, 0, d\r\n        );\r\n    }\r\n    static augVec4(a: Vec4, b: Vec4, c: Vec4, d: Vec4): Mat4 {\r\n        return new Mat4(\r\n            a.x, b.x, c.x, d.x,\r\n            a.y, b.y, c.y, d.y,\r\n            a.z, b.z, c.z, d.z,\r\n            a.w, b.w, c.w, d.w\r\n        )\r\n    }\r\n    static augMat3(a: Mat3, b: Vec3, c: Vec3, d: number): Mat4 {\r\n        c = c ?? new Vec3();\r\n        b = b ?? new Vec3();\r\n        return new Mat4(\r\n            a.elem[0], a.elem[1], a.elem[2], b.x,\r\n            a.elem[3], a.elem[4], a.elem[5], b.y,\r\n            a.elem[6], a.elem[7], a.elem[8], b.z,\r\n            c.x, c.y, c.z, d\r\n        )\r\n    }\r\n\r\n    augVec4set(a: Vec4, b: Vec4, c: Vec4, d: Vec4): Mat4 {\r\n        return this.set(\r\n            a.x, b.x, c.x, d.x,\r\n            a.y, b.y, c.y, d.y,\r\n            a.z, b.z, c.z, d.z,\r\n            a.w, b.w, c.w, d.w\r\n        )\r\n    }\r\n    augMat3set(a: Mat3, b: Vec3, c: Vec3, d: number): Mat4 {\r\n        return this.set(\r\n            a.elem[0], a.elem[1], a.elem[2], b?.x ?? 0,\r\n            a.elem[3], a.elem[4], a.elem[5], b?.y ?? 0,\r\n            a.elem[6], a.elem[7], a.elem[8], b?.z ?? 0,\r\n            c?.x ?? 0, c?.y ?? 0, c?.z ?? 0, d\r\n        )\r\n    }\r\n    constructor(\r\n        a: number = 1, b: number = 0, c: number = 0, d: number = 0,\r\n        e: number = 0, f: number = 1, g: number = 0, h: number = 0,\r\n        i: number = 0, j: number = 0, k: number = 1, l: number = 0,\r\n        m: number = 0, n: number = 0, o: number = 0, p: number = 1\r\n    ) { this.elem = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]; }\r\n    clone(): Mat4 {\r\n        let e = this.elem;\r\n        return new Mat4(...e);\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        b[offset++] = this.elem[0];\r\n        b[offset++] = this.elem[4];\r\n        b[offset++] = this.elem[8];\r\n        b[offset++] = this.elem[12];\r\n        b[offset++] = this.elem[1];\r\n        b[offset++] = this.elem[5];\r\n        b[offset++] = this.elem[9];\r\n        b[offset++] = this.elem[13];\r\n        b[offset++] = this.elem[2];\r\n        b[offset++] = this.elem[6];\r\n        b[offset++] = this.elem[10];\r\n        b[offset++] = this.elem[14];\r\n        b[offset++] = this.elem[3];\r\n        b[offset++] = this.elem[7];\r\n        b[offset++] = this.elem[11];\r\n        b[offset++] = this.elem[15];\r\n    }\r\n    setid() {\r\n        this.elem[0] = 1, this.elem[1] = 0, this.elem[2] = 0, this.elem[3] = 0;\r\n        this.elem[4] = 0, this.elem[5] = 1, this.elem[6] = 0, this.elem[7] = 0;\r\n        this.elem[8] = 0, this.elem[9] = 0, this.elem[10] = 1, this.elem[11] = 0;\r\n        this.elem[12] = 0, this.elem[13] = 0, this.elem[14] = 0, this.elem[15] = 1; return this;\r\n    }\r\n    set(\r\n        a: number = 0, b: number = 0, c: number = 0, d: number = 0,\r\n        e: number = 0, f: number = 0, g: number = 0, h: number = 0,\r\n        i: number = 0, j: number = 0, k: number = 0, l: number = 0,\r\n        m: number = 0, n: number = 0, o: number = 0, p: number = 0\r\n    ) {\r\n        this.elem[0] = a, this.elem[1] = b, this.elem[2] = c, this.elem[3] = d;\r\n        this.elem[4] = e, this.elem[5] = f, this.elem[6] = g, this.elem[7] = h;\r\n        this.elem[8] = i, this.elem[9] = j, this.elem[10] = k, this.elem[11] = l;\r\n        this.elem[12] = m, this.elem[13] = n, this.elem[14] = o, this.elem[15] = p; return this;\r\n    }\r\n    ts(): Mat4 {\r\n        let me = this.elem;\r\n        let tmp = me[1]; me[1] = me[4]; me[4] = tmp;\r\n        tmp = me[2]; me[2] = me[8]; me[8] = tmp;\r\n        tmp = me[6]; me[6] = me[9]; me[9] = tmp;\r\n        tmp = me[3]; me[3] = me[12]; me[12] = tmp;\r\n        tmp = me[7]; me[7] = me[13]; me[13] = tmp;\r\n        tmp = me[11]; me[11] = me[14]; me[14] = tmp;\r\n        return this;\r\n    }\r\n    t(): Mat4 {\r\n        return new Mat4(\r\n            this.elem[0], this.elem[4], this.elem[8], this.elem[12],\r\n            this.elem[1], this.elem[5], this.elem[9], this.elem[13],\r\n            this.elem[2], this.elem[6], this.elem[10], this.elem[14],\r\n            this.elem[3], this.elem[7], this.elem[11], this.elem[15]\r\n        );\r\n    }\r\n    /** col vector */x_(): Vec4 { return new Vec4(this.elem[0], this.elem[4], this.elem[8], this.elem[12]); }\r\n    /** col vector */y_(): Vec4 { return new Vec4(this.elem[1], this.elem[5], this.elem[9], this.elem[13]); }\r\n    /** col vector */z_(): Vec4 { return new Vec4(this.elem[2], this.elem[6], this.elem[10], this.elem[14]); }\r\n    /** col vector */w_(): Vec4 { return new Vec4(this.elem[3], this.elem[7], this.elem[11], this.elem[15]); }\r\n\r\n    /** row vector */_x(): Vec4 { return new Vec4(this.elem[0], this.elem[1], this.elem[2], this.elem[3]); }\r\n    /** row vector */_y(): Vec4 { return new Vec4(this.elem[4], this.elem[5], this.elem[6], this.elem[7]); }\r\n    /** row vector */_z(): Vec4 { return new Vec4(this.elem[8], this.elem[9], this.elem[10], this.elem[11]); }\r\n    /** row vector */_w(): Vec4 { return new Vec4(this.elem[12], this.elem[13], this.elem[14], this.elem[15]); }\r\n    copy(m2: Mat4): Mat4 {\r\n        for (var i = 0; i < 16; i++) {\r\n            this.elem[i] = m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    add(m2: Mat4): Mat4 {\r\n        let m = new Mat4();\r\n        for (var i = 0; i < 16; i++) {\r\n            m.elem[i] = this.elem[i] + m2.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    adds(m2: Mat4): Mat4 {\r\n        for (var i = 0; i < 16; i++) {\r\n            this.elem[i] += m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    neg(): Mat4 {\r\n        let m = new Mat4();\r\n        for (var i = 0; i < 16; i++) {\r\n            m.elem[i] = -this.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    negs(): Mat4 {\r\n        for (var i = 0; i < 16; i++) {\r\n            this.elem[i] = -this.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    sub(m2: Mat4): Mat4 {\r\n        let m = new Mat4();\r\n        for (var i = 0; i < 16; i++) {\r\n            m.elem[i] = this.elem[i] - m2.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    subs(m2: Mat4): Mat4 {\r\n        for (var i = 0; i < 16; i++) {\r\n            this.elem[i] -= m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    mulf(k: number): Mat4 {\r\n        let m = new Mat4();\r\n        for (var i = 0; i < 16; i++) {\r\n            m.elem[i] = this.elem[i] * k;\r\n        }\r\n        return m;\r\n    }\r\n    mulfs(k: number): Mat4 {\r\n        for (var i = 0; i < 16; i++) {\r\n            this.elem[i] *= k;\r\n        }\r\n        return this;\r\n    }\r\n    mulv(v: Vec4): Vec4 {\r\n        let a = this.elem;\r\n        return new Vec4(\r\n            v.x * a[0] + v.y * a[1] + v.z * a[2] + v.w * a[3],\r\n            v.x * a[4] + v.y * a[5] + v.z * a[6] + v.w * a[7],\r\n            v.x * a[8] + v.y * a[9] + v.z * a[10] + v.w * a[11],\r\n            v.x * a[12] + v.y * a[13] + v.z * a[14] + v.w * a[15]\r\n        );\r\n    }\r\n    mul(m: Mat4): Mat4 {\r\n        let a = this.elem; let b = m.elem;\r\n        return new Mat4(\r\n            a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12], a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13], a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14], a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15],\r\n            a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12], a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13], a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14], a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15],\r\n            a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12], a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13], a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14], a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15],\r\n            a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12], a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13], a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14], a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15],\r\n        );\r\n    }\r\n    /** this = this * m; */\r\n    mulsr(m: Mat4): Mat4 {\r\n        let a = this.elem; let b = m.elem;\r\n        this.set(\r\n            a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12], a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13], a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14], a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15],\r\n            a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12], a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13], a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14], a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15],\r\n            a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12], a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13], a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14], a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15],\r\n            a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12], a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13], a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14], a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15],\r\n        );\r\n        return this;\r\n    }\r\n    /** this = m * this; */\r\n    mulsl(m: Mat4): Mat4 {\r\n        let b = this.elem; let a = m.elem;\r\n        this.set(\r\n            a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12], a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13], a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14], a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15],\r\n            a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12], a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13], a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14], a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15],\r\n            a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12], a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13], a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14], a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15],\r\n            a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12], a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13], a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14], a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15],\r\n        );\r\n        return this;\r\n    }\r\n    /** this = m1 * m2; */\r\n    mulset(m1: Mat4, m2: Mat4): Mat4 {\r\n        let a = m1.elem; let b = m2.elem;\r\n        this.set(\r\n            a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12], a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13], a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14], a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15],\r\n            a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12], a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13], a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14], a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15],\r\n            a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12], a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13], a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14], a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15],\r\n            a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12], a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13], a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14], a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15],\r\n        );\r\n        return this;\r\n    }\r\n    setFrom3DRotation(q: Quaternion): Mat4 {\r\n        let xt2 = q.y + q.y, yt2 = q.z + q.z, zt2 = q.w + q.w;\r\n        let x2 = q.y * xt2;\r\n        let y2 = q.z * yt2;\r\n        let z2 = q.w * zt2;\r\n\r\n        let xy = q.y * yt2;\r\n        let yz = q.w * yt2;\r\n        let xz = q.w * xt2;\r\n\r\n        let wx = q.x * xt2;\r\n        let wy = q.x * yt2;\r\n        let wz = q.x * zt2;\r\n        return this.set(\r\n            1 - (y2 + z2), xy - wz, xz + wy, 0,\r\n            xy + wz, 1 - x2 - z2, yz - wx, 0,\r\n            xz - wy, yz + wx, 1 - x2 - y2, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n    setFromQuaternionL(q: Quaternion): Mat4 {\r\n        return this.set(\r\n            q.x, -q.y, -q.z, -q.w,\r\n            q.y, q.x, -q.w, q.z,\r\n            q.z, q.w, q.x, -q.y,\r\n            q.w, -q.z, q.y, q.x\r\n        );\r\n    }\r\n    setFromQuaternionR(q: Quaternion): Mat4 {\r\n        return this.set(\r\n            q.x, -q.y, -q.z, -q.w,\r\n            q.y, q.x, q.w, -q.z,\r\n            q.z, -q.w, q.x, q.y,\r\n            q.w, q.z, -q.y, q.x\r\n        );\r\n    }\r\n    setFromRotor(r: Rotor): Mat4 {\r\n        return this.setFromQuaternionL(r.l).mulsr(_mat4.setFromQuaternionR(r.r));\r\n    }\r\n    setFromRotorconj(r: Rotor): Mat4 {\r\n        return this.setFromQuaternionL(r.l.conj()).mulsr(_mat4.setFromQuaternionR(r.r.conj()));\r\n    }\r\n    det(): number {\r\n        let me = this.elem;\r\n        let n11 = me[0], n21 = me[1], n31 = me[2], n41 = me[3],\r\n            n12 = me[4], n22 = me[5], n32 = me[6], n42 = me[7],\r\n            n13 = me[8], n23 = me[9], n33 = me[10], n43 = me[11],\r\n            n14 = me[12], n24 = me[13], n34 = me[14], n44 = me[15],\r\n            t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n            t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n            t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n            t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n        return n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n    }\r\n    inv(): Mat4 {\r\n        let me = this.elem;\r\n        let n11 = me[0], n21 = me[1], n31 = me[2], n41 = me[3],\r\n            n12 = me[4], n22 = me[5], n32 = me[6], n42 = me[7],\r\n            n13 = me[8], n23 = me[9], n33 = me[10], n43 = me[11],\r\n            n14 = me[12], n24 = me[13], n34 = me[14], n44 = me[15],\r\n            t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n            t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n            t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n            t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n        let det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n        if (det === 0) {\r\n            console.warn(\"Matrix determinant is 0\");\r\n            return new Mat4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n        }\r\n        let detInv = 1 / det;\r\n        return new Mat4(\r\n            t11 * detInv,\r\n            (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv,\r\n            (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv,\r\n            (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv,\r\n            t12 * detInv,\r\n            (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv,\r\n            (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv,\r\n            (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv,\r\n            t13 * detInv,\r\n            (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv,\r\n            (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv,\r\n            (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv,\r\n            t14 * detInv,\r\n            (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv,\r\n            (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv,\r\n            (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv,\r\n        );\r\n    }\r\n    invs(): Mat4 {\r\n        let me = this.elem;\r\n        let n11 = me[0], n21 = me[1], n31 = me[2], n41 = me[3],\r\n            n12 = me[4], n22 = me[5], n32 = me[6], n42 = me[7],\r\n            n13 = me[8], n23 = me[9], n33 = me[10], n43 = me[11],\r\n            n14 = me[12], n24 = me[13], n34 = me[14], n44 = me[15],\r\n            t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n            t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n            t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n            t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n        let det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n        if (det === 0) {\r\n            var msg = \"Matrix determinant is 0\";\r\n            console.warn(msg);\r\n            me.fill(0);\r\n            return this;\r\n        }\r\n        let detInv = 1 / det;\r\n        me[0] = t11 * detInv;\r\n        me[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\r\n        me[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\r\n        me[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\r\n        me[4] = t12 * detInv;\r\n        me[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\r\n        me[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\r\n        me[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\r\n        me[8] = t13 * detInv;\r\n        me[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\r\n        me[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\r\n        me[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\r\n        me[12] = t14 * detInv;\r\n        me[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\r\n        me[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\r\n        me[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\r\n        return this;\r\n    }\r\n    pushPool(pool: Mat4Pool = mat4Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\nexport let _mat4 = new Mat4();","import { _180, _360 } from \"../const.js\";\r\nimport { Pool } from \"../pool.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport { Mat3 } from \"./mat3.js\";\r\nimport { Mat4 } from \"./mat4.js\";\r\nimport { Vec3, _vec3, _vec3_1, _vec3_2 } from \"./vec3.js\";\r\nimport { Vec4 } from \"./vec4.js\";\r\n\r\nexport class QuaternionPool extends Pool<Quaternion> {\r\n    constructObject() { return new Quaternion; }\r\n}\r\nexport const quaternionPool = new QuaternionPool;\r\nexport class Quaternion {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n    constructor(x: number = 1, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n    set(x: number = 1, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w; return this;\r\n    }\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n    copy(v: Vec4 | Quaternion) {\r\n        this.x = v.x; this.y = v.y;\r\n        this.z = v.z; this.w = v.w;\r\n        return this;\r\n    }\r\n    yzw(): Vec3 { return new Vec3(this.y, this.z, this.w); }\r\n    ywz(): Vec3 { return new Vec3(this.y, this.w, this.z); }\r\n    zyw(): Vec3 { return new Vec3(this.z, this.y, this.w); }\r\n    zwy(): Vec3 { return new Vec3(this.z, this.w, this.y); }\r\n    wzy(): Vec3 { return new Vec3(this.w, this.z, this.y); }\r\n    wyz(): Vec3 { return new Vec3(this.w, this.y, this.z); }\r\n    wxyz(): Vec4 { return new Vec4(this.w, this.x, this.y, this.z); }\r\n    wxzy(): Vec4 { return new Vec4(this.w, this.x, this.z, this.y); }\r\n    wyxz(): Vec4 { return new Vec4(this.w, this.y, this.x, this.z); }\r\n    wzxy(): Vec4 { return new Vec4(this.w, this.z, this.x, this.y); }\r\n    yxzw(): Vec4 { return new Vec4(this.y, this.x, this.z, this.w); }\r\n    xzwy(): Vec4 { return new Vec4(this.x, this.z, this.w, this.y); }\r\n    xyzw(): Vec4 { return new Vec4(this.x, this.y, this.z, this.w); }\r\n\r\n    clone(): Quaternion {\r\n        return new Quaternion(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    neg(): Quaternion {\r\n        return new Quaternion(-this.x, -this.y, -this.z, -this.w);\r\n    }\r\n    negs(): Quaternion {\r\n        this.x = - this.x; this.y = -this.y; this.z = -this.z; this.w = -this.w;\r\n        return this;\r\n    }\r\n    mul(q: Quaternion | Vec4): Quaternion {\r\n        return new Quaternion(\r\n            this.x * q.x - this.y * q.y - this.z * q.z - this.w * q.w,\r\n            this.x * q.y + this.y * q.x + this.z * q.w - this.w * q.z,\r\n            this.x * q.z - this.y * q.w + this.z * q.x + this.w * q.y,\r\n            this.x * q.w + this.y * q.z - this.z * q.y + this.w * q.x\r\n        );\r\n    }\r\n    /** this = this * q; */\r\n    mulsr(q: Quaternion | Vec4): Quaternion {\r\n        var x = this.x * q.x - this.y * q.y - this.z * q.z - this.w * q.w;\r\n        var y = this.x * q.y + this.y * q.x + this.z * q.w - this.w * q.z;\r\n        var z = this.x * q.z - this.y * q.w + this.z * q.x + this.w * q.y;\r\n        this.w = this.x * q.w + this.y * q.z - this.z * q.y + this.w * q.x;\r\n        this.x = x; this.y = y; this.z = z; return this;\r\n    }\r\n    /** this = q * this; */\r\n    mulsl(q: Quaternion | Vec4): Quaternion {\r\n        var x = q.x * this.x - q.y * this.y - q.z * this.z - q.w * this.w;\r\n        var y = q.x * this.y + q.y * this.x + q.z * this.w - q.w * this.z;\r\n        var z = q.x * this.z - q.y * this.w + q.z * this.x + q.w * this.y;\r\n        this.w = q.x * this.w + q.y * this.z - q.z * this.y + q.w * this.x;\r\n        this.x = x; this.y = y; this.z = z; return this;\r\n    }\r\n    /** this = this * conj(q); */\r\n    mulsrconj(q: Quaternion | Vec4): Quaternion {\r\n        var x = this.x * q.x + this.y * q.y + this.z * q.z + this.w * q.w;\r\n        var y = -this.x * q.y + this.y * q.x - this.z * q.w + this.w * q.z;\r\n        var z = -this.x * q.z + this.y * q.w + this.z * q.x - this.w * q.y;\r\n        this.w = -this.x * q.w - this.y * q.z + this.z * q.y + this.w * q.x;\r\n        this.x = x; this.y = y; this.z = z; return this;\r\n    }\r\n    /** this = conj(q) * this; */\r\n    mulslconj(q: Quaternion | Vec4): Quaternion {\r\n        var x = q.x * this.x + q.y * this.y + q.z * this.z + q.w * this.w;\r\n        var y = q.x * this.y - q.y * this.x - q.z * this.w + q.w * this.z;\r\n        var z = q.x * this.z + q.y * this.w - q.z * this.x - q.w * this.y;\r\n        this.w = q.x * this.w - q.y * this.z + q.z * this.y - q.w * this.x;\r\n        this.x = x; this.y = y; this.z = z; return this;\r\n    }\r\n    conj(): Quaternion {\r\n        return new Quaternion(this.x, -this.y, -this.z, -this.w);\r\n    }\r\n    conjs(): Quaternion {\r\n        this.y = -this.y; this.z = -this.z; this.w = -this.w; return this;\r\n    }\r\n    norm(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n    norms(): Quaternion {\r\n        let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n        n = n == 0 ? 0 : (1 / n);\r\n        this.x *= n; this.y *= n; this.z *= n; this.w *= n; return this;\r\n    }\r\n    /** axis must be a unit vector, if not, use Vec3.exp() instead */\r\n    static fromAxis(axis: Vec3, angle: number): Quaternion {\r\n        angle *= 0.5;\r\n        let s = Math.sin(angle);\r\n        return new Quaternion(Math.cos(angle), axis.x * s, axis.y * s, axis.z * s);\r\n    }\r\n    sqrt(): Quaternion {\r\n        // we choose pos value because it's closer to 1\r\n        let a = Math.sqrt(0.5 * (this.x + 1));\r\n        let div2a = 1 / (2 * a);\r\n        return new Quaternion(a, this.y * div2a, this.z * div2a, this.w * div2a);\r\n    }\r\n    sqrts(): Quaternion {\r\n        // we choose pos value because it's closer to 1\r\n        let a = Math.sqrt(0.5 * (this.x + 1));\r\n        let div2a = 1 / (2 * a);\r\n        return this.set(a, this.y * div2a, this.z * div2a, this.w * div2a);\r\n    }\r\n    /** get generator of this, Quaternion must be normalized */\r\n    log(): Vec3 {\r\n        let s = Math.acos(this.x);\r\n        return this.yzw().mulfs(2 * s / Math.sin(s));\r\n    }\r\n    static slerp(a: Quaternion, b: Quaternion, t: number): Quaternion {\r\n        let cosf = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n        let A: number, B: number;\r\n        if (Math.abs(cosf) > 0.99999) {\r\n            A = 1 - t; B = t;\r\n        } else {\r\n            let f = Math.acos(Math.abs(cosf));\r\n            let _1s = 1 / Math.sin(f);\r\n            A = Math.sin((1 - t) * f) * _1s;\r\n            B = Math.sin(t * f) * _1s;\r\n            if (cosf < 0) B = -B;\r\n        }\r\n        return new Quaternion(\r\n            a.x * A + b.x * B, a.y * A + b.y * B, a.z * A + b.z * B, a.w * A + b.w * B\r\n        );\r\n    }\r\n    toRotateMat(): Mat4 {\r\n        let xt2 = this.y + this.y, yt2 = this.z + this.z, zt2 = this.w + this.w;\r\n        let x2 = this.y * xt2;\r\n        let y2 = this.z * yt2;\r\n        let z2 = this.w * zt2;\r\n\r\n        let xy = this.y * yt2;\r\n        let yz = this.w * yt2;\r\n        let xz = this.w * xt2;\r\n\r\n        let wx = this.x * xt2;\r\n        let wy = this.x * yt2;\r\n        let wz = this.x * zt2;\r\n        return new Mat4(\r\n            1 - (y2 + z2), xy - wz, xz + wy, 0,\r\n            xy + wz, 1 - x2 - z2, yz - wx, 0,\r\n            xz - wy, yz + wx, 1 - x2 - y2, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n\r\n    toMat3(): Mat3 {\r\n        let xt2 = this.y + this.y, yt2 = this.z + this.z, zt2 = this.w + this.w;\r\n        let x2 = this.y * xt2;\r\n        let y2 = this.z * yt2;\r\n        let z2 = this.w * zt2;\r\n\r\n        let xy = this.y * yt2;\r\n        let yz = this.w * yt2;\r\n        let xz = this.w * xt2;\r\n\r\n        let wx = this.x * xt2;\r\n        let wy = this.x * yt2;\r\n        let wz = this.x * zt2;\r\n        return new Mat3(\r\n            1 - (y2 + z2), xy - wz, xz + wy,\r\n            xy + wz, 1 - x2 - z2, yz - wx,\r\n            xz - wy, yz + wx, 1 - x2 - y2\r\n        );\r\n    }\r\n    toLMat4(): Mat4 {\r\n        return new Mat4(\r\n            this.x, -this.y, -this.z, -this.w,\r\n            this.y, this.x, -this.w, this.z,\r\n            this.z, this.w, this.x, -this.y,\r\n            this.w, -this.z, this.y, this.x\r\n        );\r\n    }\r\n    toRMat4(): Mat4 {\r\n        return new Mat4(\r\n            this.x, -this.y, -this.z, -this.w,\r\n            this.y, this.x, this.w, -this.z,\r\n            this.z, -this.w, this.x, this.y,\r\n            this.w, this.z, -this.y, this.x\r\n        );\r\n    }\r\n    expset(v: Vec3) {\r\n        let g = v.norm() * 0.5;\r\n        let s = Math.abs(g) > 0.005 ? Math.sin(g) / g * 0.5 : 0.5 - g * g / 12;\r\n        return this.set(Math.cos(g), s * v.x, s * v.y, s * v.z);\r\n    }\r\n    static rand(): Quaternion {\r\n        let a = Math.random() * _360;\r\n        let b = Math.random() * _360;\r\n        let c = Math.random();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return new Quaternion(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    static srand(seed: Srand): Quaternion {\r\n        let a = seed.nextf() * _360;\r\n        let b = seed.nextf() * _360;\r\n        let c = seed.nextf();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return new Quaternion(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    randset(): Quaternion {\r\n        let a = Math.random() * _360;\r\n        let b = Math.random() * _360;\r\n        let c = Math.random();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return this.set(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    srandset(seed: Srand): Quaternion {\r\n        let a = seed.nextf() * _360;\r\n        let b = seed.nextf() * _360;\r\n        let c = seed.nextf();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return this.set(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    /** \"from\" and \"to\" must be normalized vectors*/\r\n    static lookAt(from: Vec3, to: Vec3): Quaternion {\r\n\r\n        let right = _vec3.wedgeset(from, to);\r\n        let s = right.norm();\r\n        let c = from.dot(to);\r\n        if (s > 0.000001) { // not aligned\r\n            right.mulfs(Math.atan2(s, c) / s);\r\n        } else if (c < 0) { // almost n reversely aligned\r\n            let v = _vec3_1.wedgeset(from, Vec3.x);\r\n            if (v.norm1() < 0.01) {\r\n                v = _vec3_1.wedgeset(from, Vec3.y);\r\n            }\r\n            return v.norms().mulfs(_180).exp();\r\n        }\r\n        return right.exp();\r\n    }\r\n    setFromLookAt(from: Vec3, to: Vec3) {\r\n\r\n        let right = _vec3.wedgeset(from, to);\r\n        let s = right.norm();\r\n        let c = from.dot(to);\r\n        if (s > 0.000001) { // not aligned\r\n            right.mulfs(Math.atan2(s, c) / s);\r\n        } else if (c < 0) { // almost n reversely aligned\r\n            let v = _vec3_1.wedgeset(from, Vec3.x);\r\n            if (v.norm1() < 0.01) {\r\n                v = _vec3_1.wedgeset(from, Vec3.y);\r\n            }\r\n            return this.expset(v.norms().mulfs(_180));\r\n        }\r\n        return this.expset(right);\r\n    }\r\n    pushPool(pool: QuaternionPool = quaternionPool) {\r\n        pool.push(this);\r\n    }\r\n    /** set rotor from a rotation matrix,\r\n         * i.e. m must be orthogonal with determinant 1.\r\n         * algorithm: iteratively aligne each axis. */\r\n    setFromMat3(m: Mat3) {\r\n        return this.setFromLookAt(Vec3.x, m.x_()).mulsl(\r\n            _Q.setFromLookAt(_vec3_2.copy(Vec3.y).rotates(this), m.y_())\r\n        )\r\n    }\r\n}\r\nexport let _Q = new Quaternion();\r\nexport let _Q_1 = new Quaternion();\r\nexport let _Q_2 = new Quaternion();","import { _180 } from \"../const.js\";\r\nimport { Pool } from \"../pool.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport { Bivec, _bivec } from \"./bivec.js\";\r\nimport { Mat4, _mat4 } from \"./mat4.js\";\r\nimport { Quaternion } from \"./quaternion.js\";\r\nimport { Vec3, _vec3_1, _vec3_2, _vec3_3, _vec3_4, _vec3_5 } from \"./vec3.js\";\r\nimport { Vec4, _vec4 } from \"./vec4.js\";\r\n\r\nexport class RotorPool extends Pool<Rotor> {\r\n    constructObject() { return new Rotor; }\r\n}\r\nexport const rotorPool = new RotorPool;\r\nexport class Rotor {\r\n    l: Quaternion;\r\n    r: Quaternion;\r\n    constructor(l: Quaternion = new Quaternion(), r: Quaternion = new Quaternion()) {\r\n        this.l = l;\r\n        this.r = r;\r\n    }\r\n    clone(): Rotor {\r\n        return new Rotor(this.l.clone(), this.r.clone());\r\n    }\r\n    copy(r: Rotor): Rotor {\r\n        this.l.copy(r.l);\r\n        this.r.copy(r.r);\r\n        return this;\r\n    }\r\n    conj(): Rotor {\r\n        return new Rotor(this.l.conj(), this.r.conj());\r\n    }\r\n    conjs(): Rotor {\r\n        this.l.conjs(), this.r.conjs(); return this;\r\n    }\r\n    norms(): Rotor {\r\n        this.l.norms();\r\n        this.r.norms();\r\n        return this;\r\n    }\r\n    /** Apply this to R: this * R;\r\n     * \r\n     * [this.l * R.l, R.r * this.r]; */\r\n    mul(R: Rotor): Rotor {\r\n        return new Rotor(this.l.mul(R.l), R.r.mul(this.r));\r\n    }\r\n    /** Apply this to R: this = this * R;\r\n     * \r\n     * [this.l, this.r] = [this.l * R.l, R.r * this.r]; */\r\n    mulsr(R: Rotor): Rotor {\r\n        this.l.mulsr(R.l);\r\n        this.r.mulsl(R.r);\r\n        return this;\r\n    }\r\n    /** Apply R to this: this = R * this;\r\n     * \r\n     * [this.l, this.r] = [R.l * this.l, this.r * R.r]; */\r\n    mulsl(R: Rotor): Rotor {\r\n        this.l.mulsl(R.l);\r\n        this.r.mulsr(R.r);\r\n        return this;\r\n    }\r\n    /** Apply this to R: this = this * conj(R);\r\n     * \r\n     * [this.l, this.r] = [this.l * conj(R.l), conj(R.r) * this.r]; */\r\n    mulsrconj(R: Rotor): Rotor {\r\n        this.l.mulsrconj(R.l);\r\n        this.r.mulslconj(R.r);\r\n        return this;\r\n    }\r\n    /** Apply R to this: this = conj(R) * this;\r\n     * \r\n     * [this.l, this.r] = [conj(R.l) * this.l, this.r * conj(R.r)]; */\r\n    mulslconj(R: Rotor): Rotor {\r\n        this.l.mulslconj(R.l);\r\n        this.r.mulsrconj(R.r);\r\n        return this;\r\n    }\r\n    sqrt(): Rotor {\r\n        return new Rotor(this.l.sqrt(), this.r.sqrt());\r\n    }\r\n    isFinite(): boolean {\r\n        return (\r\n            isFinite(this.l.x) && isFinite(this.l.y) && isFinite(this.l.z) && isFinite(this.l.w) &&\r\n            isFinite(this.r.x) && isFinite(this.r.y) && isFinite(this.r.z) && isFinite(this.r.w)\r\n        );\r\n    }\r\n    expset(bivec: Bivec): Rotor {\r\n        let A = _vec3_1.set(bivec.xy + bivec.zw, bivec.xz - bivec.yw, bivec.xw + bivec.yz);\r\n        let B = _vec3_2.set(bivec.xy - bivec.zw, bivec.xz + bivec.yw, bivec.xw - bivec.yz);\r\n        let a = A.norm(); let b = B.norm();\r\n        let aa = a * 0.5; let bb = b * 0.5;\r\n        let sa = (a > 0.005 ? Math.sin(aa) / a : 0.5 - a * a / 12);\r\n        let sb = (b > 0.005 ? Math.sin(bb) / b : 0.5 - b * b / 12);\r\n        this.l.set(Math.cos(aa), sa * A.x, sa * A.y, sa * A.z);\r\n        this.r.set(Math.cos(bb), sb * B.x, sb * B.y, sb * B.z);\r\n        return this;\r\n    }\r\n    log(): Bivec {\r\n        let a: Vec3, b: Vec3;\r\n        if (Math.abs(this.l.x) > 0.9999) {\r\n            a = this.l.yzw();\r\n        } else {\r\n            let ls = Math.acos(this.l.x);\r\n            a = this.l.yzw().mulfs(ls / Math.sin(ls));\r\n        }\r\n        if (Math.abs(this.r.x) > 0.9999) {\r\n            b = this.r.yzw();\r\n        } else {\r\n            let rs = Math.acos(this.r.x);\r\n            b = this.r.yzw().mulfs(rs / Math.sin(rs));\r\n        }\r\n        return new Bivec(\r\n            a.x + b.x, a.y + b.y, a.z + b.z, a.z - b.z, b.y - a.y, a.x - b.x\r\n        );\r\n    }\r\n    static slerp(a: Rotor, b: Rotor, t: number): Rotor {\r\n        return new Rotor(\r\n            Quaternion.slerp(a.l, b.l, t),\r\n            Quaternion.slerp(a.r, b.r, t)\r\n        );\r\n    }\r\n    toMat4(): Mat4 {\r\n        return this.l.toLMat4().mulsr(_mat4.setFromQuaternionR(this.r));\r\n    }\r\n\r\n    /** set rotor from a rotation matrix,\r\n     * i.e. m must be orthogonal with determinant 1.\r\n     * algorithm: iteratively aligne each axis. */\r\n    setFromMat4(m: Mat4) {\r\n        return this.setFromLookAt(Vec4.x, m.x_()).mulsl(\r\n            _r.setFromLookAt(_vec4.copy(Vec4.y).rotates(this), m.y_())\r\n        ).mulsl(\r\n            _r.setFromLookAt(_vec4.copy(Vec4.z).rotates(this), m.z_())\r\n        );\r\n    }\r\n    /** Rotor: rotate from plane1 to plane2\r\n     *  Bivectors must be simple and normalised */\r\n    static lookAtbb(from: Bivec, to: Bivec): Rotor {\r\n        let A1 = _vec3_2.set(from.xy + from.zw, from.xz - from.yw, from.xw + from.yz);\r\n        let B1 = _vec3_3.set(from.xy - from.zw, from.xz + from.yw, from.xw - from.yz);\r\n        let A2 = _vec3_4.set(to.xy + to.zw, to.xz - to.yw, to.xw + to.yz);\r\n        let B2 = _vec3_5.set(to.xy - to.zw, to.xz + to.yw, to.xw - to.yz);\r\n        return new Rotor(Quaternion.lookAt(A1, A2), Quaternion.lookAt(B2, B1));\r\n    }\r\n    /** plane must be a unit simple vector, if not, use Bivec.exp() instead \r\n     * angle1 is rotation angle on the plane\r\n     * angle2 is rotatoin angle on the perpendicular plane (right handed, eg: exy + ezw)\r\n    */\r\n    static fromPlane(plane: Bivec, angle1: number, angle2: number = 0): Rotor {\r\n        let a = (angle1 + angle2) * 0.5, sa = Math.sin(a);\r\n        let b = (angle1 - angle2) * 0.5, sb = Math.sin(b);\r\n        return new Rotor(// norm of half of A is 1\r\n            new Quaternion(Math.cos(a), sa * (plane.xy + plane.zw), sa * (plane.xz - plane.yw), sa * (plane.xw + plane.yz)),\r\n            new Quaternion(Math.cos(b), sb * (plane.xy - plane.zw), sb * (plane.xz + plane.yw), sb * (plane.xw - plane.yz))\r\n        );\r\n    }\r\n\r\n    /** \"from\" and \"to\" must be normalized vectors*/\r\n    static lookAt(from: Vec4, to: Vec4): Rotor {\r\n\r\n        let right = _bivec.wedgevvset(from, to);\r\n        let s = right.norm();\r\n        let c = from.dot(to);\r\n        if (s > 0.000001) { // not aligned\r\n            right.mulfs(Math.atan2(s, c) / s);\r\n        } else if (c < 0) { // almost n reversely aligned\r\n            let v = _bivec.wedgevvset(from, Vec4.x);\r\n            if (v.norm1() < 0.01) {\r\n                v = _bivec.wedgevvset(from, Vec4.y);\r\n            }\r\n            return v.norms().mulfs(_180).exp();\r\n        }\r\n        return right.exp();\r\n    }\r\n\r\n    // todo: lookAtvb(from: Vec4, to: Bivec): Rotor dir to plane or reverse\r\n    static lookAtvb(from: Vec4, to: Bivec): Rotor {\r\n        let toVect = _vec4.copy(from).projbs(to).norms();\r\n        return Rotor.lookAt(from, toVect);\r\n    }\r\n\r\n    /** \"from\" and \"to\" must be normalized vectors */\r\n    setFromLookAt(from: Vec4, to: Vec4): Rotor {\r\n        let right = _bivec.wedgevvset(from, to);\r\n        let s = right.norm();\r\n        let c = from.dot(to);\r\n        if (s > 0.000001) { // not aligned\r\n            right.mulfs(Math.atan2(s, c) / s);\r\n        } else if (c < 0) { // almost n reversely aligned\r\n            let v = _bivec.wedgevvset(from, Vec4.x);\r\n            if (v.norm1() < 0.01) {\r\n                v = _bivec.wedgevvset(from, Vec4.y);\r\n            }\r\n            return this.expset(v.norms().mulfs(_180));\r\n        }\r\n        return this.expset(right);\r\n    }\r\n    static rand(): Rotor {\r\n        return new Rotor(Quaternion.rand(), Quaternion.rand());\r\n    }\r\n    static srand(seed: Srand): Rotor {\r\n        return new Rotor(Quaternion.srand(seed), Quaternion.srand(seed));\r\n    }\r\n    randset(): Rotor {\r\n        this.l.randset();\r\n        this.r.randset();\r\n        return this;\r\n    }\r\n\r\n    srandset(seed: Srand): Rotor {\r\n        this.l.srandset(seed);\r\n        this.r.srandset(seed);\r\n        return this;\r\n    }\r\n    pushPool(pool: RotorPool = rotorPool) {\r\n        pool.push(this);\r\n    }\r\n\r\n    // todo: fixbug\r\n\r\n    // fromMat4(m: Mat4) {\r\n    //     return Rotor.lookAt(Vec4.x, m.x_()).mulsl(\r\n    //         _r.setFromLookAt(_vec4.copy(Vec4.y).rotates(this), m.y_())\r\n    //     ).mulsl(\r\n    //         _r.setFromLookAt(_vec4.copy(Vec4.z).rotates(this), m.z_())\r\n    //     );\r\n    // }\r\n}\r\n\r\nexport let _r = new Rotor();","import { Pool } from \"../pool.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport { Quaternion, _Q_1, _Q_2 } from \"./quaternion.js\";\r\nimport { Rotor } from \"./rotor.js\";\r\nimport { Vec3, _vec3_1, _vec3_2 } from \"./vec3.js\";\r\nimport { Vec4 } from \"./vec4.js\";\r\n\r\nexport class BivecPool extends Pool<Bivec>{\r\n    constructObject() { return new Bivec; }\r\n}\r\nexport const bivecPool = new BivecPool;\r\nexport class Bivec {\r\n    xy: number; xz: number; xw: number;\r\n    yz: number; yw: number; zw: number;\r\n    static readonly xy = new Bivec(1, 0, 0, 0, 0, 0);\r\n    static readonly xz = new Bivec(0, 1, 0, 0, 0, 0);\r\n    static readonly xw = new Bivec(0, 0, 1, 0, 0, 0);\r\n    static readonly yz = new Bivec(0, 0, 0, 1, 0, 0);\r\n    static readonly yw = new Bivec(0, 0, 0, 0, 1, 0);\r\n    static readonly zw = new Bivec(0, 0, 0, 0, 0, 1);\r\n    static readonly yx = new Bivec(-1, 0, 0, 0, 0, 0);\r\n    static readonly zx = new Bivec(0, -1, 0, 0, 0, 0);\r\n    static readonly wx = new Bivec(0, 0, -1, 0, 0, 0);\r\n    static readonly zy = new Bivec(0, 0, 0, -1, 0, 0);\r\n    static readonly wy = new Bivec(0, 0, 0, 0, -1, 0);\r\n    static readonly wz = new Bivec(0, 0, 0, 0, 0, -1);\r\n    isFinite(): boolean {\r\n        return isFinite(this.xy) && isFinite(this.xz) && isFinite(this.xw) && isFinite(this.yz) && isFinite(this.yw) && isFinite(this.zw);\r\n    }\r\n    constructor(\r\n        xy: number = 0, xz: number = 0, xw: number = 0,\r\n        yz: number = 0, yw: number = 0, zw: number = 0\r\n    ) {\r\n        this.xy = xy; this.xz = xz; this.xw = xw;\r\n        this.yz = yz; this.yw = yw; this.zw = zw;\r\n    }\r\n    copy(v: Bivec): Bivec {\r\n        this.xy = v.xy; this.xz = v.xz; this.xw = v.xw;\r\n        this.yz = v.yz; this.yw = v.yw; this.zw = v.zw; return this;\r\n    }\r\n    set(xy: number = 0, xz: number = 0, xw: number = 0,\r\n        yz: number = 0, yw: number = 0, zw: number = 0): Bivec {\r\n        this.xy = xy; this.xz = xz; this.xw = xw;\r\n        this.yz = yz; this.yw = yw; this.zw = zw; return this;\r\n    }\r\n    clone(): Bivec {\r\n        return new Bivec(this.xy, this.xz, this.xw, this.yz, this.yw, this.zw);\r\n    }\r\n    flat(): number[] {\r\n        return [this.xy, this.xz, this.xw, this.yz, this.yw, this.zw];\r\n    }\r\n    add(bv: Bivec): Bivec {\r\n        return new Bivec(\r\n            this.xy + bv.xy, this.xz + bv.xz,\r\n            this.xw + bv.xw, this.yz + bv.yz,\r\n            this.yw + bv.yw, this.zw + bv.zw\r\n        );\r\n    }\r\n    adds(bv: Bivec): Bivec {\r\n        this.xy += bv.xy; this.xz += bv.xz;\r\n        this.xw += bv.xw; this.yz += bv.yz;\r\n        this.yw += bv.yw; this.zw += bv.zw;\r\n        return this;\r\n    }\r\n    addset(bv1: Bivec, bv2: Bivec): Bivec {\r\n        return this.set(\r\n            bv1.xy + bv2.xy, bv1.xz + bv2.xz,\r\n            bv1.xw + bv2.xw, bv1.yz + bv2.yz,\r\n            bv1.yw + bv2.yw, bv1.zw + bv2.zw\r\n        );\r\n    }\r\n    addmulfs(bv: Bivec, k: number): Bivec {\r\n        this.xy += bv.xy * k; this.xz += bv.xz * k;\r\n        this.xw += bv.xw * k; this.yz += bv.yz * k;\r\n        this.yw += bv.yw * k; this.zw += bv.zw * k;\r\n        return this;\r\n    }\r\n    neg(): Bivec {\r\n        return new Bivec(-this.xy, -this.xz, -this.xw, -this.yz, -this.yw, -this.zw);\r\n    }\r\n    negs(): Bivec {\r\n        this.xy = -this.xy; this.xz = -this.xz; this.xw = -this.xw;\r\n        this.yz = -this.yz; this.yw = -this.yw; this.zw = -this.zw;\r\n        return this;\r\n    }\r\n    sub(bv: Bivec): Bivec {\r\n        return new Bivec(\r\n            this.xy - bv.xy, this.xz - bv.xz,\r\n            this.xw - bv.xw, this.yz - bv.yz,\r\n            this.yw - bv.yw, this.zw - bv.zw\r\n        );\r\n    }\r\n    subs(bv: Bivec): Bivec {\r\n        this.xy -= bv.xy; this.xz -= bv.xz;\r\n        this.xw -= bv.xw; this.yz -= bv.yz;\r\n        this.yw -= bv.yw; this.zw -= bv.zw;\r\n        return this;\r\n    }\r\n    subset(bv1: Bivec, bv2: Bivec): Bivec {\r\n        return this.set(\r\n            bv1.xy - bv2.xy, bv1.xz - bv2.xz,\r\n            bv1.xw - bv2.xw, bv1.yz - bv2.yz,\r\n            bv1.yw - bv2.yw, bv1.zw - bv2.zw\r\n        );\r\n    }\r\n    mulf(k: number): Bivec {\r\n        return new Bivec(k * this.xy, k * this.xz, k * this.xw, k * this.yz, k * this.yw, k * this.zw);\r\n    }\r\n    mulfs(k: number): Bivec {\r\n        this.xy *= k; this.xz *= k; this.xw *= k;\r\n        this.yz *= k; this.yw *= k; this.zw *= k;\r\n        return this;\r\n    }\r\n    divf(k: number): Bivec {\r\n        k = 1 / k;\r\n        return new Bivec(k * this.xy, k * this.xz, k * this.xw, k * this.yz, k * this.yw, k * this.zw);\r\n    }\r\n    divfs(k: number): Bivec {\r\n        k = 1 / k;\r\n        this.xy *= k; this.xz *= k; this.xw *= k;\r\n        this.yz *= k; this.yw *= k; this.zw *= k;\r\n        return this;\r\n    }\r\n    dot(biv: Bivec): number {\r\n        return this.xy * biv.xy + this.yz * biv.yz + this.zw * biv.zw + this.xw * biv.xw + this.xz * biv.xz + this.yw * biv.yw;\r\n    }\r\n    norm(): number {\r\n        return Math.sqrt(this.xy * this.xy + this.xz * this.xz + this.yz * this.yz + this.yw * this.yw + this.zw * this.zw + this.xw * this.xw);\r\n    }\r\n    norms(): Bivec {\r\n        let k = Math.sqrt(this.xy * this.xy + this.xz * this.xz + this.yz * this.yz + this.yw * this.yw + this.zw * this.zw + this.xw * this.xw);\r\n        k = k == 0 ? 0 : (1 / k);\r\n        this.xy *= k; this.xz *= k; this.xw *= k;\r\n        this.yz *= k; this.yw *= k; this.zw *= k; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.xy * this.xy + this.xz * this.xz + this.yz * this.yz + this.yw * this.yw + this.zw * this.zw + this.xw * this.xw;\r\n    }\r\n    norm1(): number {\r\n        return Math.abs(this.xy) + Math.abs(this.xz) + Math.abs(this.xw) + Math.abs(this.yz) + Math.abs(this.yw) + Math.abs(this.zw);\r\n    }\r\n    wedge(biv: Bivec): number {\r\n        return this.xy * biv.zw - this.xz * biv.yw + this.xw * biv.yz + this.yz * biv.xw - this.yw * biv.xz + this.zw * biv.xy;\r\n    }\r\n    dual(): Bivec {\r\n        return new Bivec(this.zw, -this.yw, this.yz, this.xw, -this.xz, this.xy);\r\n    }\r\n    duals(): Bivec {\r\n        var temp: number;\r\n        temp = this.xy; this.xy = this.zw; this.zw = temp;\r\n        temp = this.xz; this.xz = -this.yw; this.yw = -temp;\r\n        temp = this.xw; this.xw = this.yz; this.yz = temp;\r\n        return this;\r\n    }\r\n    wedgev(V: Vec4): Vec4 {\r\n        return new Vec4(\r\n            -this.yz * V.w - this.zw * V.y + this.yw * V.z,\r\n            this.xz * V.w + this.zw * V.x - this.xw * V.z,\r\n            -this.xy * V.w - this.yw * V.x + this.xw * V.y,\r\n            this.xy * V.z + this.yz * V.x - this.xz * V.y\r\n        );\r\n    }\r\n    wedgevvset(v1: Vec4, v2: Vec4) {\r\n        return this.set(\r\n            v1.x * v2.y - v1.y * v2.x,\r\n            v1.x * v2.z - v1.z * v2.x,\r\n            v1.x * v2.w - v1.w * v2.x,\r\n            v1.y * v2.z - v1.z * v2.y,\r\n            v1.y * v2.w - v1.w * v2.y,\r\n            v1.z * v2.w - v1.w * v2.z\r\n        );\r\n    }\r\n\r\n    /** Vector part of Geometry Product\r\n     * exy * ey = ex, exy * ex = -ey, exy * ez = 0\r\n     *  */\r\n    dotv(V: Vec4): Vec4 {\r\n        return new Vec4(\r\n            this.xy * V.y + this.xz * V.z + this.xw * V.w,\r\n            -this.xy * V.x + this.yz * V.z + this.yw * V.w,\r\n            -this.xz * V.x - this.yz * V.y + this.zw * V.w,\r\n            -this.xw * V.x - this.yw * V.y - this.zw * V.z\r\n        );\r\n    }\r\n    cross(V: Bivec): Bivec {\r\n        return new Bivec(\r\n            V.xz * this.yz - this.xz * V.yz + V.xw * this.yw - this.xw * V.yw,\r\n            -V.xy * this.yz + this.xy * V.yz + V.xw * this.zw - this.xw * V.zw,\r\n            -V.xy * this.yw + this.xy * V.yw - V.xz * this.zw + this.xz * V.zw,\r\n            V.xy * this.xz - this.xy * V.xz + V.yw * this.zw - this.yw * V.zw,\r\n            V.xy * this.xw - this.xy * V.xw - V.yz * this.zw + this.yz * V.zw,\r\n            V.xz * this.xw - this.xz * V.xw + V.yz * this.yw - this.yz * V.yw\r\n        );\r\n    }\r\n    crossset(b1: Bivec, b2: Bivec): Bivec {\r\n        return this.set(\r\n            b2.xz * b1.yz - b1.xz * b2.yz + b2.xw * b1.yw - b1.xw * b2.yw,\r\n            -b2.xy * b1.yz + b1.xy * b2.yz + b2.xw * b1.zw - b1.xw * b2.zw,\r\n            -b2.xy * b1.yw + b1.xy * b2.yw - b2.xz * b1.zw + b1.xz * b2.zw,\r\n            b2.xy * b1.xz - b1.xy * b2.xz + b2.yw * b1.zw - b1.yw * b2.zw,\r\n            b2.xy * b1.xw - b1.xy * b2.xw - b2.yz * b1.zw + b1.yz * b2.zw,\r\n            b2.xz * b1.xw - b1.xz * b2.xw + b2.yz * b1.yw - b1.yz * b2.yw\r\n        );\r\n    }\r\n    crossrs(V: Bivec): Bivec {\r\n        return this.set(\r\n            V.xz * this.yz - this.xz * V.yz + V.xw * this.yw - this.xw * V.yw,\r\n            -V.xy * this.yz + this.xy * V.yz + V.xw * this.zw - this.xw * V.zw,\r\n            -V.xy * this.yw + this.xy * V.yw - V.xz * this.zw + this.xz * V.zw,\r\n            V.xy * this.xz - this.xy * V.xz + V.yw * this.zw - this.yw * V.zw,\r\n            V.xy * this.xw - this.xy * V.xw - V.yz * this.zw + this.yz * V.zw,\r\n            V.xz * this.xw - this.xz * V.xw + V.yz * this.yw - this.yz * V.yw\r\n        );\r\n    }\r\n    exp(): Rotor {\r\n        // Hodge Dual decompose this to:\r\n        // A : self-dual part (*A = A)\r\n        // B : antiself-dual part (*B = -B)\r\n        // two parts are commutive, corresponded to QL and QR\r\n        // 1. If this is simple rotation of angle theta:\r\n        //   exy*(theta) represents rotate from x to y by angle theta\r\n        //   this can be divided into theta/2 of QL and QR rotation\r\n        //   A and B has norm of theta, so div 2\r\n        //   Quaternion formula: Q(cos, sin * vec3), vec3 is a unit vector\r\n        // 2. if this is right-handed isoclinic rotation of angle theta,\r\n        //   we use (exy + ezw)*(theta) to represent it\r\n        //   it's easy to verify that norm(A) = 2*theta, norm(B) = 0\r\n        //   then the same as simple rotation\r\n        let A = new Vec3(this.xy + this.zw, this.xz - this.yw, this.xw + this.yz);\r\n        let B = new Vec3(this.xy - this.zw, this.xz + this.yw, this.xw - this.yz);\r\n        let a = A.norm(); let b = B.norm();\r\n        let aa = a * 0.5; let bb = b * 0.5;\r\n        let sa = (a > 0.005 ? Math.sin(aa) / a : 0.5 - a * a / 12);\r\n        let sb = (b > 0.005 ? Math.sin(bb) / b : 0.5 - b * b / 12);\r\n        return new Rotor(\r\n            new Quaternion(Math.cos(aa), sa * A.x, sa * A.y, sa * A.z),\r\n            new Quaternion(Math.cos(bb), sb * B.x, sb * B.y, sb * B.z)\r\n        );\r\n    }\r\n\r\n    /** return two angles [max, min] between a and b\r\n     * \"a\" and \"b\" must be normalized simple bivectors*/\r\n    static angle(a: Bivec, b: Bivec): number[] {\r\n        let cc = a.dot(b); let ss = a.wedge(b);\r\n        let ccpss = cc + ss;\r\n        let ccmss = cc - ss;\r\n        if (Math.abs(ccpss) > 1) ccpss = Math.sign(ccpss);\r\n        if (Math.abs(ccmss) > 1) ccmss = Math.sign(ccmss);\r\n        let sub = Math.acos(ccpss);\r\n        let add = Math.acos(ccmss);\r\n        return [(add + sub) * 0.5, (add - sub) * 0.5];\r\n    }\r\n    rotate(r: Rotor): Bivec {\r\n        // a novel method to calculate bivec rotation using isoclinic decomposition\r\n        let A = _Q_1.set(0, this.xy + this.zw, this.xz - this.yw, this.xw + this.yz);\r\n        let B = _Q_2.set(0, this.xy - this.zw, this.xz + this.yw, this.xw - this.yz);\r\n        // self-dual bivec is invariant under rotation generated by antiself-dual bivec\r\n        // so we only compute A * r.l and B * r.r\r\n        // rotating with 3 bases in A, B respectly behave like rotation in two 3D spaces respectly\r\n        // so we use 3D quaternion rotation formula\r\n        A.mulsl(r.l).mulsrconj(r.l);\r\n        B.mulslconj(r.r).mulsr(r.r);\r\n        // recover from isoclinic representation\r\n        return new Bivec(\r\n            A.y + B.y, A.z + B.z, A.w + B.w, A.w - B.w, B.z - A.z, A.y - B.y\r\n        ).mulfs(0.5);\r\n    }\r\n    rotates(r: Rotor): Bivec {\r\n        let A = _Q_1.set(0, this.xy + this.zw, this.xz - this.yw, this.xw + this.yz);\r\n        let B = _Q_2.set(0, this.xy - this.zw, this.xz + this.yw, this.xw - this.yz);\r\n        A.mulsl(r.l).mulsrconj(r.l);\r\n        B.mulslconj(r.r).mulsr(r.r);\r\n        this.xy = (A.y + B.y) * 0.5; this.xz = (A.z + B.z) * 0.5; this.xw = (A.w + B.w) * 0.5;\r\n        this.yz = (A.w - B.w) * 0.5; this.yw = (B.z - A.z) * 0.5; this.zw = (A.y - B.y) * 0.5;\r\n        return this;\r\n    }\r\n    rotatesconj(r: Rotor): Bivec {\r\n        let A = _Q_1.set(0, this.xy + this.zw, this.xz - this.yw, this.xw + this.yz);\r\n        let B = _Q_2.set(0, this.xy - this.zw, this.xz + this.yw, this.xw - this.yz);\r\n        A.mulslconj(r.l).mulsr(r.l);\r\n        B.mulsl(r.r).mulsrconj(r.r);\r\n        this.xy = (A.y + B.y) * 0.5; this.xz = (A.z + B.z) * 0.5; this.xw = (A.w + B.w) * 0.5;\r\n        this.yz = (A.w - B.w) * 0.5; this.yw = (B.z - A.z) * 0.5; this.zw = (A.y - B.y) * 0.5;\r\n        return this;\r\n    }\r\n    rotateset(bivec: Bivec, r: Rotor): Bivec {\r\n        let A = _Q_1.set(0, bivec.xy + bivec.zw, bivec.xz - bivec.yw, bivec.xw + bivec.yz);\r\n        let B = _Q_2.set(0, bivec.xy - bivec.zw, bivec.xz + bivec.yw, bivec.xw - bivec.yz);\r\n        A.mulsl(r.l).mulsrconj(r.l);\r\n        B.mulslconj(r.r).mulsr(r.r);\r\n        this.xy = (A.y + B.y) * 0.5; this.xz = (A.z + B.z) * 0.5; this.xw = (A.w + B.w) * 0.5;\r\n        this.yz = (A.w - B.w) * 0.5; this.yw = (B.z - A.z) * 0.5; this.zw = (A.y - B.y) * 0.5;\r\n        return this;\r\n    }\r\n    rotateconjset(bivec: Bivec, r: Rotor): Bivec {\r\n        let A = _Q_1.set(0, bivec.xy + bivec.zw, bivec.xz - bivec.yw, bivec.xw + bivec.yz);\r\n        let B = _Q_2.set(0, bivec.xy - bivec.zw, bivec.xz + bivec.yw, bivec.xw - bivec.yz);\r\n        A.mulslconj(r.l).mulsr(r.l);\r\n        B.mulsl(r.r).mulsrconj(r.r);\r\n        this.xy = (A.y + B.y) * 0.5; this.xz = (A.z + B.z) * 0.5; this.xw = (A.w + B.w) * 0.5;\r\n        this.yz = (A.w - B.w) * 0.5; this.yw = (B.z - A.z) * 0.5; this.zw = (A.y - B.y) * 0.5;\r\n        return this;\r\n    }\r\n    /** return a random oriented simple normalized bivector */\r\n    static rand(): Bivec {\r\n        // sampled in isoclinic space uniformly for left and right part respectively\r\n        let a = _vec3_1.randset().mulfs(0.5);\r\n        let b = _vec3_2.randset().mulfs(0.5);\r\n        return new Bivec(a.x + b.x, a.y + b.y, a.z + b.z, a.z - b.z, b.y - a.y, a.x - b.x);\r\n    }\r\n    randset(): Bivec {\r\n        // sampled in isoclinic space uniformly for left and right part respectively\r\n        let a = _vec3_1.randset().mulfs(0.5);\r\n        let b = _vec3_2.randset().mulfs(0.5);\r\n        return this.set(a.x + b.x, a.y + b.y, a.z + b.z, a.z - b.z, b.y - a.y, a.x - b.x);\r\n    }\r\n    /** return a random oriented simple normalized bivector by seed */\r\n    static srand(seed: Srand): Bivec {\r\n        let a = _vec3_1.srandset(seed).mulfs(0.5);\r\n        let b = _vec3_2.srandset(seed).mulfs(0.5);\r\n        return new Bivec(a.x + b.x, a.y + b.y, a.z + b.z, a.z - b.z, b.y - a.y, a.x - b.x);\r\n    }\r\n    srandset(seed: Srand): Bivec {\r\n        let a = _vec3_1.srandset(seed).mulfs(0.5);\r\n        let b = _vec3_2.srandset(seed).mulfs(0.5);\r\n        return this.set(a.x + b.x, a.y + b.y, a.z + b.z, a.z - b.z, b.y - a.y, a.x - b.x);\r\n    }\r\n    pushPool(pool: BivecPool = bivecPool) {\r\n        pool.push(this);\r\n    }\r\n}\r\n\r\nexport let _bivec = new Bivec();","import { Vec2 } from \"./vec2.js\";\r\nimport { Vec3 } from \"./vec3.js\";\r\nimport { Quaternion, _Q } from \"./quaternion.js\";\r\nimport { Pool } from \"../pool.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport { _360 } from \"../const.js\";\r\nimport { Bivec } from \"./bivec.js\";\r\nimport { Rotor } from \"./rotor.js\";\r\nimport { Mat4 } from \"./mat4.js\";\r\nimport { Obj4 } from \"./affine.js\";\r\nexport class Vec4Pool extends Pool<Vec4>{\r\n    constructObject() { return new Vec4; }\r\n}\r\nexport const vec4Pool = new Vec4Pool;\r\nexport class Vec4 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n    static readonly x = new Vec4(1, 0, 0, 0);\r\n    static readonly y = new Vec4(0, 1, 0, 0);\r\n    static readonly z = new Vec4(0, 0, 1, 0);\r\n    static readonly w = new Vec4(0, 0, 0, 1);\r\n    static readonly origin = new Vec4(0, 0, 0, 0);\r\n    static readonly xNeg = new Vec4(-1, 0, 0, 0);\r\n    static readonly yNeg = new Vec4(0, -1, 0, 0);\r\n    static readonly zNeg = new Vec4(0, 0, -1, 0);\r\n    static readonly wNeg = new Vec4(0, 0, 0, -1);\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        b[offset] = this.x;\r\n        b[offset + 1] = this.y;\r\n        b[offset + 2] = this.z;\r\n        b[offset + 3] = this.w;\r\n    }\r\n    copy(v: Vec4 | Quaternion): Vec4 {\r\n        this.x = v.x; this.y = v.y;\r\n        this.z = v.z; this.w = v.w;\r\n        return this;\r\n    }\r\n    set(x: number = 0, y: number = 0, z: number = 0, w: number = 0): Vec4 {\r\n        this.x = x; this.y = y; this.z = z; this.w = w; return this;\r\n    }\r\n    ywx(): Vec3 { return new Vec3(this.y, this.w, this.x); }\r\n    yxw(): Vec3 { return new Vec3(this.y, this.x, this.w); }\r\n    yzw(): Vec3 { return new Vec3(this.y, this.z, this.w); }\r\n    ywz(): Vec3 { return new Vec3(this.y, this.w, this.z); }\r\n    yzx(): Vec3 { return new Vec3(this.y, this.z, this.x); }\r\n    yxz(): Vec3 { return new Vec3(this.y, this.x, this.z); }\r\n    zwx(): Vec3 { return new Vec3(this.z, this.w, this.x); }\r\n    zxw(): Vec3 { return new Vec3(this.z, this.x, this.w); }\r\n    zyw(): Vec3 { return new Vec3(this.z, this.y, this.w); }\r\n    zwy(): Vec3 { return new Vec3(this.z, this.w, this.y); }\r\n    zyx(): Vec3 { return new Vec3(this.z, this.y, this.x); }\r\n    zxy(): Vec3 { return new Vec3(this.z, this.x, this.y); }\r\n    xzy(): Vec3 { return new Vec3(this.x, this.z, this.y); }\r\n    xyz(): Vec3 { return new Vec3(this.x, this.y, this.z); }\r\n    xwy(): Vec3 { return new Vec3(this.x, this.w, this.y); }\r\n    xyw(): Vec3 { return new Vec3(this.x, this.y, this.w); }\r\n    xzw(): Vec3 { return new Vec3(this.x, this.z, this.w); }\r\n    xwz(): Vec3 { return new Vec3(this.x, this.w, this.z); }\r\n    wxy(): Vec3 { return new Vec3(this.w, this.x, this.y); }\r\n    wyx(): Vec3 { return new Vec3(this.w, this.y, this.x); }\r\n    wzy(): Vec3 { return new Vec3(this.w, this.z, this.y); }\r\n    wyz(): Vec3 { return new Vec3(this.w, this.y, this.z); }\r\n    wxz(): Vec3 { return new Vec3(this.w, this.x, this.z); }\r\n    wzx(): Vec3 { return new Vec3(this.w, this.z, this.x); }\r\n    wxyz(): Vec4 { return new Vec4(this.w, this.x, this.y, this.z); }\r\n    wxzy(): Vec4 { return new Vec4(this.w, this.x, this.z, this.y); }\r\n    wyxz(): Vec4 { return new Vec4(this.w, this.y, this.x, this.z); }\r\n    wzxy(): Vec4 { return new Vec4(this.w, this.z, this.x, this.y); }\r\n    yxzw(): Vec4 { return new Vec4(this.y, this.x, this.z, this.w); }\r\n    xzwy(): Vec4 { return new Vec4(this.x, this.z, this.w, this.y); }\r\n    isFinite(): boolean {\r\n        return isFinite(this.x) && isFinite(this.y) && isFinite(this.z) && isFinite(this.w);\r\n    }\r\n\r\n    clone(): Vec4 {\r\n        return new Vec4(this.x, this.y, this.z, this.w);\r\n    }\r\n    add(v2: Vec4): Vec4 {\r\n        return new Vec4(this.x + v2.x, this.y + v2.y, this.z + v2.z, this.w + v2.w);\r\n    }\r\n    addset(v1: Vec4, v2: Vec4): Vec4 {\r\n        this.x = v1.x + v2.x; this.y = v1.y + v2.y; this.z = v1.z + v2.z; this.w = v1.w + v2.w; return this;\r\n    }\r\n    addf(v2: number): Vec4 {\r\n        return new Vec4(this.x + v2, this.y + v2, this.z + v2, this.w + v2);\r\n    }\r\n    adds(v2: Vec4): Vec4 {\r\n        this.x += v2.x; this.y += v2.y; this.z += v2.z; this.w += v2.w; return this;\r\n    }\r\n    addfs(v2: number): Vec4 {\r\n        this.x += v2; this.y += v2; this.z += v2; this.w += v2; return this;\r\n    }\r\n    neg(): Vec4 {\r\n        return new Vec4(-this.x, -this.y, -this.z, -this.w);\r\n    }\r\n    negs(): Vec4 {\r\n        this.x = - this.x; this.y = -this.y; this.z = -this.z; this.w = -this.w;\r\n        return this;\r\n    }\r\n    sub(v2: Vec4): Vec4 {\r\n        return new Vec4(this.x - v2.x, this.y - v2.y, this.z - v2.z, this.w - v2.w);\r\n    }\r\n    subset(v1: Vec4, v2: Vec4): Vec4 {\r\n        this.x = v1.x - v2.x; this.y = v1.y - v2.y; this.z = v1.z - v2.z; this.w = v1.w - v2.w; return this;\r\n    }\r\n    subf(v2: number): Vec4 {\r\n        return new Vec4(this.x - v2, this.y - v2, this.z - v2, this.w - v2);\r\n    }\r\n    subs(v2: Vec4): Vec4 {\r\n        this.x -= v2.x; this.y -= v2.y; this.z -= v2.z; this.w -= v2.w; return this;\r\n    }\r\n    subfs(v2: number): Vec4 {\r\n        this.x -= v2; this.y -= v2; this.z -= v2; this.w -= v2; return this;\r\n    }\r\n    mulf(v2: number): Vec4 {\r\n        return new Vec4(this.x * v2, this.y * v2, this.z * v2, this.w * v2);\r\n    }\r\n    mulfs(v2: number): Vec4 {\r\n        this.x *= v2; this.y *= v2; this.z *= v2; this.w *= v2; return this;\r\n    }\r\n    mulmatvset(mat4: Mat4, v: Vec4): Vec4 {\r\n        let a = mat4.elem;\r\n        return this.set(\r\n            v.x * a[0] + v.y * a[1] + v.z * a[2] + v.w * a[3],\r\n            v.x * a[4] + v.y * a[5] + v.z * a[6] + v.w * a[7],\r\n            v.x * a[8] + v.y * a[9] + v.z * a[10] + v.w * a[11],\r\n            v.x * a[12] + v.y * a[13] + v.z * a[14] + v.w * a[15]\r\n        );\r\n    }\r\n    /** this += v * k */\r\n    addmulfs(v: Vec4, k: number) {\r\n        this.x += v.x * k; this.y += v.y * k; this.z += v.z * k; this.w += v.w * k; return this;\r\n    }\r\n    mul(v2: Vec4): Vec4 {\r\n        return new Vec4(this.x * v2.x, this.y * v2.y, this.z * v2.z, this.w * v2.w);\r\n    }\r\n    muls(v2: Vec4): Vec4 {\r\n        this.x *= v2.x; this.y *= v2.y; this.z *= v2.z; this.w *= v2.w; return this;\r\n    }\r\n    divf(v2: number): Vec4 {\r\n        v2 = 1 / v2;\r\n        return new Vec4(this.x * v2, this.y * v2, this.z * v2, this.w * v2);\r\n    }\r\n    divfs(v2: number): Vec4 {\r\n        v2 = 1 / v2;\r\n        this.x *= v2; this.y *= v2; this.z *= v2; this.w *= v2; return this;\r\n    }\r\n    div(v2: Vec4): Vec4 {\r\n        return new Vec4(this.x / v2.x, this.y / v2.y, this.z / v2.z, this.w / v2.w);\r\n    }\r\n    divs(v2: Vec4): Vec4 {\r\n        this.x /= v2.x; this.y /= v2.y; this.z /= v2.z; this.w /= v2.w; return this;\r\n    }\r\n    dot(v2: Vec4): number {\r\n        return this.x * v2.x + this.y * v2.y + this.z * v2.z + this.w * v2.w;\r\n    }\r\n    norm(): number {\r\n        return Math.hypot(this.x, this.y, this.z, this.w);\r\n    }\r\n    norms(): Vec4 {\r\n        let v2 = Math.hypot(this.x, this.y, this.z, this.w);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.x *= v2; this.y *= v2; this.z *= v2; this.w *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n    norm1(): number {\r\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\r\n    }\r\n    norminf(): number {\r\n        return Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z), Math.abs(this.w));\r\n    }\r\n    normi(i: number): number {\r\n        return Math.pow(\r\n            Math.pow(Math.abs(this.x), i) +\r\n            Math.pow(Math.abs(this.y), i) +\r\n            Math.pow(Math.abs(this.z), i) +\r\n            Math.pow(Math.abs(this.w), i), 1 / i\r\n        );\r\n    }\r\n    wedge(V: Vec4): Bivec {\r\n        return new Bivec(\r\n            this.x * V.y - this.y * V.x,\r\n            this.x * V.z - this.z * V.x,\r\n            this.x * V.w - this.w * V.x,\r\n            this.y * V.z - this.z * V.y,\r\n            this.y * V.w - this.w * V.y,\r\n            this.z * V.w - this.w * V.z\r\n        );\r\n    }\r\n    wedgevbset(v: Vec4, bivec: Bivec): Vec4 {\r\n        return this.set(\r\n            -bivec.yz * v.w - bivec.zw * v.y + bivec.yw * v.z,\r\n            bivec.xz * v.w + bivec.zw * v.x - bivec.xw * v.z,\r\n            -bivec.xy * v.w - bivec.yw * v.x + bivec.xw * v.y,\r\n            bivec.xy * v.z + bivec.yz * v.x - bivec.xz * v.y\r\n        );\r\n    }\r\n    wedgeb(bivec: Bivec): Vec4 {\r\n        return bivec.wedgev(this);\r\n    }\r\n    /** Vector part of Geometry Product\r\n     * ey * exy = -ex, ex * exy = ey, ex * eyz = 0\r\n     *  */\r\n    dotb(B: Bivec): Vec4 {\r\n        return new Vec4(\r\n            -B.xy * this.y - B.xz * this.z - B.xw * this.w,\r\n            B.xy * this.x - B.yz * this.z - B.yw * this.w,\r\n            B.xz * this.x + B.yz * this.y - B.zw * this.w,\r\n            B.xw * this.x + B.yw * this.y + B.zw * this.z\r\n        );\r\n    }\r\n    /** this = this * b;\r\n     *  Vector part of Geometry Product \r\n     *  ey * exy = -ex, ex * exy = ey, ex * eyz = 0\r\n     *  */\r\n    dotbsr(B: Bivec): Vec4 {\r\n        return this.set(\r\n            -B.xy * this.y - B.xz * this.z - B.xw * this.w,\r\n            B.xy * this.x - B.yz * this.z - B.yw * this.w,\r\n            B.xz * this.x + B.yz * this.y - B.zw * this.w,\r\n            B.xw * this.x + B.yw * this.y + B.zw * this.z\r\n        );\r\n    }\r\n    dotbset(v: Vec4, B: Bivec): Vec4 {\r\n        return this.set(\r\n            -B.xy * v.y - B.xz * v.z - B.xw * v.w,\r\n            B.xy * v.x - B.yz * v.z - B.yw * v.w,\r\n            B.xz * v.x + B.yz * v.y - B.zw * v.w,\r\n            B.xw * v.x + B.yw * v.y + B.zw * v.z\r\n        );\r\n    }\r\n    /** this = mat * this */\r\n    mulmatls(mat4: Mat4): Vec4 {\r\n        let a = mat4.elem;\r\n        return this.set(\r\n            this.x * a[0] + this.y * a[1] + this.z * a[2] + this.w * a[3],\r\n            this.x * a[4] + this.y * a[5] + this.z * a[6] + this.w * a[7],\r\n            this.x * a[8] + this.y * a[9] + this.z * a[10] + this.w * a[11],\r\n            this.x * a[12] + this.y * a[13] + this.z * a[14] + this.w * a[15]\r\n        );\r\n    }\r\n    applyObj4(o: Obj4) {\r\n        if (o.scale) {\r\n            this.x *= o.scale.x;\r\n            this.y *= o.scale.y;\r\n            this.z *= o.scale.z;\r\n            this.w *= o.scale.w;\r\n        }\r\n        this.rotates(o.rotation).adds(o.position);\r\n        return this;\r\n    }\r\n    applyObj4inv(o: Obj4) {\r\n        this.subs(o.position).rotatesconj(o.rotation);\r\n        if (o.scale) {\r\n            this.x /= o.scale.x;\r\n            this.y /= o.scale.y;\r\n            this.z /= o.scale.z;\r\n            this.w /= o.scale.w;\r\n        }\r\n        return this;\r\n    }\r\n    rotate(r: Rotor): Vec4 {\r\n        return _Q.copy(this).mulsl(r.l).mulsr(r.r).xyzw();\r\n    }\r\n    rotates(r: Rotor): Vec4 {\r\n        this.copy(_Q.copy(this).mulsl(r.l).mulsr(r.r));\r\n        return this;\r\n    }\r\n    rotateconj(r: Rotor): Vec4 {\r\n        return _Q.copy(this).mulslconj(r.l).mulsrconj(r.r).xyzw();\r\n    }\r\n    rotatesconj(r: Rotor): Vec4 {\r\n        this.copy(_Q.copy(this).mulslconj(r.l).mulsrconj(r.r));\r\n        return this;\r\n    }\r\n    reflect(normal: Vec4): Vec4 {\r\n        return this.sub(normal.mulf(this.dot(normal) * 2));\r\n    }\r\n    reflects(normal: Vec4): Vec4 {\r\n        let k = this.dot(normal) * 2;\r\n        this.x -= normal.x * k;\r\n        this.y -= normal.y * k;\r\n        this.z -= normal.z * k;\r\n        this.w -= normal.w * k;\r\n        return this;\r\n    }\r\n    distanceTo(p: Vec4) {\r\n        return Math.hypot(p.x - this.x, p.y - this.y, p.z - this.z, p.w - this.w);\r\n    }\r\n    distanceSqrTo(p: Vec4) {\r\n        let x = p.x - this.x, y = p.y - this.y, z = p.z - this.z, w = p.w - this.w;\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n    randset(): Vec4 {\r\n        let a = Math.random() * _360;\r\n        let b = Math.random() * _360;\r\n        let c = Math.random();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return this.set(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    srandset(seed: Srand): Vec4 {\r\n        let a = seed.nextf() * _360;\r\n        let b = seed.nextf() * _360;\r\n        let c = seed.nextf();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return this.set(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    /** project vector on a plane determined by bivector.\r\n     * bivector b must be normalized and simple\r\n     */\r\n    projb(b: Bivec) {\r\n        return this.dotb(b).dotbsr(b).negs();\r\n    }\r\n    projbs(b: Bivec) {\r\n        return this.dotbsr(b).dotbsr(b).negs();\r\n    }\r\n    static rand(): Vec4 {\r\n        let a = Math.random() * _360;\r\n        let b = Math.random() * _360;\r\n        let c = Math.random();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return new Vec4(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    static srand(seed: Srand): Vec4 {\r\n        let a = seed.nextf() * _360;\r\n        let b = seed.nextf() * _360;\r\n        let c = seed.nextf();\r\n        let sc = Math.sqrt(c);\r\n        let cc = Math.sqrt(1 - c);\r\n        return new Vec4(sc * Math.cos(a), sc * Math.sin(a), cc * Math.cos(b), cc * Math.sin(b));\r\n    }\r\n    equal(v: Vec4) {\r\n        return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\r\n    }\r\n    pushPool(pool: Vec4Pool = vec4Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\n\r\nexport let _vec4 = new Vec4();\r\nexport let _vec4_1 = new Vec4();","import { Vec2 } from \"./vec2.js\";\r\nimport { Vec4 } from \"./vec4.js\";\r\nimport { Quaternion, _Q } from \"./quaternion.js\";\r\nimport { Pool } from \"../pool.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport { _360 } from \"../const.js\";\r\nexport class Vec3Pool extends Pool<Vec3>{\r\n    constructObject() { return new Vec3; }\r\n}\r\nexport const vec3Pool = new Vec3Pool;\r\nexport class Vec3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    static readonly x = new Vec3(1, 0, 0);\r\n    static readonly y = new Vec3(0, 1, 0);\r\n    static readonly z = new Vec3(0, 0, 1);\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x; this.y = y; this.z = z;\r\n    }\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        b[offset] = this.x;\r\n        b[offset + 1] = this.y;\r\n        b[offset + 2] = this.z;\r\n    }\r\n    copy(v: Vec3): Vec3 {\r\n        this.x = v.x; this.y = v.y; this.z = v.z;\r\n        return this;\r\n    }\r\n    set(x: number = 0, y: number = 0, z: number = 0): Vec3 {\r\n        this.x = x; this.y = y; this.z = z; return this;\r\n    }\r\n    xy(): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n    yx(): Vec2 {\r\n        return new Vec2(this.y, this.x);\r\n    }\r\n    xz(): Vec2 {\r\n        return new Vec2(this.x, this.z);\r\n    }\r\n    yz(): Vec2 {\r\n        return new Vec2(this.y, this.z);\r\n    }\r\n    zy(): Vec2 {\r\n        return new Vec2(this.z, this.y);\r\n    }\r\n    yzx(): Vec3 {\r\n        return new Vec3(this.y, this.z, this.x);\r\n    }\r\n    yxz(): Vec3 {\r\n        return new Vec3(this.y, this.x, this.z);\r\n    }\r\n    zyx(): Vec3 {\r\n        return new Vec3(this.z, this.y, this.x);\r\n    }\r\n    zxy(): Vec3 {\r\n        return new Vec3(this.z, this.x, this.y);\r\n    }\r\n    xzy(): Vec3 {\r\n        return new Vec3(this.x, this.z, this.y);\r\n    }\r\n    xyz0(): Vec4 {\r\n        return new Vec4(this.x, this.y, this.z);\r\n    }\r\n    x0yz(): Vec4 {\r\n        return new Vec4(this.x, 0, this.y, this.z);\r\n    }\r\n    clone(): Vec3 {\r\n        return new Vec3(this.x, this.y, this.z);\r\n    }\r\n    add(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x + v2.x, this.y + v2.y, this.z + v2.z);\r\n    }\r\n\r\n    addset(v1: Vec3, v2: Vec3): Vec3 {\r\n        this.x = v1.x + v2.x; this.y = v1.y + v2.y; this.z = v1.z + v2.z; return this;\r\n    }\r\n    addf(v2: number): Vec3 {\r\n        return new Vec3(this.x + v2, this.y + v2, this.z + v2);\r\n    }\r\n    adds(v2: Vec3): Vec3 {\r\n        this.x += v2.x; this.y += v2.y; this.z += v2.z; return this;\r\n    }\r\n    addfs(v2: number): Vec3 {\r\n        this.x += v2; this.y += v2; this.z += v2; return this;\r\n    }\r\n    /** this += v * k */\r\n    addmulfs(v: Vec3, k: number) {\r\n        this.x += v.x * k; this.y += v.y * k; this.z += v.z * k; return this;\r\n    }\r\n    neg(): Vec3 {\r\n        return new Vec3(-this.x, -this.y, -this.z);\r\n    }\r\n    negs(): Vec3 {\r\n        this.x = - this.x; this.y = -this.y; this.z = -this.z;\r\n        return this;\r\n    }\r\n    sub(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x - v2.x, this.y - v2.y, this.z - v2.z);\r\n    }\r\n\r\n    subset(v1: Vec3, v2: Vec3): Vec3 {\r\n        this.x = v1.x - v2.x; this.y = v1.y - v2.y; this.z = v1.z - v2.z; return this;\r\n    }\r\n    subf(v2: number): Vec3 {\r\n        return new Vec3(this.x - v2, this.y - v2, this.z - v2);\r\n    }\r\n    subs(v2: Vec3): Vec3 {\r\n        this.x -= v2.x; this.y -= v2.y; this.z -= v2.z; return this;\r\n    }\r\n    subfs(v2: number): Vec3 {\r\n        this.x -= v2; this.y -= v2; this.z -= v2; return this;\r\n    }\r\n    mulf(v2: number): Vec3 {\r\n        return new Vec3(this.x * v2, this.y * v2, this.z * v2);\r\n    }\r\n    mulfs(v2: number): Vec3 {\r\n        this.x *= v2; this.y *= v2; this.z *= v2; return this;\r\n    }\r\n    mul(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x * v2.x, this.y * v2.y, this.z * v2.z);\r\n    }\r\n    muls(v2: Vec3): Vec3 {\r\n        this.x *= v2.x; this.y *= v2.y; this.z *= v2.z; return this;\r\n    }\r\n    divf(v2: number): Vec3 {\r\n        v2 = 1 / v2;\r\n        return new Vec3(this.x * v2, this.y * v2, this.z * v2);\r\n    }\r\n    divfs(v2: number): Vec3 {\r\n        v2 = 1 / v2;\r\n        this.x *= v2; this.y *= v2; this.z *= v2; return this;\r\n    }\r\n    div(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x / v2.x, this.y / v2.y, this.z / v2.z);\r\n    }\r\n    divs(v2: Vec3): Vec3 {\r\n        this.x /= v2.x; this.y /= v2.y; this.z /= v2.z; return this;\r\n    }\r\n    dot(v2: Vec3): number {\r\n        return this.x * v2.x + this.y * v2.y + this.z * v2.z;\r\n    }\r\n    norm(): number {\r\n        return Math.hypot(this.x, this.y, this.z);\r\n    }\r\n    norms(): Vec3 {\r\n        let v2 = Math.hypot(this.x, this.y, this.z);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.x *= v2; this.y *= v2; this.z *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n    norm1(): number {\r\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n    }\r\n    norminf(): number {\r\n        return Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z));\r\n    }\r\n    normi(i: number): number {\r\n        return Math.pow(\r\n            Math.pow(Math.abs(this.x), i) +\r\n            Math.pow(Math.abs(this.y), i) +\r\n            Math.pow(Math.abs(this.z), i), 1 / i\r\n        );\r\n    }\r\n    wedge(v3: Vec3): Vec3 {\r\n        return new Vec3(\r\n            this.y * v3.z - this.z * v3.y,\r\n            this.z * v3.x - this.x * v3.z,\r\n            this.x * v3.y - this.y * v3.x,\r\n        );\r\n    }\r\n    /** this.set(v1 ^ v2) */\r\n    wedgeset(v1: Vec3, v2: Vec3): Vec3 {\r\n        this.x = v1.y * v2.z - v1.z * v2.y;\r\n        this.y = v1.z * v2.x - v1.x * v2.z;\r\n        this.z = v1.x * v2.y - v1.y * v2.x;\r\n        return this;\r\n    }\r\n    /** this = this ^ v */\r\n    wedgesr(v: Vec3): Vec3 {\r\n        return this.set(\r\n            this.y * v.z - this.z * v.y,\r\n            this.z * v.x - this.x * v.z,\r\n            this.x * v.y - this.y * v.x,\r\n        );\r\n    }\r\n    exp(): Quaternion {\r\n        let g = this.norm() * 0.5;\r\n        let s = Math.abs(g) > 0.005 ? Math.sin(g) / g * 0.5 : 0.5 - g * g / 12;\r\n        return new Quaternion(Math.cos(g), s * this.x, s * this.y, s * this.z);\r\n    }\r\n    rotate(q: Quaternion): Vec3 {\r\n        return _Q.set(0, this.x, this.y, this.z).mulsl(q).mulsr(q.conj()).yzw();\r\n    }\r\n    rotates(q: Quaternion): Vec3 {\r\n        let q2 = _Q.set(0, this.x, this.y, this.z).mulsl(q).mulsr(q.conj());\r\n        this.x = q2.y; this.y = q2.z; this.z = q2.w; return this;\r\n    }\r\n    randset(): Vec3 {\r\n        let a = Math.random() * _360;\r\n        let c = Math.random() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return this.set(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n    srandset(seed: Srand): Vec3 {\r\n        let a = seed.nextf() * _360;\r\n        let c = seed.nextf() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return this.set(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n    static rand(): Vec3 {\r\n        let a = Math.random() * _360;\r\n        let c = Math.random() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return new Vec3(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n    static srand(seed: Srand): Vec3 {\r\n        let a = seed.nextf() * _360;\r\n        let c = seed.nextf() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return new Vec3(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n\r\n    distanceTo(p: Vec3) {\r\n        return Math.hypot(p.x - this.x, p.y - this.y, p.z - this.z);\r\n    }\r\n    distanceSqrTo(p: Vec3) {\r\n        let x = p.x - this.x, y = p.y - this.y, z = p.z - this.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n    reflect(normal: Vec3): Vec3 {\r\n        return this.sub(normal.mulf(this.dot(normal) * 2));\r\n    }\r\n    reflects(normal: Vec3): Vec3 {\r\n        return this.subs(normal.mulf(this.dot(normal) * 2));\r\n    }\r\n    equal(v: Vec3) {\r\n        return this.x === v.x && this.y === v.y && this.z === v.z;\r\n    }\r\n\r\n    pushPool(pool: Vec3Pool = vec3Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\n\r\nexport let _vec3 = new Vec3();\r\nexport let _vec3_1 = new Vec3();\r\nexport let _vec3_2 = new Vec3();\r\nexport let _vec3_3 = new Vec3();\r\nexport let _vec3_4 = new Vec3();\r\nexport let _vec3_5 = new Vec3();","export class Srand {\r\n    _seed: number;\r\n    constructor(seed: number) {\r\n        if (Math.floor(seed) !== seed) {\r\n            seed = Math.floor(0x6D2B79F5 * seed);\r\n        }\r\n        this._seed = seed;\r\n    }\r\n    set(seed: number) {\r\n        this._seed = seed;\r\n    }\r\n    /** return a random float in [0,1] */\r\n    nextf() {\r\n        let t = this._seed += 0x6D2B79F5;\r\n        t = Math.imul(t ^ t >>> 15, t | 1);\r\n        t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n        return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    }\r\n    /** return a random int of [0,n-1] if n is given, else range is same as int */\r\n    nexti(n?: number) {\r\n        let t = this._seed += 0x6D2B79F5;\r\n        t = Math.imul(t ^ t >>> 15, t | 1);\r\n        t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n        return (n === undefined) ? ((t ^ t >>> 14) >>> 0) : ((t ^ t >>> 14) >>> 0) % n;\r\n    }\r\n}\r\n// https://github.com/mrdoob/three.js/blob/dev/src/math/MathUtils.js\r\nconst _lut = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff'];\r\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\nexport function generateUUID() {\r\n    const d0 = Math.random() * 0xffffffff | 0;\r\n    const d1 = Math.random() * 0xffffffff | 0;\r\n    const d2 = Math.random() * 0xffffffff | 0;\r\n    const d3 = Math.random() * 0xffffffff | 0;\r\n    const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' +\r\n        _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' +\r\n        _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] +\r\n        _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\r\n    // .toLowerCase() here flattens concatenated strings to save heap memory space.\r\n    return uuid.toLowerCase();\r\n\r\n}","import { Pool } from \"../pool.js\";\r\nimport { Vec2 } from \"./vec2.js\";\r\n\r\nexport class Mat2Pool extends Pool<Mat2>{\r\n    constructObject() { return new Mat2; }\r\n}\r\nexport const mat2Pool = new Mat2Pool;\r\nexport class Mat2 {\r\n    elem: number[];\r\n    static id = new Mat2(1, 0, 0, 1);\r\n    static zero = new Mat2(0, 0, 0, 0);\r\n    static diag(a: number, b: number): Mat2 {\r\n        return new Mat2(\r\n            a, 0,\r\n            0, b\r\n        );\r\n    }\r\n    constructor(\r\n        a: number = 1, b: number = 0,\r\n        c: number = 0, d: number = 1\r\n    ) { this.elem = [a, b, c, d]; }\r\n    set(\r\n        a: number = 0, b: number = 0,\r\n        c: number = 0, d: number = 0\r\n    ): Mat2 { this.elem[0] = a; this.elem[1] = b; this.elem[2] = c; this.elem[3] = d; return this; }\r\n    setid() { this.elem[0] = 1; this.elem[1] = 0; this.elem[2] = 0; this.elem[3] = 1; return this; }\r\n    ts(): Mat2 {\r\n        let tmp = this.elem[1]; this.elem[1] = this.elem[2]; this.elem[2] = tmp;\r\n        return this;\r\n    }\r\n    t(): Mat2 {\r\n        return new Mat2(\r\n            this.elem[0], this.elem[2],\r\n            this.elem[1], this.elem[3]\r\n        );\r\n    }\r\n    copy(m2: Mat2): Mat2 {\r\n        for (var i = 0; i < 4; i++) {\r\n            this.elem[i] = m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    add(m2: Mat2): Mat2 {\r\n        let m = new Mat2();\r\n        for (var i = 0; i < 4; i++) {\r\n            m.elem[i] = this.elem[i] + m2.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    adds(m2: Mat2): Mat2 {\r\n        for (var i = 0; i < 4; i++) {\r\n            this.elem[i] += m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    neg(): Mat2 {\r\n        let m = new Mat2();\r\n        for (var i = 0; i < 4; i++) {\r\n            m.elem[i] = -this.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    negs(): Mat2 {\r\n        for (var i = 0; i < 4; i++) {\r\n            this.elem[i] = -this.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    sub(m2: Mat2): Mat2 {\r\n        let m = new Mat2();\r\n        for (var i = 0; i < 4; i++) {\r\n            m.elem[i] = this.elem[i] - m2.elem[i];\r\n        }\r\n        return m;\r\n    }\r\n    subs(m2: Mat2): Mat2 {\r\n        for (var i = 0; i < 4; i++) {\r\n            this.elem[i] -= m2.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    mulf(k: number): Mat2 {\r\n        let m = new Mat2();\r\n        for (var i = 0; i < 4; i++) {\r\n            m.elem[i] = this.elem[i] * k;\r\n        }\r\n        return m;\r\n    }\r\n    mulfs(k: number): Mat2 {\r\n        for (var i = 0; i < 4; i++) {\r\n            this.elem[i] *= k;\r\n        }\r\n        return this;\r\n    }\r\n    mulv(v: Vec2): Vec2 {\r\n        let a = this.elem;\r\n        return new Vec2(\r\n            v.x * a[0] + v.y * a[1],\r\n            v.x * a[2] + v.y * a[3]\r\n        );\r\n    }\r\n    mul(m: Mat2): Mat2 {\r\n        let a = this.elem; let b = m.elem;\r\n        return new Mat2(\r\n            a[0] * b[0] + a[1] * b[2], a[0] * b[1] + a[1] * b[3],\r\n            a[2] * b[0] + a[3] * b[2], a[2] * b[1] + a[3] * b[3]\r\n        );\r\n    }\r\n    muls(m: Mat2): Mat2 {\r\n        let a = this.elem; let b = m.elem;\r\n        this.set(\r\n            a[0] * b[0] + a[1] * b[2], a[0] * b[1] + a[1] * b[3],\r\n            a[2] * b[0] + a[3] * b[2], a[2] * b[1] + a[3] * b[3]\r\n        );\r\n        return this;\r\n    }\r\n    inv(): Mat2 {\r\n        let me = this.elem;\r\n        let a = me[0], b = me[1], c = me[2], d = me[3],\r\n            det = a * d - b * c;\r\n        if (det === 0) {\r\n            console.warn(\"Matrix determinant is 0\");\r\n            return new Mat2(0, 0, 0, 0);\r\n        }\r\n        let detInv = 1 / det;\r\n        return new Mat2(\r\n            d * detInv,\r\n            -b * detInv,\r\n            -c * detInv,\r\n            a * detInv\r\n        );\r\n    }\r\n    invs(): Mat2 {\r\n        let me = this.elem;\r\n        let a = me[0], b = me[1], c = me[2], d = me[3],\r\n            det = a * d - b * c;\r\n        if (det === 0) {\r\n            var msg = \"Matrix determinant is 0\";\r\n            console.warn(msg);\r\n            me.fill(0);\r\n            return this;\r\n        }\r\n        let detInv = 1 / det;\r\n        me[0] = d * detInv;\r\n        me[1] = -b * detInv;\r\n        me[2] = -c * detInv;\r\n        me[3] = a * detInv;\r\n        return this;\r\n    }\r\n    pushPool(pool: Mat2Pool = mat2Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\nexport let _mat2 = new Mat2();\r\n","import { Vec2 } from \"./vec2\"\r\nexport class Complex {\r\n    re: number;\r\n    im: number;\r\n    static i = new Complex(0, 1);\r\n    constructor(re: number = 0, im: number = 0) {\r\n        this.re = re; this.im = im;\r\n    }\r\n    flat(): number[] {\r\n        return [this.re, this.im];\r\n    }\r\n    set(v: Complex): Complex {\r\n        this.re = v.re; this.im = v.im; return this;\r\n    }\r\n    setv(v: Vec2): Complex {\r\n        this.re = v.x; this.im = v.y; return this;\r\n    }\r\n    clone(): Complex {\r\n        return new Complex(this.re, this.im);\r\n    }\r\n    add(v2: Complex): Complex {\r\n        return new Complex(this.re + v2.re, this.im + v2.im);\r\n    }\r\n    addf(v2: number): Complex {\r\n        return new Complex(this.re + v2, this.im);\r\n    }\r\n    adds(v2: Complex): Complex {\r\n        this.re += v2.re; this.im += v2.im; return this;\r\n    }\r\n    addfs(v2: number): Complex {\r\n        this.re += v2; return this;\r\n    }\r\n    neg(): Complex {\r\n        return new Complex(-this.re, -this.im);\r\n    }\r\n    negs(): Complex {\r\n        this.re = - this.re; this.im = -this.im;\r\n        return this;\r\n    }\r\n    sub(v2: Complex): Complex {\r\n        return new Complex(this.re - v2.re, this.im - v2.im);\r\n    }\r\n    subf(v2: number): Complex {\r\n        return new Complex(this.re - v2, this.im);\r\n    }\r\n    subs(v2: Complex): Complex {\r\n        this.re -= v2.re; this.im -= v2.im; return this;\r\n    }\r\n    subfs(v2: number): Complex {\r\n        this.re -= v2; return this;\r\n    }\r\n    mulf(v2: number): Complex {\r\n        return new Complex(this.re * v2, this.im * v2);\r\n    }\r\n    mulfs(v2: number): Complex {\r\n        this.re *= v2; this.im *= v2; return this;\r\n    }\r\n    mul(k: Complex): Complex {\r\n        return new Complex(this.re * k.re - k.im * this.im, this.re * k.im + k.re * this.im);\r\n    }\r\n    muls(k: Complex): Complex {\r\n        let re = this.re * k.re - k.im * this.im;\r\n        this.im = this.re * k.im + k.re * this.im;\r\n        this.re = re; return this;\r\n    }\r\n    divf(v2: number): Complex {\r\n        v2 = 1 / v2;\r\n        return new Complex(this.re * v2, this.im * v2);\r\n    }\r\n    divfs(v2: number): Complex {\r\n        v2 = 1 / v2;\r\n        this.re *= v2; this.im *= v2; return this;\r\n    }\r\n    div(k: Complex): Complex {\r\n        let n = 1 / (k.re * k.re + k.im * k.im);\r\n        return new Complex((this.re * k.re + k.im * this.im) * n, (k.re * this.im - this.re * k.im) * n);\r\n    }\r\n    divs(k: Complex): Complex {\r\n\r\n        let n = 1 / (k.re * k.re + k.im * k.im);\r\n        let im = (k.re * this.im - this.re * k.im) * n;\r\n        this.re = (this.re * k.re + k.im * this.im) * n;\r\n        this.im = im; return this;\r\n    }\r\n    dot(v2: Complex): number {\r\n        return this.re * v2.re + this.im * v2.im;\r\n    }\r\n    norm(): number {\r\n        return Math.sqrt(this.re * this.re + this.im * this.im);\r\n    }\r\n    norms(): Complex {\r\n        let v2 = Math.sqrt(this.re * this.re + this.im * this.im);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.re *= v2; this.im *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.re * this.re + this.im * this.im;\r\n    }\r\n    conj(): Complex {\r\n        return new Complex(this.re, -this.im);\r\n    }\r\n    conjs(): Complex {\r\n        this.im = -this.im; return this;\r\n    }\r\n    exp(): Complex {\r\n        let r = Math.exp(this.re);\r\n        return new Complex(Math.cos(this.im) * r, Math.sin(this.im) * r);\r\n    }\r\n    exps(): Complex {\r\n        let r = Math.exp(this.re);\r\n        this.re = Math.cos(this.im) * r;\r\n        this.im = Math.sin(this.im) * r;\r\n        return this;\r\n    }\r\n    arg(): number {\r\n        return Math.atan2(this.im, this.re);\r\n    }\r\n    log(): Complex {\r\n        return new Complex(\r\n            Math.log(this.re * this.re + this.im * this.im) / 2,\r\n            Math.atan2(this.im, this.re)\r\n        );\r\n    }\r\n    logs(): Complex {\r\n        let a = Math.atan2(this.im, this.re);\r\n        this.re = Math.log(this.re * this.re + this.im * this.im) / 2;\r\n        this.im = a;\r\n        return this;\r\n    }\r\n    pow(p: Complex): Complex {\r\n        return this.log().muls(p).exps();\r\n    }\r\n    powf(n: number): Complex {\r\n        return this.log().mulfs(n).exps();\r\n    }\r\n    pows(p: Complex): Complex {\r\n        return this.logs().muls(p).exps();\r\n    }\r\n    powfs(n: number): Complex {\r\n        return this.logs().mulfs(n).exps();\r\n    }\r\n}\r\nexport class CMat2 {\r\n    // todo PSL(2,C)\r\n}","import { Bivec } from \"./bivec.js\";\r\nimport { Mat4 } from \"./mat4.js\";\r\nimport { Rotor, _r } from \"./rotor.js\";\r\nimport { Vec4, _vec4, _vec4_1 } from \"./vec4.js\";\r\n\r\n/** [A(4x4), b(1x4)]\r\n * \r\n *  [0(4x1), 1(1x1)]\r\n * \r\n *  a blocked 5x5 matrix for transform in 4d\r\n */\r\nexport class AffineMat4 {\r\n    mat: Mat4;\r\n    vec: Vec4;\r\n    constructor(mat: Mat4 = new Mat4(), vec: Vec4 = new Vec4()) {\r\n        this.mat = mat; this.vec = vec;\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        this.mat.writeBuffer(b, offset);\r\n        this.vec.writeBuffer(b, offset + 16);\r\n    }\r\n    inv(): AffineMat4 {\r\n        let m = this.mat.inv();\r\n        return new AffineMat4(m, m.mulv(this.vec).negs());\r\n    }\r\n    invs(): AffineMat4 {\r\n        this.mat.invs();\r\n        this.vec.copy(this.mat.mulv(this.vec).negs());\r\n        return this;\r\n    }\r\n    mul(m: AffineMat4): AffineMat4 {\r\n        return new AffineMat4(this.mat.mul(m.mat), this.mat.mulv(m.vec).adds(this.vec));\r\n    }\r\n    /** this = this * m */\r\n    mulsr(m: AffineMat4): AffineMat4 {\r\n        this.vec.adds(this.mat.mulv(m.vec));\r\n        this.mat.mulsr(m.mat);\r\n        return this;\r\n    }\r\n    /** this = m * this */\r\n    mulsl(m: AffineMat4): AffineMat4 {\r\n        this.vec.mulmatls(m.mat).adds(m.vec);\r\n        this.mat.mulsl(m.mat);\r\n        return this;\r\n    }\r\n    setFromObj4(o: Obj4) {\r\n        this.mat.setFromRotor(o.rotation);\r\n        if (o.scale) {\r\n            this.mat.mulsr(Mat4.diag(o.scale.x, o.scale.y, o.scale.z, o.scale.w));\r\n        }\r\n        this.vec.copy(o.position);\r\n        return this;\r\n    }\r\n    setFromObj4inv(o: Obj4) {\r\n        this.vec.copy(o.position).negs().rotatesconj(o.rotation);\r\n        this.mat.setFromRotorconj(o.rotation);\r\n        if (o.scale) {\r\n            let x = 1 / o.scale.x;\r\n            let y = 1 / o.scale.y;\r\n            let z = 1 / o.scale.z;\r\n            let w = 1 / o.scale.w;\r\n            this.mat.mulsl(Mat4.diag(x, y, z, w));\r\n            this.vec.x *= x; this.vec.y *= y; this.vec.z *= z; this.vec.w *= w;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n/** an coordinate transform of rotation translation and scale */\r\nexport class Obj4 {\r\n    position: Vec4;\r\n    rotation: Rotor;\r\n    scale: Vec4 | undefined;\r\n    constructor(\r\n        position?: Vec4, rotation?: Rotor,\r\n        scale?: Vec4\r\n    ) {\r\n        this.position = position ?? new Vec4();\r\n        this.rotation = rotation ?? new Rotor();\r\n        this.scale = scale;\r\n    }\r\n    copyObj4(o: Obj4) {\r\n        if (o.position) this.position.copy(o.position);\r\n        if (o.rotation) this.rotation.copy(o.rotation);\r\n        if (o.scale) { if (!this.scale) this.scale = new Vec4; this.scale.copy(o.scale); }\r\n        return this;\r\n    }\r\n    local2world(point: Vec4): Vec4 {\r\n        if (this.scale)\r\n            return new Vec4(\r\n                this.scale.x * point.x, this.scale.y * point.y,\r\n                this.scale.z * point.z, this.scale.w * point.w\r\n            ).rotates(this.rotation).adds(this.position);\r\n\r\n        return point.rotate(this.rotation).adds(this.position);\r\n    }\r\n    world2local(point: Vec4): Vec4 {\r\n        let a = point.sub(this.position).rotatesconj(this.rotation);\r\n        if (this.scale) return new Vec4(\r\n            a.x / this.scale.x, a.y / this.scale.y,\r\n            a.z / this.scale.z, a.w / this.scale.w\r\n        );\r\n        return a;\r\n    }\r\n    getMat4(): Mat4 {\r\n        if (this.scale)\r\n            return this.rotation.toMat4().mul(\r\n                Mat4.diag(this.scale.x, this.scale.y, this.scale.z, this.scale.w)\r\n            );\r\n        return this.rotation.toMat4();\r\n    }\r\n    getMat4inv(): Mat4 {\r\n        if (this.scale)\r\n            return Mat4.diag(1 / this.scale.x, 1 / this.scale.y, 1 / this.scale.z, 1 / this.scale.w).mul(\r\n                this.rotation.conj().toMat4()\r\n            );\r\n        return this.rotation.conj().toMat4();\r\n    }\r\n    getAffineMat4(): AffineMat4 {\r\n        if (this.scale)\r\n            return new AffineMat4(this.rotation.toMat4().mulsr(\r\n                Mat4.diag(this.scale.x, this.scale.y, this.scale.z, this.scale.w)\r\n            ), this.position.clone());\r\n        return new AffineMat4(this.rotation.toMat4(), this.position.clone());\r\n    }\r\n    getAffineMat4inv(): AffineMat4 {\r\n        let b = this.position.neg().rotatesconj(this.rotation);\r\n        if (!this.scale) return new AffineMat4(\r\n            this.rotation.conj().toMat4(), b\r\n        );\r\n        let x = 1 / this.scale.x;\r\n        let y = 1 / this.scale.y;\r\n        let z = 1 / this.scale.z;\r\n        let w = 1 / this.scale.w;\r\n        return new AffineMat4(Mat4.diag(x, y, z, w).mulsr(\r\n            this.rotation.conj().toMat4()\r\n        ), new Vec4(b.x * x, b.y * y, b.z * z, b.w * w));\r\n    }\r\n    translates(v: Vec4): this {\r\n        this.position.adds(v);\r\n        return this;\r\n    }\r\n    rotates(r: Rotor): this {\r\n        this.rotation.mulsl(r);\r\n        return this;\r\n    }\r\n    rotatesconj(r: Rotor): this {\r\n        this.rotation.mulslconj(r);\r\n        return this;\r\n    }\r\n    rotatesb(b: Bivec): this {\r\n        this.rotation.mulsl(_r.expset(b));\r\n        return this;\r\n    }\r\n    rotatesAt(r: Rotor, center: Vec4 = new Vec4()): this {\r\n        this.rotation.mulsl(r);\r\n        this.position.subs(center).rotates(r).adds(center);\r\n        return this;\r\n    }\r\n    lookAt(front: Vec4, target: Vec4) {\r\n        let dir = _vec4.subset(target, this.position);\r\n        this.rotates(_r.setFromLookAt(_vec4_1.copy(front).rotates(this.rotation), dir.norms()));\r\n        return this;\r\n    }\r\n}\r\n","type Relation = number[];\r\nexport class CosetTable {\r\n    length = 1;\r\n    private p = [0];\r\n    cosets: number[][];\r\n    // store int map for letters (e.g. \"a\" \"b\" \"a'\" \"b'\")\r\n    private generatorMap: string[] = [];\r\n    private generatorInvMap = new Map<string, number>;\r\n    private letters: number = 0; // equal to generatorMap.length\r\n    // map between integers, (\"a\" <-> \"'a\")\r\n    private genInvMap: number[] = [];\r\n    // int representation of relations and subsets\r\n    private relations: Relation[];\r\n    private subsets: Relation[];\r\n    // convert word to int representation\r\n    private parseWord(w: string) {\r\n        const word: Relation = [];\r\n        for (let i = 0; i < w.length; i++) {\r\n            if (w[i + 1] == \"'\") {\r\n                word.push(this.generatorInvMap.get(w[i] + \"'\")!);\r\n                i++;\r\n            } else {\r\n                word.push(this.generatorInvMap.get(w[i])!);\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n    constructor(generator: string, relation: string[], subset: string[]) {\r\n        for (const c of generator) {\r\n            this.generatorInvMap.set(c, this.letters++);\r\n            this.generatorMap.push(c);\r\n            if (relation.includes(c + c)) {\r\n                this.genInvMap[this.letters - 1] = this.letters - 1;\r\n            } else {\r\n                this.genInvMap[this.letters] = this.letters - 1;\r\n                this.genInvMap[this.letters - 1] = this.letters;\r\n                this.generatorInvMap.set(c + \"'\", this.letters++);\r\n                this.generatorMap.push(c + \"'\");\r\n            }\r\n        }\r\n        this.relations = relation.map(w => this.parseWord(w));\r\n        this.subsets = subset.map(w => this.parseWord(w));\r\n        this.cosets = [new Array(this.letters)];\r\n    }\r\n    private define(coset: number, gen: number) {\r\n        this.cosets[coset][gen] = this.length;\r\n        const newLine = new Array(this.letters);\r\n        newLine[this.genInvMap[gen]] = coset;\r\n        this.cosets.push(newLine);\r\n        this.p.push(this.length);\r\n        this.length++;\r\n    }\r\n    private coincidence(a: number, b: number) {\r\n        const q: number[] = [];\r\n        this.merge(a, b, q);\r\n        for (let i = 0; i < q.length; i++) {\r\n            const y = q[i];\r\n            for (let x = 0; x < this.letters; x++) {\r\n                const d = this.cosets[y][x];\r\n                if (d !== undefined) {\r\n                    let mu = this.findRep(y);\r\n                    let v = this.findRep(d);\r\n                    let mux = this.cosets[mu][x];\r\n                    if (mux !== undefined) {\r\n                        this.merge(v, mux, q);\r\n                    } else {\r\n                        this.cosets[mu][x] = v;\r\n                    }\r\n                    let vxinv = this.cosets[v][this.genInvMap[x]];\r\n                    if (vxinv !== undefined) {\r\n                        this.merge(mu, vxinv, q);\r\n                    } else {\r\n                        this.cosets[v][this.genInvMap[x]] = mu;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private merge(a: number, b: number, q: number[]) {\r\n        const i1 = this.findRep(a);\r\n        const i2 = this.findRep(b);\r\n        if (i1 !== i2) {\r\n            const u = Math.min(i1, i2);\r\n            const v = Math.max(i1, i2);\r\n            this.p[v] = u;\r\n            q.push(v);\r\n        }\r\n    }\r\n    private findRep(k: number) {\r\n        let l = k; let r = this.p[l];\r\n        while (r !== l) {\r\n            l = r; r = this.p[l];\r\n        }\r\n        let mu = k; r = this.p[mu];\r\n        while (r !== l) {\r\n            this.p[mu] = l; mu = r; r = this.p[mu];\r\n        }\r\n        return l;\r\n    }\r\n    private scanAndFill(coset: number, relation: number[]) {\r\n        const r = relation.length - 1;\r\n        let f = coset;\r\n        let i = 0;\r\n        let b = coset;\r\n        let j = r;\r\n        while (true) {\r\n            let fxi: number;\r\n            while (i <= r && (fxi = this.cosets[f][relation[i]]) !== undefined) {\r\n                f = fxi; i++;\r\n            }\r\n            if (i > r) {\r\n                if (f !== coset) this.coincidence(f, coset);\r\n                return;\r\n            }\r\n            let bxjinv: number;\r\n            while (j >= i && (bxjinv = this.cosets[b][this.genInvMap[relation[j]]]) !== undefined) {\r\n                b = bxjinv; j--;\r\n            }\r\n            if (j < i) {\r\n                this.coincidence(f, b);\r\n                return;\r\n            } else if (i === j) {\r\n                this.cosets[b][this.genInvMap[relation[i]]] = f;\r\n                this.cosets[f][relation[i]] = b;\r\n                return;\r\n            } else {\r\n                this.define(f, relation[i]);\r\n            }\r\n        }\r\n    }\r\n    enumerate() {\r\n        for (const w of this.subsets) {\r\n            this.scanAndFill(0, w);\r\n        }\r\n        for (let a = 0; a < this.cosets.length; a++) {\r\n            if (this.p[a] !== a) continue;\r\n            for (const w of this.relations) {\r\n                this.scanAndFill(a, w);\r\n                if (this.p[a] !== a) break;\r\n            }\r\n            if (this.p[a] !== a) continue;\r\n            for (let x = 0; x < this.letters; x++) {\r\n                if (this.cosets[a][x] === undefined) this.define(a, x);\r\n            }\r\n        }\r\n        this.compress();\r\n        this.standardize();\r\n        return this;\r\n    }\r\n    private compress() {\r\n        let j = 0;\r\n        let p2: number[] = [];\r\n        for (let i = 0; i < this.p.length; i++) {\r\n            if (this.p[i] === i) {\r\n                p2[i] = j++;\r\n            }\r\n        }\r\n        this.cosets = this.cosets.filter((v, i) => this.p[i] === i);\r\n        for (let i = 0; i < this.cosets.length; i++) {\r\n            for (let x = 0; x < this.letters; x++) {\r\n                this.cosets[i][x] = p2[this.p[this.cosets[i][x]]];\r\n            }\r\n        }\r\n        this.length = this.cosets.length;\r\n    }\r\n    private standardize() {\r\n        let y = 1;\r\n        for (let a = 0; a < this.cosets.length; a++) {\r\n            for (let x = 0; x < this.letters; x++) {\r\n                let b = this.cosets[a][x];\r\n                if (b >= y) {\r\n                    if (b > y) this.swapCoset(y, b);\r\n                    y++;\r\n                    if (y === this.length - 1) return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private swapCoset(b: number, y: number) {\r\n        let z = this.cosets[y]; this.cosets[y] = this.cosets[b]; this.cosets[b] = z;\r\n        for (let x = 0; x < this.letters; x++) {\r\n            const ix = this.genInvMap[x];\r\n            const u = this.cosets[y][x];\r\n            const v = this.cosets[b][x];\r\n            if (u === b) { this.cosets[y][x] = y; } else if (u === y) { this.cosets[y][x] = b; } else {\r\n                this.cosets[u][ix] = y;\r\n            }\r\n            if (v === b) { this.cosets[b][x] = y; } else if (v === y) { this.cosets[b][x] = b; } else {\r\n                this.cosets[v][ix] = b;\r\n            }\r\n        }\r\n    }\r\n    getRepresentatives() {\r\n        const represents = new Array<Relation>(this.cosets.length);\r\n        represents[0] = [];\r\n        for (let a = 0; a < this.cosets.length; a++) {\r\n            console.assert(represents[a] !== undefined);\r\n            for (let x = 0; x < this.letters; x++) {\r\n                const next = this.cosets[a][x];\r\n                if (!represents[next]) {\r\n                    represents[next] = represents[a].slice(0);\r\n                    represents[next].push(x);\r\n                }\r\n            }\r\n        }\r\n        return represents;\r\n    }\r\n    findCoset(w: Relation) {\r\n        let coset = 0;\r\n        w = w.slice(0);\r\n        let x: number;\r\n        while ((x = w.shift()) !== undefined) {\r\n            coset = this.cosets[coset][x];\r\n        }\r\n        return coset;\r\n    }\r\n}","import { Mat4 } from \"../algebra/mat4.js\";\r\nimport { Vec4 } from \"../algebra/vec4.js\";\r\nimport { _90, _DEG2RAD } from \"../const.js\";\r\n\r\nexport interface PerspectiveCamera {\r\n    fov: number;\r\n    near: number;\r\n    far: number;\r\n    /** aspect = width / height = depth / height */\r\n    aspect?: number;\r\n}\r\nexport interface OrthographicCamera {\r\n    /** size = height */\r\n    size: number;\r\n    near: number;\r\n    far: number;\r\n    /** aspect = width / height = depth / height */\r\n    aspect?: number;\r\n}\r\n/** If fov == 0, then return Orthographic projection matrix\r\n *  Caution: This function calculates PerspectiveMatrix for 0-1 depth range */\r\nexport function getPerspectiveProjectionMatrix(c: PerspectiveCamera) {\r\n    let ky = Math.tan(_90 - c.fov / 2 * _DEG2RAD);\r\n    let kxz = ky / (c.aspect ?? 1);\r\n    let a = -c.far / (c.far - c.near);\r\n    let b = c.near * a;\r\n    // [kxz   0    0    0    0]\r\n    // [0    ky   0    0    0]\r\n    // [0    0    kxz   0    0]\r\n    // [0    0    0    a    b]\r\n    // [0    0    0   -1    0]\r\n    return {\r\n        /** used for 3d */\r\n        mat4: new Mat4(\r\n            kxz, 0, 0, 0,\r\n            0, ky, 0, 0,\r\n            0, 0, a, b,\r\n            0, 0, -1, 0\r\n        ),\r\n        /** used for 4d because of lack of mat5x5 */\r\n        vec4: new Vec4(kxz, ky, a, b)\r\n    }\r\n}\r\nexport function getOrthographicProjectionMatrix(c: OrthographicCamera) {\r\n    let ky = 1 / c.size, kxz = ky / (c.aspect ?? 1);\r\n    let a = -1 / (c.far - c.near);\r\n    let b = c.near * a;\r\n    // [kxz   0    0    0    0]\r\n    // [0    ky   0    0    0]\r\n    // [0    0    kxz   0    0]\r\n    // [0    0    0    a    b]\r\n    // [0    0    0    0    1]\r\n    return {\r\n        /** used for 3d */\r\n        mat4: new Mat4(\r\n            kxz, 0, 0, 0,\r\n            0, ky, 0, 0,\r\n            0, 0, a, b,\r\n            0, 0, 0, 1\r\n        ),\r\n        /** used for 4d because of lack of mat5x5\r\n         */\r\n        vec4: new Vec4(kxz, ky, a, b)\r\n    }\r\n}","import { Obj4 } from \"../algebra/affine.js\";\r\nimport { Vec4 } from \"../algebra/vec4.js\";\r\n\r\nexport class Ray {\r\n    origin: Vec4;\r\n    direction: Vec4;\r\n}\r\n\r\nexport class Plane {\r\n    /** normal need to be normalized */\r\n    normal: Vec4;\r\n    /** halfspace n.v < offset */\r\n    offset: number;\r\n    constructor(normal: Vec4, offset: number) {\r\n        this.normal = normal;\r\n        this.offset = offset;\r\n    }\r\n    clone(){\r\n        return new Plane(this.normal.clone(),this.offset);\r\n    }\r\n    applyObj4(o:Obj4){\r\n        if(o.scale) throw \"scaling plane is not implemented yet\";\r\n        this.normal.rotates(o.rotation);\r\n        this.offset += this.normal.dot(o.position);\r\n        return this;\r\n    }\r\n    distanceToPoint(p: Vec4) {\r\n        return this.normal.dot(p) - this.offset;\r\n    }\r\n    /** regard r as an infinity line */\r\n    distanceToLine(r: Ray) {\r\n        \r\n    }\r\n    intersectRay(r:Ray){\r\n        \r\n    }\r\n    \r\n}\r\nexport class AABB {\r\n    min: Vec4;\r\n    max: Vec4;\r\n    testAABB(aabb: AABB) {\r\n        return (\r\n            (this.min.x <= aabb.max.x && this.max.x >= aabb.min.x) &&\r\n            (this.min.y <= aabb.max.y && this.max.y >= aabb.min.y) &&\r\n            (this.min.z <= aabb.max.z && this.max.z >= aabb.min.z) &&\r\n            (this.min.w <= aabb.max.w && this.max.w >= aabb.min.w)\r\n        );\r\n    }\r\n    /** when intersected return 0, when aabb is along the normal direction return 1, otherwise -1 */\r\n    testPlane(plane: Plane) {\r\n        let min: number, max: number;\r\n        if (plane.normal.x > 0) {\r\n            min = plane.normal.x * this.min.x;\r\n            max = plane.normal.x * this.max.x;\r\n        } else {\r\n            min = plane.normal.x * this.max.x;\r\n            max = plane.normal.x * this.min.x;\r\n        }\r\n        if (plane.normal.y > 0) {\r\n            min += plane.normal.y * this.min.y;\r\n            max += plane.normal.y * this.max.y;\r\n        } else {\r\n            min += plane.normal.y * this.max.y;\r\n            max += plane.normal.y * this.min.y;\r\n        }\r\n        if (plane.normal.z > 0) {\r\n            min += plane.normal.z * this.min.z;\r\n            max += plane.normal.z * this.max.z;\r\n        } else {\r\n            min += plane.normal.z * this.max.z;\r\n            max += plane.normal.z * this.min.z;\r\n        }\r\n        if (plane.normal.w > 0) {\r\n            min += plane.normal.w * this.min.w;\r\n            max += plane.normal.w * this.max.w;\r\n        } else {\r\n            min += plane.normal.w * this.max.w;\r\n            max += plane.normal.w * this.min.w;\r\n        }\r\n        if (min <= plane.offset && max >= plane.offset) {\r\n            return 0;\r\n        }\r\n        if (min <= plane.offset && max <= plane.offset) {\r\n            return -1;\r\n        }\r\n        if (min >= plane.offset && max >= plane.offset) {\r\n            return 1;\r\n        }\r\n    }\r\n    getPoints() {\r\n        return [\r\n            new Vec4(this.min.x, this.min.y, this.min.z, this.min.w),\r\n            new Vec4(this.max.x, this.min.y, this.min.z, this.min.w),\r\n            new Vec4(this.min.x, this.max.y, this.min.z, this.min.w),\r\n            new Vec4(this.max.x, this.max.y, this.min.z, this.min.w),\r\n            new Vec4(this.min.x, this.min.y, this.max.z, this.min.w),\r\n            new Vec4(this.max.x, this.min.y, this.max.z, this.min.w),\r\n            new Vec4(this.min.x, this.max.y, this.max.z, this.min.w),\r\n            new Vec4(this.max.x, this.max.y, this.max.z, this.min.w),\r\n            new Vec4(this.min.x, this.min.y, this.min.z, this.max.w),\r\n            new Vec4(this.max.x, this.min.y, this.min.z, this.max.w),\r\n            new Vec4(this.min.x, this.max.y, this.min.z, this.max.w),\r\n            new Vec4(this.max.x, this.max.y, this.min.z, this.max.w),\r\n            new Vec4(this.min.x, this.min.y, this.max.z, this.max.w),\r\n            new Vec4(this.max.x, this.min.y, this.max.z, this.max.w),\r\n            new Vec4(this.min.x, this.max.y, this.max.z, this.max.w),\r\n            new Vec4(this.max.x, this.max.y, this.max.z, this.max.w),\r\n\r\n\r\n        ]\r\n    }\r\n    constructor(min?: Vec4, max?: Vec4) {\r\n        this.min = min ?? new Vec4(Infinity, Infinity, Infinity, Infinity,);\r\n        this.max = max ?? new Vec4(-Infinity, -Infinity, -Infinity, -Infinity,);\r\n    }\r\n    static fromPoints(points: Vec4[]) {\r\n        let aabb = new AABB();\r\n        for (let p of points) {\r\n            aabb.min.x = Math.min(aabb.min.x, p.x);\r\n            aabb.min.y = Math.min(aabb.min.y, p.y);\r\n            aabb.min.z = Math.min(aabb.min.z, p.z);\r\n            aabb.min.w = Math.min(aabb.min.w, p.w);\r\n            aabb.max.x = Math.max(aabb.max.x, p.x);\r\n            aabb.max.y = Math.max(aabb.max.y, p.y);\r\n            aabb.max.z = Math.max(aabb.max.z, p.z);\r\n            aabb.max.w = Math.max(aabb.max.w, p.w);\r\n        }\r\n        return aabb;\r\n    }\r\n}","import { Obj4 } from \"../algebra/affine.js\";\r\nimport { Rotor } from \"../algebra/rotor.js\";\r\nimport { Vec4 } from \"../algebra/vec4.js\";\r\ninterface SplineData { points: Vec4[], rotors: Rotor[], curveLength: number[] }\r\nexport class Spline {\r\n    points: Vec4[];\r\n    derives: Vec4[];\r\n    constructor(points: Vec4[], derives: Vec4[]) {\r\n        if (points.length !== derives.length) console.error(\"Spline: points and derives lengths don't agree\");\r\n        this.points = points;\r\n        this.derives = derives;\r\n    }\r\n    generate(seg: number): SplineData {\r\n        let points: Vec4[] = [];\r\n        let prevPoint: Vec4 | undefined;\r\n        let prevDir = Vec4.w;\r\n        let prevRotor = new Rotor();\r\n        let rotors: Rotor[] = [];\r\n        let curveLength: number[] = [];\r\n        let curveLenSum = 0;\r\n        for (let i = 0; i < this.points.length - 1; i++) {\r\n            let p0 = this.points[i];\r\n            let p1 = this.points[i + 1];\r\n            let d0 = this.derives[i];\r\n            let d1 = this.derives[i + 1];\r\n            let p01 = p0.sub(p1);\r\n            let A = p01.mulf(2).adds(d0).adds(d1);\r\n            let B = d0.mulf(-2).subs(d1).subs(p01.mulfs(3));\r\n            let seginv = 1 / seg;\r\n            for (let j = 0; j <= seg; j++) {\r\n                if (j === seg && i !== this.points.length - 2) break;\r\n                let t = j * seginv;\r\n                let curPoint = new Vec4(\r\n                    p0.x + t * (d0.x + t * (B.x + t * A.x)),\r\n                    p0.y + t * (d0.y + t * (B.y + t * A.y)),\r\n                    p0.z + t * (d0.z + t * (B.z + t * A.z)),\r\n                    p0.w + t * (d0.w + t * (B.w + t * A.w))\r\n                );\r\n                if (prevPoint) {\r\n                    let curDir = curPoint.sub(prevPoint);\r\n                    let dirLen = curDir.norm();\r\n                    curDir.divfs(dirLen);\r\n                    prevRotor.mulsl(Rotor.lookAt(prevDir, curDir));\r\n                    // console.log(curDir.dot(Vec4.w.rotate(prevRotor)));\r\n                    prevDir = curDir;\r\n                    rotors.push(prevRotor.clone());\r\n                    curveLength.push(curveLenSum);\r\n                    curveLenSum += dirLen;\r\n                }\r\n                prevPoint = curPoint;\r\n                points.push(curPoint);\r\n            }\r\n        }\r\n        let lastDerive = this.derives[this.derives.length - 1];\r\n        if (\r\n            points[0].x == prevPoint!.x && points[0].y == prevPoint!.y &&\r\n            points[0].z == prevPoint!.z && points[0].w == prevPoint!.w &&\r\n            this.derives[0].x == lastDerive.x && this.derives[0].y == lastDerive.y &&\r\n            this.derives[0].z == lastDerive.z && this.derives[0].w == lastDerive.w\r\n        ) {\r\n            rotors.push(rotors[0]);\r\n        } else {\r\n            rotors.push(prevRotor);\r\n        }\r\n        curveLength.push(curveLenSum);\r\n        return { points, rotors, curveLength }\r\n    }\r\n    getValue(t: number) {\r\n        let i = Math.floor(t);\r\n        t -= i;\r\n        // i %= this.points.length - 1;\r\n        // if (i < 0) i += this.points.length - 1\r\n        let p0 = this.points[i];\r\n        let p1 = this.points[i + 1];\r\n        let d0 = this.derives[i];\r\n        let d1 = this.derives[i + 1];\r\n        let p01 = p0.sub(p1);\r\n        let A = p01.mulfs(2).adds(d0).adds(d1);\r\n        let B = d0.mulf(-2).subs(d1).subs(p01.mulfs(1.5));\r\n        let x = p0.x + t * (d0.x + t * (B.x + t * A.x));\r\n        let y = p0.y + t * (d0.y + t * (B.y + t * A.y));\r\n        let z = p0.z + t * (d0.z + t * (B.z + t * A.z));\r\n        let w = p0.w + t * (d0.w + t * (B.w + t * A.w));\r\n        return new Vec4(x, y, z, w);\r\n    }\r\n    getPositionAtLength(s: number, data: SplineData) {\r\n        let i = 0;\r\n        for (; i < data.curveLength.length; i++) {\r\n            if (data.curveLength[i] > s) { break; }\r\n        }\r\n        let a = data.curveLength[i - 1];\r\n        let b = data.curveLength[i];\r\n        let ratio = (s - a) / (b - a);\r\n        return data.points[i - 1].mulf(1 - ratio).addmulfs(data.points[i], ratio);\r\n    }\r\n    getObj4AtLength(s: number, data: SplineData) {\r\n        let i = 0;\r\n        for (; i < data.curveLength.length; i++) {\r\n            if (data.curveLength[i] > s) { break; }\r\n        }\r\n        let a = data.curveLength[i - 1];\r\n        let b = data.curveLength[i];\r\n        let ratio = (s - a) / (b - a);\r\n        return new Obj4(\r\n            data.points[i - 1].mulf(1 - ratio).addmulfs(data.points[i], ratio),\r\n            Rotor.slerp(data.rotors[i - 1], data.rotors[i], ratio)\r\n        );\r\n    }\r\n}","import { Srand } from \"./random.js\";\r\n\r\nexport class Perlin3 {\r\n    private _p = new Uint8Array(512);\r\n    constructor(srand: Srand) {\r\n        const p = this._p;\r\n        for (let i = 0; i < 256; i++) {\r\n            p[i] = i;\r\n        }\r\n        let i = 255;\r\n        while (i--) {\r\n            let j = srand.nexti(i);\r\n            let x = p[i];\r\n            p[i] = p[j];\r\n            p[j] = x;\r\n        }\r\n        for (i = 0; i < 256; i++) {\r\n            p[i + 256] = p[i];\r\n        }\r\n    }\r\n    value(x: number, y: number, z: number) {\r\n        const p = this._p;\r\n        let X = Math.floor(x) & 255;\r\n        let Y = Math.floor(y) & 255;\r\n        let Z = Math.floor(z) & 255;\r\n        x -= Math.floor(x);\r\n        y -= Math.floor(y);\r\n        z -= Math.floor(z);\r\n        function _fade(t: number) {\r\n            return t * t * t * (t * (t * 6 - 15) + 10);\r\n        }\r\n        let u = _fade(x);\r\n        let v = _fade(y);\r\n        let w = _fade(z);\r\n\r\n        function _lerp(t: number, a: number, b: number) {\r\n            return a + t * (b - a);\r\n        }\r\n\r\n        function _grad(hash: number, x: number, y: number, z: number) {\r\n            let h = hash & 15;\r\n            let u = h < 8 ? x : y;\r\n            let v = h < 4 ? y : (h == 12 || h == 14) ? x : z;\r\n            return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\r\n        }\r\n\r\n        let A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z;\r\n        let B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;\r\n\r\n        return _lerp(w, _lerp(v, _lerp(u, _grad(p[AA], x, y, z),\r\n            _grad(p[BA], x - 1, y, z)),\r\n            _lerp(u, _grad(p[AB], x, y - 1, z),\r\n                _grad(p[BB], x - 1, y - 1, z))),\r\n            _lerp(v, _lerp(u, _grad(p[AA + 1], x, y, z - 1),\r\n                _grad(p[BA + 1], x - 1, y, z - 1)),\r\n                _lerp(u, _grad(p[AB + 1], x, y - 1, z - 1),\r\n                    _grad(p[BB + 1], x - 1, y - 1, z - 1)\r\n                )\r\n            )\r\n        );\r\n    }\r\n}","import { CosetTable } from \"../algebra/group.js\";\r\nimport { Bivec, Rotor, Vec4 } from \"../math.js\";\r\n\r\nexport class Polytope {\r\n    private gens: string;\r\n    private rels: string[];\r\n    private schlafli: number[];\r\n    private fullgroupRepresentatives: number[][];\r\n    private fullgroupTable: CosetTable;\r\n\r\n    // reflection directions: these dirs are sqrt(1/2) length for calc convenience\r\n    // [b2[0], 0 ..]\r\n    // [b1[1],b2[1],0..]\r\n    // [0,b1[2],b2[2],0..]\r\n    // [0,0,b1[2],b2[2],0..]\r\n    // ...\r\n    private basis1 = [0,];\r\n    private basis2 = [1,];\r\n\r\n    constructor(schlafli: number[]) {\r\n        let len = schlafli.length + 1;\r\n        this.schlafli = schlafli;\r\n\r\n        // get group descriptors\r\n\r\n        let gens = \"\";\r\n        let rels: string[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            gens += i;\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const si = i.toString();\r\n            for (let j = i; j < len; j++) {\r\n                const sj = j.toString();\r\n                const mij = i === j ? 1 : j === i + 1 ? schlafli[i] : 2;\r\n                rels.push((si + sj).repeat(mij));\r\n            }\r\n        }\r\n        this.gens = gens;\r\n        this.rels = rels;\r\n\r\n        // get reflection descriptors\r\n\r\n        for (let i = 1; i < len; i++) {\r\n            const cos = Math.cos(Math.PI / this.schlafli[i - 1]);\r\n            this.basis1.push(Math.abs(cos / this.basis2[i - 1]));\r\n            this.basis2.push(Math.sqrt(1 - this.basis1[i] * this.basis1[i]));\r\n        }\r\n        // these dirs are sqrt(1/2) length for calc convenience\r\n        for (let i = 1; i < len; i++) {\r\n            this.basis1[i] *= Math.SQRT2;\r\n            this.basis2[i] *= Math.SQRT2;\r\n        }\r\n    }\r\n    private generateVertices(v0: Vec4, cosetTable: CosetTable) {\r\n        const vertices = new Array<Vec4>(cosetTable.length);\r\n        vertices[0] = v0.clone();\r\n        for (const [c, coset] of cosetTable.cosets.entries()) {\r\n            const v = vertices[c];\r\n            for (const [x, cx] of coset.entries()) {\r\n                if (vertices[cx]) continue;\r\n                if (x === 0) {\r\n                    const nv = v.clone(); nv.x = -nv.x;\r\n                    vertices[cx] = nv; continue;\r\n                }\r\n\r\n                const vs = v.flat();\r\n                // these dirs are sqrt(1/2) length, no need to mul 2\r\n                const proj = (vs[x - 1] * this.basis1[x] + vs[x] * this.basis2[x]);\r\n                vs[x - 1] -= proj * this.basis1[x];\r\n                vs[x] -= proj * this.basis2[x];\r\n                vertices[cx] = new Vec4(...vs);\r\n            }\r\n        }\r\n        return vertices;\r\n    }\r\n    private getInitVertex(vertexPosition: number[]) {\r\n        if (this.gens.length !== vertexPosition.length + 1) throw (\"Polytope.getInitVertex: vertexPosition length must be\" + (this.gens.length - 1));\r\n        const pqr = vertexPosition.slice(0);\r\n        const remain = pqr.length ? 1 - pqr.reduce((a, b) => a + b) : 1;\r\n        if (remain < 0) throw \"vertexPosition's sum must be less than or equal to 1\";\r\n        pqr.push(remain);\r\n        const basisVec = [Vec4.x];\r\n        for (let i = 1; i < this.basis1.length; i++) {\r\n            const v = [0, 0, 0, 0];\r\n            v[i - 1] = this.basis1[i];\r\n            v[i] = this.basis2[i];\r\n            basisVec.push(new Vec4(...v));\r\n        }\r\n        const points: Vec4[] = [];\r\n        for (let j = 0; j < this.gens.length; j++) {\r\n            let a: Vec4 | Bivec;\r\n            for (let i = 0; i < this.gens.length; i++) {\r\n                if (i === j) continue;\r\n                if (!a) { a = basisVec[i]; continue; }\r\n                if (a instanceof Vec4) { a = a.wedge(basisVec[i]); continue; }\r\n                if (a instanceof Bivec) { a = a.wedgev(basisVec[i]); continue; }\r\n            }\r\n            if (vertexPosition.length === 1) {\r\n                const na = (a as Vec4).yxzw(); na.x = -na.x;\r\n                points.push(na);\r\n            } else if (vertexPosition.length === 2) {\r\n                points.push((a as Bivec).wedgev(Vec4.w));\r\n            } else if (vertexPosition.length === 3) {\r\n                points.push(a as Vec4);\r\n            }\r\n        }\r\n        const v0 = new Vec4;\r\n        for (const [i, k] of pqr.entries()) {\r\n            v0.addmulfs(points[i].norms(), k);\r\n        }\r\n        return v0;\r\n    }\r\n    generateFaceLinkTable(srcNum: number, srcTable: number[], ...destTable: number[][]) {\r\n        const src: Set<number>[] = new Array(srcNum);\r\n        for (let i = 0; i < srcTable.length; i++) {\r\n            src[srcTable[i]] ??= new Set<number>();\r\n            for (const val of destTable.map(dt => dt[i])) {\r\n                src[srcTable[i]].add(val);\r\n            }\r\n        }\r\n        return src.map(e => Array.from(e));\r\n    }\r\n    getRegularPolytope() {\r\n        if (this.gens.length === 1) return [];\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getFirstStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(0); if (pqr.length) pqr[0] = 1;\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[0].cosetTable);\r\n        let polytope: (Array<number>[] | Vec4[])[] = [V];\r\n        for (let i = 1; i < this.gens.length; i++) {\r\n            polytope.push(this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i - 1].subGroupTable));\r\n        }\r\n        return polytope;\r\n    }\r\n    getTrucatedRegularPolytope(t: number) {\r\n        if (t <= 0 || t >= 1) throw \"Trucation parameter must be in range (0,1)!\";\r\n        if (this.gens.length === 1) return [];\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getTrucatedStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(0); if (pqr.length > 1) { pqr[0] = 1 - t; pqr[1] = t; }\r\n        let vi = this.gens.length;\r\n        // if > 4, return abstract vertex without coord\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[vi].cosetTable);\r\n        let polytope: (Array<number>[] | Vec4[])[] = [V];\r\n        let tOffset: number;\r\n        for (let i = 1; i < this.gens.length; i++) {\r\n            // [vi->ei vi->e]\r\n            // [ei->fi (ei+e)->f]\r\n            // [fi->ci (fi+f)->c]\r\n            const t = this.generateFaceLinkTable(kfaceTable[i === vi - 1 ? 0 : (i + vi)].cosetTable.length, kfaceTable[i === vi - 1 ? 0 : (i + vi)].subGroupTable, kfaceTable[i + vi - 1].subGroupTable);\r\n            let offset = t.length;\r\n            if (i > 1)\r\n                t.push(...this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i + vi - 1].subGroupTable, kfaceTable[i - 1].subGroupTable.map(e => e + tOffset)));\r\n            else\r\n                t.push(...this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i + vi - 1].subGroupTable));\r\n            polytope.push(t);\r\n            tOffset = offset;\r\n        }\r\n        return polytope;\r\n    }\r\n    getBitrucatedRegularPolytope(t: number = 0.5) {\r\n        if (t <= 0 || t >= 1) throw \"BiTrucation parameter must be in range (0,1)!\";\r\n        if (this.gens.length !== 4) throw \"BiTrucation is only implemented in 4D!\";\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getBitrucatedStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(0); if (pqr.length > 1) { pqr[0] = 0; pqr[1] = t; pqr[2] = 1 - t; }\r\n        let vi = this.gens.length;\r\n        // if > 4, return abstract vertex without coord\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[vi].cosetTable);\r\n\r\n        let tOffset: number;\r\n        const link = (src: number, ...dst: number[]) => {\r\n            return this.generateFaceLinkTable(kfaceTable[src].cosetTable.length, kfaceTable[src].subGroupTable, ...dst.map(n => kfaceTable[n].subGroupTable));\r\n        }\r\n        // [vi->ei vi->e]\r\n        const ei = link(5, 4);\r\n        const e = link(7, 4);\r\n        const edge = [...ei, ...e];\r\n        kfaceTable[7].subGroupTable = kfaceTable[7].subGroupTable.map(e => e + ei.length);\r\n        // [ei->f (ei+e)->fi e->fe]\r\n        const f = link(2, 5);\r\n        const fi = link(6, 5, 7);\r\n        const fe = link(1, 7);\r\n        const face = [...f, ...fi, ...fe];\r\n        kfaceTable[6].subGroupTable = kfaceTable[6].subGroupTable.map(e => e + f.length);\r\n        kfaceTable[1].subGroupTable = kfaceTable[1].subGroupTable.map(e => e + f.length + fi.length);\r\n        // [(fi+fe)->ci (fi+f)->c ]\r\n        const ci = link(0, 1, 6);\r\n        const c = link(3, 2, 6);\r\n        const cell = [...ci, ...c];\r\n        return [V, edge, face, cell];\r\n    }\r\n    getStructures(subgroups: string[][]) {\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        return subgroups.map(subgroup => {\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            return { cosetTable, subGroupTable };\r\n        })\r\n    }\r\n    getFirstStructure() {\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            // example: V: \"b,c,d\"  E: \"a,c,d\" F: \"a,b,d\" C: \"a,b,c\"\r\n            const subgroup = Array.from(this.gens); subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        return table;\r\n    }\r\n    getTrucatedStructure() {\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            // Ct: \"b,c,d\" E: \"a,c,d\" F: \"a,b,d\" C: \"a,b,c\"\r\n            const subgroup = Array.from(this.gens); subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n\r\n        for (let i = 0; i < this.gens.length - 1; i++) {\r\n            // Vt:\"c,d\" Et:\"b,d\" Ft:\"b,c\" \r\n            let subgroup = Array.from(this.gens); subgroup = subgroup.slice(1); subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        return table;\r\n    }\r\n    getBitrucatedStructure() {\r\n        if (this.gens.length !== 4) throw \"not implemented yet\";\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        // Ct: \"b,c,d\" Fe: \"a,c,d\" F: \"a,b,d\" C: \"a,b,c\"\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            const subgroup = Array.from(this.gens);\r\n            subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        // Vt:\"a,d\" Et:\"b,d\" Ft:\"b,c\" E: \"a,c\" \r\n\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            let subgroup = Array.from(this.gens);\r\n            if (i === 0) {\r\n                subgroup = [subgroup[0], subgroup[3]];\r\n            } else if (i === this.gens.length - 1) {\r\n                subgroup = [subgroup[0], subgroup[2]];\r\n            } else { subgroup = subgroup.slice(1); subgroup.splice(i, 1); }\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        return table;\r\n    }\r\n\r\n\r\n    getPolytope() {\r\n        if (this.gens.length === 1) return [];\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getFirstStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(1 / pqr.length);\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[0].cosetTable);\r\n        let polytope: (Array<number>[] | Vec4[])[] = [V];\r\n        for (let i = 1; i < this.gens.length; i++) {\r\n            polytope.push(this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i - 1].subGroupTable));\r\n        }\r\n        return polytope;\r\n    }\r\n}","import { AffineMat4, Obj4 } from \"../../math/algebra/affine.js\";\r\nimport { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { AABB } from \"../../math/geometry/primitive.js\";\r\nimport { Mat4, OrthographicCamera, PerspectiveCamera } from \"../../math/math.js\";\r\nimport { RaytracingPipeline, TetraSlicePipeline } from \"./pipeline.js\";\r\n\r\n/** Base Configs for SliceRenderer, This can't be changed after renderer creation */\r\nexport interface SliceRendererConfig {\r\n    /** Must be power of 2, this includes retina slices and cross sections */\r\n    maxSlicesNumber?: number;\r\n    /** Must be power of 2, large number can waste lots GPU memory;\r\n     *  Used to preallocate gpu memory for intermediate data of cross section\r\n     */\r\n    maxCrossSectionBufferSize?: number;\r\n    /** Size for one parallel unit to calculate retina slices and cross sections\r\n     */\r\n    sliceGroupSize?: number;\r\n    /** Enable this to improve retina render quality, but this may cause performance issue */\r\n    enableFloat16Blend?: boolean;\r\n    /** Use this default value when workgroup size is not specified within a tetraslice pipeline */\r\n    defaultWorkGroupSize?: number;\r\n\r\n}\r\n\r\n/** An enum for stereo's eye option */\r\nexport enum EyeStereo {\r\n    LeftEye,\r\n    None,\r\n    RightEye,\r\n}\r\nexport enum RetinaSliceFacing {\r\n    POSZ,\r\n    NEGZ,\r\n    POSY,\r\n    NEGY,\r\n    POSX,\r\n    NEGX,\r\n}\r\n/** Config for displaying one cross section */\r\nexport interface SectionConfig {\r\n    /** Cross section's offset from origin, default is 0 */\r\n    slicePos?: number;\r\n    /** Cross section's direction */\r\n    facing: RetinaSliceFacing;\r\n    /** Wether this cross section enables stereo eye offset, default is None */\r\n    eyeStereo?: EyeStereo;\r\n    /** A viewport to draw cross section on 2D screen */\r\n    viewport: { x: number; y: number; width: number; height: number };\r\n    /** cross section's horizontal resolution in pixel */\r\n    resolution?: number;\r\n}\r\n// const DefaultRetinaResolution = 512;\r\n// const DefaultOpacity = 1;\r\nexport interface DisplayConfig {\r\n    /** canvas size for render destination */\r\n    canvasSize?: GPUExtent3DStrict;\r\n    /** An array representing all cross sections for rendering */\r\n    sections?: Array<SectionConfig>;\r\n    /** Number of Slice Layers for rendering retina voxel */\r\n    retinaLayers?: number;\r\n    /** Resolution in pixel for each slice layers of retina */\r\n    retinaResolution?: number;\r\n    /** Opacity for retina voxel */\r\n    opacity?: number;\r\n    /** Retina 3D depth stereo. if one stereo eye offset is not zero, stereo mode will turn on */\r\n    retinaStereoEyeOffset?: number;\r\n    /** Cross section 4D depth stereo. if one stereo eye offset is not zero, stereo mode will turn on */\r\n    sectionStereoEyeOffset?: number;\r\n    /** size of center crosshair in the retina, non-zero value to enable it */\r\n    crosshair?: number;\r\n    /** background color for rendering transparent retina */\r\n    screenBackgroundColor?: GPUColor;\r\n    /** clear color for retina's voxel */\r\n    retinaClearColor?: GPUColor;\r\n    /** camera4d is in 4d scene */\r\n    camera4D?: PerspectiveCamera | OrthographicCamera;\r\n    /** camera3D is for rendering 3d retina */\r\n    camera3D?: PerspectiveCamera | OrthographicCamera;\r\n    /** this matrix determine camera's position and rotation for rendering 3d retina */\r\n    retinaViewMatrix?: Mat4;\r\n}\r\nexport const DefaultDisplayConfig: DisplayConfig = {\r\n    retinaLayers: 64,\r\n    sectionStereoEyeOffset: 0.1,\r\n    retinaStereoEyeOffset: 0.2,\r\n    retinaResolution: 512,\r\n    opacity: 1,\r\n    canvasSize: {\r\n        width: typeof window !== \"undefined\" ? window.innerWidth * window.devicePixelRatio : 1024,\r\n        height: typeof window !== \"undefined\" ? window.innerHeight * window.devicePixelRatio : 512\r\n    },\r\n    camera3D: { fov: 40, near: 0.2, far: 20 },\r\n    camera4D: { fov: 90, near: 0.01, far: 10 },\r\n    retinaViewMatrix: new Mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, -5, 0, 0, 0, 1),\r\n    sections: [\r\n        {\r\n            facing: RetinaSliceFacing.NEGX,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: -0.2, y: -0.8, width: 0.2, height: 0.2 }\r\n        },\r\n        {\r\n            facing: RetinaSliceFacing.NEGX,\r\n            eyeStereo: EyeStereo.RightEye,\r\n            viewport: { x: 0.8, y: -0.8, width: 0.2, height: 0.2 }\r\n        },\r\n        {\r\n            facing: RetinaSliceFacing.NEGY,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: -0.2, y: 0.8, width: 0.2, height: 0.2 }\r\n        },\r\n        {\r\n            facing: RetinaSliceFacing.NEGY,\r\n            eyeStereo: EyeStereo.RightEye,\r\n            viewport: { x: 0.8, y: 0.8, width: 0.2, height: 0.2 }\r\n        },\r\n        {\r\n            facing: RetinaSliceFacing.POSZ,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: -0.8, y: -0.8, width: 0.2, height: 0.2 }\r\n        },\r\n        {\r\n            facing: RetinaSliceFacing.POSZ,\r\n            eyeStereo: EyeStereo.RightEye,\r\n            viewport: { x: 0.2, y: 0.2 - 1, width: 0.2, height: 0.2 }\r\n        },\r\n    ]\r\n}\r\nexport type DisplayConfigName = keyof DisplayConfig;\r\nexport interface RenderState {\r\n    /** Set TetraSlicePipeline and prepare GPU resources.\r\n     *  Next calls should be function sliceTetras or setBindGroup.\r\n     */\r\n    beginTetras(pipeline: TetraSlicePipeline): void;\r\n    setBindGroup(index: number, bindGroup: GPUBindGroup): void;\r\n    /** Compute slice of given bindgroup attribute data.\r\n     *  beginTetras should be called at first to specify a tetraSlicePipeline\r\n     *  Next calls should be function sliceTetras, setBindGroup or drawTetras.\r\n     */\r\n    sliceTetras(vertexBindGroup: GPUBindGroup, tetraCount: number, instanceCount?: number): void;\r\n    /** This function draw slices on a internal framebuffer\r\n     *  Every beginTetras call should be end with drawTetras call\r\n     */\r\n    drawTetras(bindGroups?: { group: number, binding: GPUBindGroup }[]): void;\r\n    drawRaytracing(pipeline: RaytracingPipeline, bindGroups?: GPUBindGroup[]): void;\r\n\r\n    testWithFrustumData(obb: AABB, camMat: AffineMat4 | Obj4, modelMat?: AffineMat4 | Obj4): boolean;\r\n    getFrustumRange(camMat: AffineMat4 | Obj4, allRange?: boolean): Vec4[];\r\n}\r\nexport interface RetinaRenderPass {\r\n    /**\r\n   * Nominal type branding.\r\n   * https://github.com/microsoft/TypeScript/pull/33038\r\n   * @internal\r\n   */\r\n    readonly __brand: \"RetinaRenderPass\";\r\n    init(): Promise<this>;\r\n}\r\n\r\n\r\nexport interface RaytracingPipelineDescriptor {\r\n    code: string;\r\n    rayEntryPoint: string;\r\n    fragmentEntryPoint: string;\r\n    // viewport can be used in sprite shader\r\n    viewport?: { x: number, y: number, width: number, height: number };\r\n}\r\nexport interface GeneralShaderState {\r\n    code: string;\r\n    entryPoint: string;\r\n}\r\nexport interface TetraVertexState extends GeneralShaderState {\r\n    workgroupSize?: number;\r\n}\r\ntype SinglePipelineLayout = GPUPipelineLayout | GPUAutoLayoutMode | GPUBindGroupLayoutDescriptor[];\r\nexport type SlicePipelineLayout = GPUAutoLayoutMode | {\r\n    computeLayout: SinglePipelineLayout;\r\n    renderLayout: SinglePipelineLayout;\r\n}\r\nexport interface TetraSlicePipelineDescriptor {\r\n    vertex: TetraVertexState;\r\n    fragment: GeneralShaderState;\r\n    cullMode?: GPUCullMode;\r\n    layout?: SlicePipelineLayout;\r\n}\r\nexport interface RetinaRenderPassDescriptor {\r\n    /** here only bindgroup(1) is avaliable */\r\n    alphaShader?: GeneralShaderState;\r\n    alphaShaderBindingResources?: GPUBindingResource[];\r\n}\r\nexport interface IWireframeRenderState {\r\n    render(buffer: GPUBuffer, vertices: number): void;\r\n}","class e{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}get isPointer(){return!1}getTypeName(){return this.name}}class t{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class n extends e{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class s extends e{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}getTypeName(){return`array<${this.format.getTypeName()}, ${this.count}>`}}class r extends e{constructor(e,t,n){super(e,n),this.format=t}get isPointer(){return!0}getTypeName(){return`&${this.format.getTypeName()}`}}class a extends e{constructor(e,t,n,s){super(e,n),this.format=t,this.access=s}get isTemplate(){return!0}getTypeName(){let e=this.name;if(null!==this.format){if('vec2'===e||'vec3'===e||'vec4'===e||'mat2x2'===e||'mat2x3'===e||'mat2x4'===e||'mat3x2'===e||'mat3x3'===e||'mat3x4'===e||'mat4x2'===e||'mat4x3'===e||'mat4x4'===e){if('f32'===this.format.name)return e+='f',e;if('i32'===this.format.name)return e+='i',e;if('u32'===this.format.name)return e+='u',e;if('bool'===this.format.name)return e+='b',e;if('f16'===this.format.name)return e+='h',e}e+=`<${this.format.name}>`}else if('vec2'===e||'vec3'===e||'vec4'===e)return e;return e}}var i;(e=>{e[e.Uniform=0]='Uniform',e[e.Storage=1]='Storage',e[e.Texture=2]='Texture',e[e.Sampler=3]='Sampler',e[e.StorageTexture=4]='StorageTexture'})(i||(i={}));class o{constructor(e,t,n,s,r,a,i){this.name=e,this.type=t,this.group=n,this.binding=s,this.attributes=r,this.resourceType=a,this.access=i}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class c{constructor(e,t){this.name=e,this.type=t}}class l{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s,this.interpolation=null}}class u{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s}}class h{constructor(e,t,n,s){this.name=e,this.type=t,this.attributes=n,this.id=s}}class f{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n}}class p{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n}}class d{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}function m(e){var t=(32768&e)>>15,n=(31744&e)>>10,s=1023&e;return 0==n?(t?-1:1)*Math.pow(2,-14)*(s/Math.pow(2,10)):31==n?s?NaN:1/0*(t?-1:1):(t?-1:1)*Math.pow(2,n-15)*(1+s/Math.pow(2,10))}const g=new Float32Array(1),_=new Int32Array(g.buffer),x=new Uint16Array(1);function y(e){g[0]=e;const t=_[0],n=t>>31&1;let s=t>>23&255,r=8388607&t;if(255===s)return x[0]=n<<15|31744|(0!==r?512:0),x[0];if(0===s){if(0===r)return x[0]=n<<15,x[0];r|=8388608;let e=113;for(;!(8388608&r);)r<<=1,e--;return s=127-e,r&=8388607,s>0?(r=(r>>126-s)+(r>>127-s&1),x[0]=n<<15|s<<10|r>>13,x[0]):(x[0]=n<<15,x[0])}return s=s-127+15,s>=31?(x[0]=n<<15|31744,x[0]):s<=0?s<-10?(x[0]=n<<15,x[0]):(r=(8388608|r)>>1-s,x[0]=n<<15|r>>13,x[0]):(r>>=13,x[0]=n<<15|s<<10|r,x[0])}const b=new Uint32Array(1),v=new Float32Array(b.buffer,0,1);function w(e){const t=112+(e>>6&31)<<23|(63&e)<<17;return b[0]=t,v[0]}function k(e,t,n,s,r,a,i,o,c){const l=s*(i>>=r)*(a>>=r)+n*i+t*o;switch(c){case'r8unorm':return[I(e,l,'8unorm',1)[0]];case'r8snorm':return[I(e,l,'8snorm',1)[0]];case'r8uint':return[I(e,l,'8uint',1)[0]];case'r8sint':return[I(e,l,'8sint',1)[0]];case'rg8unorm':{const t=I(e,l,'8unorm',2);return[t[0],t[1]]}case'rg8snorm':{const t=I(e,l,'8snorm',2);return[t[0],t[1]]}case'rg8uint':{const t=I(e,l,'8uint',2);return[t[0],t[1]]}case'rg8sint':{const t=I(e,l,'8sint',2);return[t[0],t[1]]}case'rgba8unorm-srgb':case'rgba8unorm':{const t=I(e,l,'8unorm',4);return[t[0],t[1],t[2],t[3]]}case'rgba8snorm':{const t=I(e,l,'8snorm',4);return[t[0],t[1],t[2],t[3]]}case'rgba8uint':{const t=I(e,l,'8uint',4);return[t[0],t[1],t[2],t[3]]}case'rgba8sint':{const t=I(e,l,'8sint',4);return[t[0],t[1],t[2],t[3]]}case'bgra8unorm-srgb':case'bgra8unorm':{const t=I(e,l,'8unorm',4);return[t[2],t[1],t[0],t[3]]}case'r16uint':return[I(e,l,'16uint',1)[0]];case'r16sint':return[I(e,l,'16sint',1)[0]];case'r16float':return[I(e,l,'16float',1)[0]];case'rg16uint':{const t=I(e,l,'16uint',2);return[t[0],t[1]]}case'rg16sint':{const t=I(e,l,'16sint',2);return[t[0],t[1]]}case'rg16float':{const t=I(e,l,'16float',2);return[t[0],t[1]]}case'rgba16uint':{const t=I(e,l,'16uint',4);return[t[0],t[1],t[2],t[3]]}case'rgba16sint':{const t=I(e,l,'16sint',4);return[t[0],t[1],t[2],t[3]]}case'rgba16float':{const t=I(e,l,'16float',4);return[t[0],t[1],t[2],t[3]]}case'r32uint':return[I(e,l,'32uint',1)[0]];case'r32sint':return[I(e,l,'32sint',1)[0]];case'depth16unorm':case'depth24plus':case'depth24plus-stencil8':case'depth32float':case'depth32float-stencil8':case'r32float':return[I(e,l,'32float',1)[0]];case'rg32uint':{const t=I(e,l,'32uint',2);return[t[0],t[1]]}case'rg32sint':{const t=I(e,l,'32sint',2);return[t[0],t[1]]}case'rg32float':{const t=I(e,l,'32float',2);return[t[0],t[1]]}case'rgba32uint':{const t=I(e,l,'32uint',4);return[t[0],t[1],t[2],t[3]]}case'rgba32sint':{const t=I(e,l,'32sint',4);return[t[0],t[1],t[2],t[3]]}case'rgba32float':{const t=I(e,l,'32float',4);return[t[0],t[1],t[2],t[3]]}case'rg11b10ufloat':{const t=new Uint32Array(e.buffer,l,1)[0],n=(4192256&t)>>11,s=(4290772992&t)>>22;return[w(2047&t),w(n),function(e){const t=112+(e>>5&31)<<23|(31&e)<<18;return b[0]=t,v[0]}(s),1]}}return null}function I(e,t,n,s){const r=[0,0,0,0];for(let a=0;a<s;++a)switch(n){case'8unorm':r[a]=e[t]/255,t++;break;case'8snorm':r[a]=e[t]/255*2-1,t++;break;case'8uint':r[a]=e[t],t++;break;case'8sint':r[a]=e[t]-127,t++;break;case'16uint':r[a]=e[t]|e[t+1]<<8,t+=2;break;case'16sint':r[a]=(e[t]|e[t+1]<<8)-32768,t+=2;break;case'16float':r[a]=m(e[t]|e[t+1]<<8),t+=2;break;case'32uint':case'32sint':r[a]=e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24,t+=4;break;case'32float':r[a]=new Float32Array(e.buffer,t,1)[0],t+=4}return r}function T(e,t,n,s,r){for(let a=0;a<s;++a)switch(n){case'8unorm':e[t]=255*r[a],t++;break;case'8snorm':e[t]=.5*(r[a]+1)*255,t++;break;case'8uint':e[t]=r[a],t++;break;case'8sint':e[t]=r[a]+127,t++;break;case'16uint':new Uint16Array(e.buffer,t,1)[0]=r[a],t+=2;break;case'16sint':new Int16Array(e.buffer,t,1)[0]=r[a],t+=2;break;case'16float':{const n=y(r[a]);new Uint16Array(e.buffer,t,1)[0]=n,t+=2;break}case'32uint':new Uint32Array(e.buffer,t,1)[0]=r[a],t+=4;break;case'32sint':new Int32Array(e.buffer,t,1)[0]=r[a],t+=4;break;case'32float':new Float32Array(e.buffer,t,1)[0]=r[a],t+=4}return r}const S={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},'rgba8unorm-srgb':{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},'bgra8unorm-srgb':{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!1,hasStencil:!0,channels:1},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,depthOnlyFormat:'depth32float',channels:1},'depth24plus-stencil8':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,depthOnlyFormat:'depth32float',channels:1},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},'depth32float-stencil8':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,stencilOnlyFormat:'depth32float',channels:1},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},'bc1-rgba-unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc1-rgba-unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc2-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc2-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc3-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc3-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc4-r-unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},'bc4-r-snorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},'bc5-rg-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},'bc5-rg-snorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},'bc6h-rgb-ufloat':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc6h-rgb-float':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc7-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'bc7-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'etc2-rgb8unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'etc2-rgb8unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'etc2-rgb8a1unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'etc2-rgb8a1unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'etc2-rgba8unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'etc2-rgba8unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'eac-r11unorm':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},'eac-r11snorm':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},'eac-rg11unorm':{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},'eac-rg11snorm':{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},'astc-4x4-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'astc-4x4-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},'astc-5x4-unorm':{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},'astc-5x4-unorm-srgb':{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},'astc-5x5-unorm':{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},'astc-5x5-unorm-srgb':{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},'astc-6x5-unorm':{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},'astc-6x5-unorm-srgb':{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},'astc-6x6-unorm':{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},'astc-6x6-unorm-srgb':{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},'astc-8x5-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},'astc-8x5-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},'astc-8x6-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},'astc-8x6-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},'astc-8x8-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},'astc-8x8-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},'astc-10x5-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},'astc-10x5-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},'astc-10x6-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},'astc-10x6-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},'astc-10x8-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},'astc-10x8-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},'astc-10x10-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},'astc-10x10-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},'astc-12x10-unorm':{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},'astc-12x10-unorm-srgb':{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},'astc-12x12-unorm':{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4},'astc-12x12-unorm-srgb':{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4}};class A{constructor(){this.id=A._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return''}search(e){e(this)}searchBlock(e,t){if(e){t(E.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t($.instance)}}constEvaluate(e,t){throw new Error('Cannot evaluate node')}constEvaluateString(e){return this.constEvaluate(e).toString()}}A._id=0;class E extends A{}E.instance=new E;class $ extends A{}$.instance=new $;const L=new Set(['all','all','any','select','arrayLength','abs','acos','acosh','asin','asinh','atan','atanh','atan2','ceil','clamp','cos','cosh','countLeadingZeros','countOneBits','countTrailingZeros','cross','degrees','determinant','distance','dot','dot4U8Packed','dot4I8Packed','exp','exp2','extractBits','faceForward','firstLeadingBit','firstTrailingBit','floor','fma','fract','frexp','insertBits','inverseSqrt','ldexp','length','log','log2','max','min','mix','modf','normalize','pow','quantizeToF16','radians','reflect','refract','reverseBits','round','saturate','sign','sin','sinh','smoothStep','sqrt','step','tan','tanh','transpose','trunc','dpdx','dpdxCoarse','dpdxFine','dpdy','dpdyCoarse','dpdyFine','fwidth','fwidthCoarse','fwidthFine','textureDimensions','textureGather','textureGatherCompare','textureLoad','textureNumLayers','textureNumLevels','textureNumSamples','textureSample','textureSampleBias','textureSampleCompare','textureSampleCompareLevel','textureSampleGrad','textureSampleLevel','textureSampleBaseClampToEdge','textureStore','atomicLoad','atomicStore','atomicAdd','atomicSub','atomicMax','atomicMin','atomicAnd','atomicOr','atomicXor','atomicExchange','atomicCompareExchangeWeak','pack4x8snorm','pack4x8unorm','pack4xI8','pack4xU8','pack4x8Clamp','pack4xU8Clamp','pack2x16snorm','pack2x16unorm','pack2x16float','unpack4x8snorm','unpack4x8unorm','unpack4xI8','unpack4xU8','unpack2x16snorm','unpack2x16unorm','unpack2x16float','storageBarrier','textureBarrier','workgroupBarrier','workgroupUniformLoad','subgroupAdd','subgroupExclusiveAdd','subgroupInclusiveAdd','subgroupAll','subgroupAnd','subgroupAny','subgroupBallot','subgroupBroadcast','subgroupBroadcastFirst','subgroupElect','subgroupMax','subgroupMin','subgroupMul','subgroupExclusiveMul','subgroupInclusiveMul','subgroupOr','subgroupShuffle','subgroupShuffleDown','subgroupShuffleUp','subgroupShuffleXor','subgroupXor','quadBroadcast','quadSwapDiagonal','quadSwapX','quadSwapY']);class C extends A{constructor(){super()}}class D extends C{constructor(e,t,n,s,r,a){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=s,this.startLine=r,this.endLine=a}get astNodeType(){return'function'}search(e){if(this.attributes)for(const t of this.attributes)e(t);e(this);for(const t of this.args)e(t);this.searchBlock(this.body,e)}}class N extends C{constructor(e){super(),this.expression=e}get astNodeType(){return'staticAssert'}search(e){this.expression.search(e)}}class V extends C{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return'while'}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class O extends C{constructor(e,t){super(),this.body=e,this.loopId=t}get astNodeType(){return'continuing'}search(e){this.searchBlock(this.body,e)}}class B extends C{constructor(e,t,n,s){super(),this.init=e,this.condition=t,this.increment=n,this.body=s}get astNodeType(){return'for'}search(e){var t,n,s;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(s=this.increment)||void 0===s||s.search(e),this.searchBlock(this.body,e)}}class F extends C{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'var'}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class M extends C{constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n}get astNodeType(){return'override'}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class U extends C{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'let'}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class P extends C{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'const'}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}var W,q,H,z;(e=>{e.increment='++',e.decrement='--'})(W||(W={})),(e=>{e.parse=function(t){const n=t;if('parse'==n)throw new Error('Invalid value for IncrementOperator');return e[n]}})(W||(W={}));class R extends C{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return'increment'}search(e){this.variable.search(e)}}(e=>{e.assign='=',e.addAssign='+=',e.subtractAssin='-=',e.multiplyAssign='*=',e.divideAssign='/=',e.moduloAssign='%=',e.andAssign='&=',e.orAssign='|=',e.xorAssign='^=',e.shiftLeftAssign='<<=',e.shiftRightAssign='>>='})(q||(q={})),(e=>{e.parse=function(e){const t=e;if('parse'==t)throw new Error('Invalid value for AssignOperator');return t}})(q||(q={}));class G extends C{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return'assign'}search(e){this.variable.search(e),this.value.search(e)}}class X extends C{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return'call'}isBuiltin(){return L.has(this.name)}search(e){for(const t of this.args)t.search(e);e(this)}}class j extends C{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return'loop'}search(e){var t;this.searchBlock(this.body,e),null===(t=this.continuing)||void 0===t||t.search(e)}}class Z extends C{constructor(e,t){super(),this.condition=e,this.cases=t}get astNodeType(){return'switch'}search(e){e(this);for(const t of this.cases)t.search(e)}}class Q extends C{constructor(e,t,n,s){super(),this.condition=e,this.body=t,this.elseif=n,this.else=s}get astNodeType(){return'if'}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class Y extends C{constructor(e){super(),this.value=e}get astNodeType(){return'return'}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class K extends C{constructor(e){super(),this.name=e}get astNodeType(){return'enable'}}class J extends C{constructor(e){super(),this.extensions=e}get astNodeType(){return'requires'}}class ee extends C{constructor(e,t){super(),this.severity=e,this.rule=t}get astNodeType(){return'diagnostic'}}class te extends C{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return'alias'}}class ne extends C{constructor(){super()}get astNodeType(){return'discard'}}class se extends C{constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return'break'}}class re extends C{constructor(){super(),this.loopId=-1}get astNodeType(){return'continue'}}class ae extends C{constructor(e){super(),this.attributes=null,this.name=e}get astNodeType(){return'type'}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=ae._priority.get(t.name);ae._priority.get(e[n].name)<s&&(t=e[n])}return'x32'===t.name?ae.i32:t}getTypeName(){return this.name}}ae.x32=new ae('x32'),ae.f32=new ae('f32'),ae.i32=new ae('i32'),ae.u32=new ae('u32'),ae.f16=new ae('f16'),ae.bool=new ae('bool'),ae.void=new ae('void'),ae._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class ie extends ae{constructor(e){super(e)}}class oe extends ae{constructor(e,t,n,s){super(e),this.members=t,this.startLine=n,this.endLine=s}get astNodeType(){return'struct'}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}search(e){for(const t of this.members)e(t)}}class ce extends ae{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return'template'}getTypeName(){let e=this.name;if(null!==this.format){if('vec2'===e||'vec3'===e||'vec4'===e||'mat2x2'===e||'mat2x3'===e||'mat2x4'===e||'mat3x2'===e||'mat3x3'===e||'mat3x4'===e||'mat4x2'===e||'mat4x3'===e||'mat4x4'===e){if('f32'===this.format.name)return e+='f',e;if('i32'===this.format.name)return e+='i',e;if('u32'===this.format.name)return e+='u',e;if('bool'===this.format.name)return e+='b',e;if('f16'===this.format.name)return e+='h',e}e+=`<${this.format.name}>`}else if('vec2'===e||'vec3'===e||'vec4'===e)return e;return e}}ce.vec2f=new ce('vec2',ae.f32,null),ce.vec3f=new ce('vec3',ae.f32,null),ce.vec4f=new ce('vec4',ae.f32,null),ce.vec2i=new ce('vec2',ae.i32,null),ce.vec3i=new ce('vec3',ae.i32,null),ce.vec4i=new ce('vec4',ae.i32,null),ce.vec2u=new ce('vec2',ae.u32,null),ce.vec3u=new ce('vec3',ae.u32,null),ce.vec4u=new ce('vec4',ae.u32,null),ce.vec2h=new ce('vec2',ae.f16,null),ce.vec3h=new ce('vec3',ae.f16,null),ce.vec4h=new ce('vec4',ae.f16,null),ce.vec2b=new ce('vec2',ae.bool,null),ce.vec3b=new ce('vec3',ae.bool,null),ce.vec4b=new ce('vec4',ae.bool,null),ce.mat2x2f=new ce('mat2x2',ae.f32,null),ce.mat2x3f=new ce('mat2x3',ae.f32,null),ce.mat2x4f=new ce('mat2x4',ae.f32,null),ce.mat3x2f=new ce('mat3x2',ae.f32,null),ce.mat3x3f=new ce('mat3x3',ae.f32,null),ce.mat3x4f=new ce('mat3x4',ae.f32,null),ce.mat4x2f=new ce('mat4x2',ae.f32,null),ce.mat4x3f=new ce('mat4x3',ae.f32,null),ce.mat4x4f=new ce('mat4x4',ae.f32,null),ce.mat2x2h=new ce('mat2x2',ae.f16,null),ce.mat2x3h=new ce('mat2x3',ae.f16,null),ce.mat2x4h=new ce('mat2x4',ae.f16,null),ce.mat3x2h=new ce('mat3x2',ae.f16,null),ce.mat3x3h=new ce('mat3x3',ae.f16,null),ce.mat3x4h=new ce('mat3x4',ae.f16,null),ce.mat4x2h=new ce('mat4x2',ae.f16,null),ce.mat4x3h=new ce('mat4x3',ae.f16,null),ce.mat4x4h=new ce('mat4x4',ae.f16,null),ce.mat2x2i=new ce('mat2x2',ae.i32,null),ce.mat2x3i=new ce('mat2x3',ae.i32,null),ce.mat2x4i=new ce('mat2x4',ae.i32,null),ce.mat3x2i=new ce('mat3x2',ae.i32,null),ce.mat3x3i=new ce('mat3x3',ae.i32,null),ce.mat3x4i=new ce('mat3x4',ae.i32,null),ce.mat4x2i=new ce('mat4x2',ae.i32,null),ce.mat4x3i=new ce('mat4x3',ae.i32,null),ce.mat4x4i=new ce('mat4x4',ae.i32,null),ce.mat2x2u=new ce('mat2x2',ae.u32,null),ce.mat2x3u=new ce('mat2x3',ae.u32,null),ce.mat2x4u=new ce('mat2x4',ae.u32,null),ce.mat3x2u=new ce('mat3x2',ae.u32,null),ce.mat3x3u=new ce('mat3x3',ae.u32,null),ce.mat3x4u=new ce('mat3x4',ae.u32,null),ce.mat4x2u=new ce('mat4x2',ae.u32,null),ce.mat4x3u=new ce('mat4x3',ae.u32,null),ce.mat4x4u=new ce('mat4x4',ae.u32,null);class le extends ae{constructor(e,t,n,s){super(e),this.storage=t,this.type=n,this.access=s}get astNodeType(){return'pointer'}}class ue extends ae{constructor(e,t,n,s){super(e),this.attributes=t,this.format=n,this.count=s}get astNodeType(){return'array'}get isArray(){return!0}}class he extends ae{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return'sampler'}}class fe extends A{constructor(){super(),this.postfix=null}}class pe extends fe{constructor(e){super(),this.value=e}get astNodeType(){return'stringExpr'}toString(){return this.value}constEvaluateString(){return this.value}}class de extends fe{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return'createExpr'}search(e){if(e(this),this.args)for(const t of this.args)t.search(e)}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class me extends fe{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t}get astNodeType(){return'callExpr'}setCachedReturnValue(e){this.cachedReturnValue=e}get isBuiltin(){return L.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this)}}class ge extends fe{constructor(e){super(),this.name=e}get astNodeType(){return'varExpr'}search(e){e(this),this.postfix&&this.postfix.search(e)}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class _e extends fe{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return'constExpr'}constEvaluate(e,t){if(this.initializer){const t=e.evalExpression(this.initializer,e.context);return null!==t&&this.postfix?t.getSubData(e,this.postfix,e.context):t}return null}search(e){this.initializer.search(e)}}class xe extends fe{constructor(e,t){super(),this.value=e,this.type=t}get astNodeType(){return'literalExpr'}constEvaluate(e,t){return void 0!==t&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof Be}get isVector(){return this.value instanceof Me||this.value instanceof Ue}get scalarValue(){return this.value instanceof Be?this.value.value:(console.error('Value is not scalar.'),0)}get vectorValue(){return this.value instanceof Me||this.value instanceof Ue?this.value.data:(console.error('Value is not a vector or matrix.'),new Float32Array(0))}}class ye extends fe{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return'bitcastExpr'}search(e){this.value.search(e)}}class be extends fe{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return'typecastExpr'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.searchBlock(this.args,e)}}class ve extends fe{constructor(e){super(),this.index=e}search(e){this.index.search(e)}}class we extends fe{constructor(){super()}}class ke extends we{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return'unaryOp'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e)}}class Ie extends we{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return'binaryOp'}_getPromotedType(e,t){return e.name===t.name?e:'f32'===e.name||'f32'===t.name?ae.f32:'u32'===e.name||'u32'===t.name?ae.u32:ae.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e)}}class Te extends A{constructor(e){super(),this.body=e}search(e){e(this),this.searchBlock(this.body,e)}}class Se extends fe{constructor(){super()}get astNodeType(){return'default'}}class Ae extends Te{constructor(e,t){super(t),this.selectors=e}get astNodeType(){return'case'}search(e){this.searchBlock(this.body,e)}}class Ee extends Te{constructor(e){super(e)}get astNodeType(){return'default'}search(e){this.searchBlock(this.body,e)}}class $e extends A{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return'argument'}}class Le extends A{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return'elseif'}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class Ce extends A{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return'member'}}class De extends A{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return'attribute'}}class Ne{constructor(e,t){this.parent=null,this.typeInfo=e,this.parent=t,this.id=Ne._id++}clone(){throw`Clone: Not implemented for ${this.constructor.name}`}setDataValue(e,t,n,s){console.error(`SetDataValue: Not implemented for ${this.constructor.name}`)}getSubData(e,t,n){return console.error(`GetDataValue: Not implemented for ${this.constructor.name}`),null}toString(){return`<${this.typeInfo.getTypeName()}>`}}Ne._id=0;class Ve extends Ne{constructor(){super(new e('void',null),null)}toString(){return'void'}}Ve.void=new Ve;class Oe extends Ne{constructor(e){super(new r('pointer',e.typeInfo,null),null),this.reference=e}clone(){return this}setDataValue(e,t,n,s){this.reference.setDataValue(e,t,n,s)}getSubData(e,t,n){return t?this.reference.getSubData(e,t,n):this}toString(){return`&${this.reference.toString()}`}}class Be extends Ne{constructor(e,t,n=null){super(t,n),e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array?this.data=e:'x32'===this.typeInfo.name?e-Math.floor(e)!==0?this.data=new Float32Array([e]):this.data=e>=0?new Uint32Array([e]):new Int32Array([e]):'i32'===this.typeInfo.name||'bool'===this.typeInfo.name?this.data=new Int32Array([e]):'u32'===this.typeInfo.name?this.data=new Uint32Array([e]):'f32'===this.typeInfo.name||'f16'===this.typeInfo.name?this.data=new Float32Array([e]):console.error('ScalarData2: Invalid type',t)}clone(){if(this.data instanceof Float32Array)return new Be(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new Be(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new Be(new Uint32Array(this.data),this.typeInfo,null);throw'ScalarData: Invalid data type'}get value(){return this.data[0]}set value(e){this.data[0]=e}setDataValue(e,t,n,s){if(n)return void console.error('SetDataValue: Scalar data does not support postfix',n);if(!(t instanceof Be))return void console.error('SetDataValue: Invalid value',t);let r=t.data[0];'i32'===this.typeInfo.name||'u32'===this.typeInfo.name?r=Math.floor(r):'bool'===this.typeInfo.name&&(r=r?1:0),this.data[0]=r}getSubData(e,t,n){return t?(console.error('getSubData: Scalar data does not support postfix',t),null):this}toString(){return`${this.value}`}}function Fe(e,t,n){const s=t.length;return 2===s?'f32'===n?new Me(new Float32Array(t),e.getTypeInfo('vec2f')):'i32'===n||'bool'===n?new Me(new Int32Array(t),e.getTypeInfo('vec2i')):'u32'===n?new Me(new Uint32Array(t),e.getTypeInfo('vec2u')):'f16'===n?new Me(new Float32Array(t),e.getTypeInfo('vec2h')):(console.error(`getSubData: Unknown format ${n}`),null):3===s?'f32'===n?new Me(new Float32Array(t),e.getTypeInfo('vec3f')):'i32'===n||'bool'===n?new Me(new Int32Array(t),e.getTypeInfo('vec3i')):'u32'===n?new Me(new Uint32Array(t),e.getTypeInfo('vec3u')):'f16'===n?new Me(new Float32Array(t),e.getTypeInfo('vec3h')):(console.error(`getSubData: Unknown format ${n}`),null):4===s?'f32'===n?new Me(new Float32Array(t),e.getTypeInfo('vec4f')):'i32'===n||'bool'===n?new Me(new Int32Array(t),e.getTypeInfo('vec4i')):'u32'===n?new Me(new Uint32Array(t),e.getTypeInfo('vec4u')):'f16'===n?new Me(new Float32Array(t),e.getTypeInfo('vec4h')):(console.error(`getSubData: Unknown format ${n}`),null):(console.error(`getSubData: Invalid vector size ${t.length}`),null)}class Me extends Ne{constructor(e,t,n=null){if(super(t,n),e instanceof Float32Array||e instanceof Uint32Array||e instanceof Int32Array)this.data=e;else{const t=this.typeInfo.name;'vec2f'===t||'vec3f'===t||'vec4f'===t?this.data=new Float32Array(e):'vec2i'===t||'vec3i'===t||'vec4i'===t?this.data=new Int32Array(e):'vec2u'===t||'vec3u'===t||'vec4u'===t?this.data=new Uint32Array(e):'vec2h'===t||'vec3h'===t||'vec4h'===t?this.data=new Float32Array(e):'vec2b'===t||'vec3b'===t||'vec4b'===t?this.data=new Int32Array(e):'vec2'===t||'vec3'===t||'vec4'===t?this.data=new Float32Array(e):console.error(`VectorData: Invalid type ${t}`)}}clone(){if(this.data instanceof Float32Array)return new Me(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new Me(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new Me(new Uint32Array(this.data),this.typeInfo,null);throw'VectorData: Invalid data type'}setDataValue(e,t,n,s){n instanceof pe?console.error('TODO: Set vector postfix'):t instanceof Me?this.data=t.data:console.error('SetDataValue: Invalid value',t)}getSubData(e,t,n){if(null===t)return this;let s=e.getTypeInfo('f32');if(this.typeInfo instanceof a)s=this.typeInfo.format||s;else{const t=this.typeInfo.name;'vec2f'===t||'vec3f'===t||'vec4f'===t?s=e.getTypeInfo('f32'):'vec2i'===t||'vec3i'===t||'vec4i'===t?s=e.getTypeInfo('i32'):'vec2b'===t||'vec3b'===t||'vec4b'===t?s=e.getTypeInfo('bool'):'vec2u'===t||'vec3u'===t||'vec4u'===t?s=e.getTypeInfo('u32'):'vec2h'===t||'vec3h'===t||'vec4h'===t?s=e.getTypeInfo('f16'):console.error(`GetSubData: Unknown type ${t}`)}let r=this;for(;null!==t&&null!==r;){if(t instanceof ve){const a=t.index;let i=-1;if(a instanceof xe){if(!(a.value instanceof Be))return console.error(`GetSubData: Invalid array index ${a.value}`),null;i=a.value.value}else{const t=e.evalExpression(a,n);if(!(t instanceof Be))return console.error('GetSubData: Unknown index type',a),null;i=t.value}if(i<0||i>=r.data.length)return console.error('GetSubData: Index out of range',i),null;if(r.data instanceof Float32Array){const e=new Float32Array(r.data.buffer,r.data.byteOffset+4*i,1);return new Be(e,s)}if(r.data instanceof Int32Array){const e=new Int32Array(r.data.buffer,r.data.byteOffset+4*i,1);return new Be(e,s)}if(r.data instanceof Uint32Array){const e=new Uint32Array(r.data.buffer,r.data.byteOffset+4*i,1);return new Be(e,s)}throw'GetSubData: Invalid data type'}if(!(t instanceof pe))return console.error('GetSubData: Unknown postfix',t),null;{const n=t.value.toLowerCase();if(1===n.length){let e=0;if('x'===n||'r'===n)e=0;else if('y'===n||'g'===n)e=1;else if('z'===n||'b'===n)e=2;else{if('w'!==n&&'a'!==n)return console.error(`GetSubData: Unknown member ${n}`),null;e=3}if(this.data instanceof Float32Array){let t=new Float32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Be(t,s,this)}if(this.data instanceof Int32Array){let t=new Int32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Be(t,s,this)}if(this.data instanceof Uint32Array){let t=new Uint32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Be(t,s,this)}}const a=[];for(const e of n)'x'===e||'r'===e?a.push(this.data[0]):'y'===e||'g'===e?a.push(this.data[1]):'z'===e||'b'===e?a.push(this.data[2]):'w'===e||'a'===e?a.push(this.data[3]):console.error(`GetDataValue: Unknown member ${e}`);r=Fe(e,a,s.name)}t=t.postfix}return r}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class Ue extends Ne{constructor(e,t,n=null){super(t,n),e instanceof Float32Array?this.data=e:this.data=new Float32Array(e)}clone(){return new Ue(new Float32Array(this.data),this.typeInfo,null)}setDataValue(e,t,n,s){n instanceof pe?console.error('TODO: Set matrix postfix'):t instanceof Ue?this.data=t.data:console.error('SetDataValue: Invalid value',t)}getSubData(e,t,n){if(null===t)return this;const s=this.typeInfo.name;if(e.getTypeInfo('f32'),this.typeInfo instanceof a)this.typeInfo.format;else if(s.endsWith('f'))e.getTypeInfo('f32');else if(s.endsWith('i'))e.getTypeInfo('i32');else if(s.endsWith('u'))e.getTypeInfo('u32');else{if(!s.endsWith('h'))return console.error(`GetDataValue: Unknown type ${s}`),null;e.getTypeInfo('f16')}if(t instanceof ve){const r=t.index;let a=-1;if(r instanceof xe){if(!(r.value instanceof Be))return console.error(`GetDataValue: Invalid array index ${r.value}`),null;a=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof Be))return console.error('GetDataValue: Unknown index type',r),null;a=t.value}if(a<0||a>=this.data.length)return console.error('GetDataValue: Index out of range',a),null;const i=s.endsWith('h')?'h':'f';let o;if('mat2x2'===s||'mat2x2f'===s||'mat2x2h'===s||'mat3x2'===s||'mat3x2f'===s||'mat3x2h'===s||'mat4x2'===s||'mat4x2f'===s||'mat4x2h'===s)o=new Me(new Float32Array(this.data.buffer,this.data.byteOffset+2*a*4,2),e.getTypeInfo(`vec2${i}`));else if('mat2x3'===s||'mat2x3f'===s||'mat2x3h'===s||'mat3x3'===s||'mat3x3f'===s||'mat3x3h'===s||'mat4x3'===s||'mat4x3f'===s||'mat4x3h'===s)o=new Me(new Float32Array(this.data.buffer,this.data.byteOffset+3*a*4,3),e.getTypeInfo(`vec3${i}`));else{if('mat2x4'!==s&&'mat2x4f'!==s&&'mat2x4h'!==s&&'mat3x4'!==s&&'mat3x4f'!==s&&'mat3x4h'!==s&&'mat4x4'!==s&&'mat4x4f'!==s&&'mat4x4h'!==s)return console.error(`GetDataValue: Unknown type ${s}`),null;o=new Me(new Float32Array(this.data.buffer,this.data.byteOffset+4*a*4,4),e.getTypeInfo(`vec4${i}`))}return t.postfix?o.getSubData(e,t.postfix,n):o}return console.error('GetDataValue: Invalid postfix',t),null}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class Pe extends Ne{constructor(e,t,n=0,s=null){super(t,s),this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n}clone(){const e=new Uint8Array(new Uint8Array(this.buffer,this.offset,this.typeInfo.size));return new Pe(e.buffer,this.typeInfo,0,null)}setDataValue(t,r,a,i){if(null===r)return void console.log('setDataValue: NULL data.');let o=this.offset,c=this.typeInfo;for(;a;){if(a instanceof ve)if(c instanceof s){const e=a.index;if(e instanceof xe){if(!(e.value instanceof Be))return void console.error(`SetDataValue: Invalid index type ${e.value}`);o+=e.value.value*c.stride}else{const n=t.evalExpression(e,i);if(!(n instanceof Be))return void console.error('SetDataValue: Unknown index type',e);o+=n.value*c.stride}c=c.format}else console.error(`SetDataValue: Type ${c.getTypeName()} is not an array`);else{if(!(a instanceof pe))return void console.error('SetDataValue: Unknown postfix type',a);{const t=a.value;if(c instanceof n){let e=!1;for(const n of c.members)if(n.name===t){o+=n.offset,c=n.type,e=!0;break}if(!e)return void console.error(`SetDataValue: Member ${t} not found`)}else if(c instanceof e){const e=c.getTypeName();let n=0;if('x'===t||'r'===t)n=0;else if('y'===t||'g'===t)n=1;else if('z'===t||'b'===t)n=2;else{if('w'!==t&&'a'!==t)return void console.error(`SetDataValue: Unknown member ${t}`);n=3}if(!(r instanceof Be))return void console.error('SetDataValue: Invalid value',r);const s=r.value;return'vec2f'===e?void(new Float32Array(this.buffer,o,2)[n]=s):'vec3f'===e?void(new Float32Array(this.buffer,o,3)[n]=s):'vec4f'===e?void(new Float32Array(this.buffer,o,4)[n]=s):'vec2i'===e?void(new Int32Array(this.buffer,o,2)[n]=s):'vec3i'===e?void(new Int32Array(this.buffer,o,3)[n]=s):'vec4i'===e?void(new Int32Array(this.buffer,o,4)[n]=s):'vec2u'===e?void(new Uint32Array(this.buffer,o,2)[n]=s):'vec3u'===e?void(new Uint32Array(this.buffer,o,3)[n]=s):'vec4u'===e?void(new Uint32Array(this.buffer,o,4)[n]=s):void console.error(`SetDataValue: Type ${e} is not a struct`)}}}a=a.postfix}this.setData(t,r,c,o,i)}setData(e,t,n,s,r){const a=n.getTypeName();if('f32'!==a&&'f16'!==a)if('i32'!==a&&'atomic<i32>'!==a&&'x32'!==a)if('u32'!==a&&'atomic<u32>'!==a)if('bool'!==a){if('vec2f'===a||'vec2h'===a){const e=new Float32Array(this.buffer,s,2);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]))}if('vec3f'===a||'vec3h'===a){const e=new Float32Array(this.buffer,s,3);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]))}if('vec4f'===a||'vec4h'===a){const e=new Float32Array(this.buffer,s,4);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]))}if('vec2i'===a){const e=new Int32Array(this.buffer,s,2);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]))}if('vec3i'===a){const e=new Int32Array(this.buffer,s,3);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]))}if('vec4i'===a){const e=new Int32Array(this.buffer,s,4);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]))}if('vec2u'===a){const e=new Uint32Array(this.buffer,s,2);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]))}if('vec3u'===a){const e=new Uint32Array(this.buffer,s,3);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]))}if('vec4u'===a){const e=new Uint32Array(this.buffer,s,4);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]))}if('vec2b'===a){const e=new Uint32Array(this.buffer,s,2);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]))}if('vec3b'===a){const e=new Uint32Array(this.buffer,s,3);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]))}if('vec4b'===a){const e=new Uint32Array(this.buffer,s,4);return void(t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]))}if('mat2x2f'===a||'mat2x2h'===a){const e=new Float32Array(this.buffer,s,4);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]))}if('mat2x3f'===a||'mat2x3h'===a){const e=new Float32Array(this.buffer,s,6);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5]))}if('mat2x4f'===a||'mat2x4h'===a){const e=new Float32Array(this.buffer,s,8);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7]))}if('mat3x2f'===a||'mat3x2h'===a){const e=new Float32Array(this.buffer,s,6);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5]))}if('mat3x3f'===a||'mat3x3h'===a){const e=new Float32Array(this.buffer,s,9);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8]))}if('mat3x4f'===a||'mat3x4h'===a){const e=new Float32Array(this.buffer,s,12);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11]))}if('mat4x2f'===a||'mat4x2h'===a){const e=new Float32Array(this.buffer,s,8);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7]))}if('mat4x3f'===a||'mat4x3h'===a){const e=new Float32Array(this.buffer,s,12);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11]))}if('mat4x4f'===a||'mat4x4h'===a){const e=new Float32Array(this.buffer,s,16);return void(t instanceof Ue?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11],e[12]=t.data[12],e[13]=t.data[13],e[14]=t.data[14],e[15]=t.data[15]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]))}if(t instanceof Pe){if(n===t.typeInfo){return void new Uint8Array(this.buffer,s,t.buffer.byteLength).set(new Uint8Array(t.buffer))}console.error('SetDataValue: Type mismatch',a,t.typeInfo.getTypeName())}else console.error(`SetData: Unknown type ${a}`)}else t instanceof Be&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof Be&&(new Uint32Array(this.buffer,s,1)[0]=t.value);else t instanceof Be&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof Be&&(new Float32Array(this.buffer,s,1)[0]=t.value)}getSubData(t,r,i){var o,c,l;if(null===r)return this;let u=this.offset,h=this.typeInfo;for(;r;){if(r instanceof ve){const e=r.index,n=e instanceof fe?t.evalExpression(e,i):e;let a=0;if(n instanceof Be?a=n.value:'number'==typeof n?a=n:console.error('GetDataValue: Invalid index type',e),h instanceof s)u+=a*h.stride,h=h.format;else{const e=h.getTypeName();'mat4x4'===e||'mat4x4f'===e||'mat4x4h'===e?(u+=16*a,h=t.getTypeInfo('vec4f')):console.error(`getDataValue: Type ${h.getTypeName()} is not an array`)}}else{if(!(r instanceof pe))return console.error('GetDataValue: Unknown postfix type',r),null;{const s=r.value;if(h instanceof n){let e=!1;for(const t of h.members)if(t.name===s){u+=t.offset,h=t.type,e=!0;break}if(!e)return console.error(`GetDataValue: Member ${s} not found`),null}else if(h instanceof e){const e=h.getTypeName();if('vec2f'===e||'vec3f'===e||'vec4f'===e||'vec2i'===e||'vec3i'===e||'vec4i'===e||'vec2u'===e||'vec3u'===e||'vec4u'===e||'vec2b'===e||'vec3b'===e||'vec4b'===e||'vec2h'===e||'vec3h'===e||'vec4h'===e||'vec2'===e||'vec3'===e||'vec4'===e){if(s.length>0&&s.length<5){let n='f';const r=[];for(let a=0;a<s.length;++a){const i=s[a].toLowerCase();let o=0;if('x'===i||'r'===i)o=0;else if('y'===i||'g'===i)o=1;else if('z'===i||'b'===i)o=2;else{if('w'!==i&&'a'!==i)return console.error(`Unknown member ${s}`),null;o=3}if(1===s.length){if(e.endsWith('f'))return this.buffer.byteLength<u+4*o+4?(console.log('Insufficient buffer data'),null):new Be(new Float32Array(this.buffer,u+4*o,1),t.getTypeInfo('f32'),this);if(e.endsWith('h'))return new Be(new Float32Array(this.buffer,u+4*o,1),t.getTypeInfo('f16'),this);if(e.endsWith('i'))return new Be(new Int32Array(this.buffer,u+4*o,1),t.getTypeInfo('i32'),this);if(e.endsWith('b'))return new Be(new Int32Array(this.buffer,u+4*o,1),t.getTypeInfo('bool'),this);if(e.endsWith('u'))return new Be(new Uint32Array(this.buffer,u+4*o,1),t.getTypeInfo('i32'),this)}if('vec2f'===e)r.push(new Float32Array(this.buffer,u,2)[o]);else if('vec3f'===e){if(u+12>=this.buffer.byteLength)return console.log('Insufficient buffer data'),null;const e=new Float32Array(this.buffer,u,3);r.push(e[o])}else if('vec4f'===e)r.push(new Float32Array(this.buffer,u,4)[o]);else if('vec2i'===e)n='i',r.push(new Int32Array(this.buffer,u,2)[o]);else if('vec3i'===e)n='i',r.push(new Int32Array(this.buffer,u,3)[o]);else if('vec4i'===e)n='i',r.push(new Int32Array(this.buffer,u,4)[o]);else if('vec2u'===e){n='u';const e=new Uint32Array(this.buffer,u,2);r.push(e[o])}else'vec3u'===e?(n='u',r.push(new Uint32Array(this.buffer,u,3)[o])):'vec4u'===e&&(n='u',r.push(new Uint32Array(this.buffer,u,4)[o]))}return 2===r.length?h=t.getTypeInfo(`vec2${n}`):3===r.length?h=t.getTypeInfo(`vec3${n}`):4===r.length?h=t.getTypeInfo(`vec4${n}`):console.error(`GetDataValue: Invalid vector length ${r.length}`),new Me(r,h,null)}return console.error(`GetDataValue: Unknown member ${s}`),null}return console.error(`GetDataValue: Type ${e} is not a struct`),null}}}r=r.postfix}const f=h.getTypeName();return'f32'===f?new Be(new Float32Array(this.buffer,u,1),h,this):'i32'===f?new Be(new Int32Array(this.buffer,u,1),h,this):'u32'===f?new Be(new Uint32Array(this.buffer,u,1),h,this):'vec2f'===f?new Me(new Float32Array(this.buffer,u,2),h,this):'vec3f'===f?new Me(new Float32Array(this.buffer,u,3),h,this):'vec4f'===f?new Me(new Float32Array(this.buffer,u,4),h,this):'vec2i'===f?new Me(new Int32Array(this.buffer,u,2),h,this):'vec3i'===f?new Me(new Int32Array(this.buffer,u,3),h,this):'vec4i'===f?new Me(new Int32Array(this.buffer,u,4),h,this):'vec2u'===f?new Me(new Uint32Array(this.buffer,u,2),h,this):'vec3u'===f?new Me(new Uint32Array(this.buffer,u,3),h,this):'vec4u'===f?new Me(new Uint32Array(this.buffer,u,4),h,this):h instanceof a&&'atomic'===h.name?'u32'===(null===(o=h.format)||void 0===o?void 0:o.name)?new Be(new Uint32Array(this.buffer,u,1)[0],h.format,this):'i32'===(null===(c=h.format)||void 0===c?void 0:c.name)?new Be(new Int32Array(this.buffer,u,1)[0],h.format,this):(console.error(`GetDataValue: Invalid atomic format ${null===(l=h.format)||void 0===l?void 0:l.name}`),null):new Pe(this.buffer,h,u,this)}toString(){let e='';if(this.typeInfo instanceof s)if('f32'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('i32'===this.typeInfo.format.name){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('u32'===this.typeInfo.format.name){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('vec2f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`}else if('vec3f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`}else if('vec4f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`}else e='[...]';else this.typeInfo instanceof n?e+='{...}':e='[...]';return e}}class We extends Ne{constructor(e,t,n,s){super(t,null),this.data=e,this.descriptor=n,this.view=s}clone(){return new We(this.data,this.typeInfo,this.descriptor,this.view)}get width(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>0?null!==(e=n[0])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.width)&&void 0!==t?t:0}get height(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>1?null!==(e=n[1])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.height)&&void 0!==t?t:0}get depthOrArrayLayers(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>2?null!==(e=n[2])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.depthOrArrayLayers)&&void 0!==t?t:0}get format(){var e;return this.descriptor&&null!==(e=this.descriptor.format)&&void 0!==e?e:'rgba8unorm'}get sampleCount(){var e;return this.descriptor&&null!==(e=this.descriptor.sampleCount)&&void 0!==e?e:1}get mipLevelCount(){var e;return this.descriptor&&null!==(e=this.descriptor.mipLevelCount)&&void 0!==e?e:1}get dimension(){var e;return this.descriptor&&null!==(e=this.descriptor.dimension)&&void 0!==e?e:'2d'}getMipLevelSize(e){if(e>=this.mipLevelCount)return[0,0,0];const t=[this.width,this.height,this.depthOrArrayLayers];for(let n=0;n<t.length;++n)t[n]=Math.max(1,t[n]>>e);return t}get texelByteSize(){const e=this.format,t=S[e];return t?t.isDepthStencil?4:t.bytesPerBlock:0}get bytesPerRow(){return this.width*this.texelByteSize}get isDepthStencil(){const e=this.format,t=S[e];return!!t&&t.isDepthStencil}getGpuSize(){const e=this.format,t=S[e],n=this.width;if(!e||n<=0||!t)return-1;const s=this.height,r=this.depthOrArrayLayers,a=this.dimension;return n/t.blockWidth*('1d'===a?1:s/t.blockHeight)*t.bytesPerBlock*r}getPixel(e,t,n=0,s=0){const r=this.texelByteSize,a=this.bytesPerRow,i=this.height,o=this.data[s];return k(new Uint8Array(o),e,t,n,s,i,a,r,this.format)}setPixel(e,t,n,s,r){const a=this.texelByteSize,i=this.bytesPerRow,o=this.height,c=this.data[s];!function(e,t,n,s,r,a,i,o,c,l){const u=s*(i>>=r)*(a>>=r)+n*i+t*o;switch(c){case'r8unorm':return void T(e,u,'8unorm',1,l);case'r8snorm':return void T(e,u,'8snorm',1,l);case'r8uint':return void T(e,u,'8uint',1,l);case'r8sint':return void T(e,u,'8sint',1,l);case'rg8unorm':return void T(e,u,'8unorm',2,l);case'rg8snorm':return void T(e,u,'8snorm',2,l);case'rg8uint':return void T(e,u,'8uint',2,l);case'rg8sint':return void T(e,u,'8sint',2,l);case'rgba8unorm-srgb':case'rgba8unorm':case'bgra8unorm-srgb':case'bgra8unorm':return void T(e,u,'8unorm',4,l);case'rgba8snorm':return void T(e,u,'8snorm',4,l);case'rgba8uint':return void T(e,u,'8uint',4,l);case'rgba8sint':return void T(e,u,'8sint',4,l);case'r16uint':return void T(e,u,'16uint',1,l);case'r16sint':return void T(e,u,'16sint',1,l);case'r16float':return void T(e,u,'16float',1,l);case'rg16uint':return void T(e,u,'16uint',2,l);case'rg16sint':return void T(e,u,'16sint',2,l);case'rg16float':return void T(e,u,'16float',2,l);case'rgba16uint':return void T(e,u,'16uint',4,l);case'rgba16sint':return void T(e,u,'16sint',4,l);case'rgba16float':return void T(e,u,'16float',4,l);case'r32uint':return void T(e,u,'32uint',1,l);case'r32sint':return void T(e,u,'32sint',1,l);case'depth16unorm':case'depth24plus':case'depth24plus-stencil8':case'depth32float':case'depth32float-stencil8':case'r32float':return void T(e,u,'32float',1,l);case'rg32uint':return void T(e,u,'32uint',2,l);case'rg32sint':return void T(e,u,'32sint',2,l);case'rg32float':return void T(e,u,'32float',2,l);case'rgba32uint':return void T(e,u,'32uint',4,l);case'rgba32sint':return void T(e,u,'32sint',4,l);case'rgba32float':return void T(e,u,'32float',4,l);case'rg11b10ufloat':console.error('TODO: rg11b10ufloat not supported for writing')}}(new Uint8Array(c),e,t,n,s,o,i,a,this.format,r)}}(e=>{e[e.token=0]='token',e[e.keyword=1]='keyword',e[e.reserved=2]='reserved'})(z||(z={}));class qe{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class He{}H=He,He.none=new qe('',z.reserved,''),He.eof=new qe('EOF',z.token,''),He.reserved={asm:new qe('asm',z.reserved,'asm'),bf16:new qe('bf16',z.reserved,'bf16'),do:new qe('do',z.reserved,'do'),enum:new qe('enum',z.reserved,'enum'),f16:new qe('f16',z.reserved,'f16'),f64:new qe('f64',z.reserved,'f64'),handle:new qe('handle',z.reserved,'handle'),i8:new qe('i8',z.reserved,'i8'),i16:new qe('i16',z.reserved,'i16'),i64:new qe('i64',z.reserved,'i64'),mat:new qe('mat',z.reserved,'mat'),premerge:new qe('premerge',z.reserved,'premerge'),regardless:new qe('regardless',z.reserved,'regardless'),typedef:new qe('typedef',z.reserved,'typedef'),u8:new qe('u8',z.reserved,'u8'),u16:new qe('u16',z.reserved,'u16'),u64:new qe('u64',z.reserved,'u64'),unless:new qe('unless',z.reserved,'unless'),using:new qe('using',z.reserved,'using'),vec:new qe('vec',z.reserved,'vec'),void:new qe('void',z.reserved,'void')},He.keywords={array:new qe('array',z.keyword,'array'),atomic:new qe('atomic',z.keyword,'atomic'),bool:new qe('bool',z.keyword,'bool'),f32:new qe('f32',z.keyword,'f32'),i32:new qe('i32',z.keyword,'i32'),mat2x2:new qe('mat2x2',z.keyword,'mat2x2'),mat2x3:new qe('mat2x3',z.keyword,'mat2x3'),mat2x4:new qe('mat2x4',z.keyword,'mat2x4'),mat3x2:new qe('mat3x2',z.keyword,'mat3x2'),mat3x3:new qe('mat3x3',z.keyword,'mat3x3'),mat3x4:new qe('mat3x4',z.keyword,'mat3x4'),mat4x2:new qe('mat4x2',z.keyword,'mat4x2'),mat4x3:new qe('mat4x3',z.keyword,'mat4x3'),mat4x4:new qe('mat4x4',z.keyword,'mat4x4'),ptr:new qe('ptr',z.keyword,'ptr'),sampler:new qe('sampler',z.keyword,'sampler'),sampler_comparison:new qe('sampler_comparison',z.keyword,'sampler_comparison'),struct:new qe('struct',z.keyword,'struct'),texture_1d:new qe('texture_1d',z.keyword,'texture_1d'),texture_2d:new qe('texture_2d',z.keyword,'texture_2d'),texture_2d_array:new qe('texture_2d_array',z.keyword,'texture_2d_array'),texture_3d:new qe('texture_3d',z.keyword,'texture_3d'),texture_cube:new qe('texture_cube',z.keyword,'texture_cube'),texture_cube_array:new qe('texture_cube_array',z.keyword,'texture_cube_array'),texture_multisampled_2d:new qe('texture_multisampled_2d',z.keyword,'texture_multisampled_2d'),texture_storage_1d:new qe('texture_storage_1d',z.keyword,'texture_storage_1d'),texture_storage_2d:new qe('texture_storage_2d',z.keyword,'texture_storage_2d'),texture_storage_2d_array:new qe('texture_storage_2d_array',z.keyword,'texture_storage_2d_array'),texture_storage_3d:new qe('texture_storage_3d',z.keyword,'texture_storage_3d'),texture_depth_2d:new qe('texture_depth_2d',z.keyword,'texture_depth_2d'),texture_depth_2d_array:new qe('texture_depth_2d_array',z.keyword,'texture_depth_2d_array'),texture_depth_cube:new qe('texture_depth_cube',z.keyword,'texture_depth_cube'),texture_depth_cube_array:new qe('texture_depth_cube_array',z.keyword,'texture_depth_cube_array'),texture_depth_multisampled_2d:new qe('texture_depth_multisampled_2d',z.keyword,'texture_depth_multisampled_2d'),texture_external:new qe('texture_external',z.keyword,'texture_external'),u32:new qe('u32',z.keyword,'u32'),vec2:new qe('vec2',z.keyword,'vec2'),vec3:new qe('vec3',z.keyword,'vec3'),vec4:new qe('vec4',z.keyword,'vec4'),bitcast:new qe('bitcast',z.keyword,'bitcast'),block:new qe('block',z.keyword,'block'),break:new qe('break',z.keyword,'break'),case:new qe('case',z.keyword,'case'),continue:new qe('continue',z.keyword,'continue'),continuing:new qe('continuing',z.keyword,'continuing'),default:new qe('default',z.keyword,'default'),diagnostic:new qe('diagnostic',z.keyword,'diagnostic'),discard:new qe('discard',z.keyword,'discard'),else:new qe('else',z.keyword,'else'),enable:new qe('enable',z.keyword,'enable'),fallthrough:new qe('fallthrough',z.keyword,'fallthrough'),false:new qe('false',z.keyword,'false'),fn:new qe('fn',z.keyword,'fn'),for:new qe('for',z.keyword,'for'),function:new qe('function',z.keyword,'function'),if:new qe('if',z.keyword,'if'),let:new qe('let',z.keyword,'let'),const:new qe('const',z.keyword,'const'),loop:new qe('loop',z.keyword,'loop'),while:new qe('while',z.keyword,'while'),private:new qe('private',z.keyword,'private'),read:new qe('read',z.keyword,'read'),read_write:new qe('read_write',z.keyword,'read_write'),return:new qe('return',z.keyword,'return'),requires:new qe('requires',z.keyword,'requires'),storage:new qe('storage',z.keyword,'storage'),switch:new qe('switch',z.keyword,'switch'),true:new qe('true',z.keyword,'true'),alias:new qe('alias',z.keyword,'alias'),type:new qe('type',z.keyword,'type'),uniform:new qe('uniform',z.keyword,'uniform'),var:new qe('var',z.keyword,'var'),override:new qe('override',z.keyword,'override'),workgroup:new qe('workgroup',z.keyword,'workgroup'),write:new qe('write',z.keyword,'write'),r8unorm:new qe('r8unorm',z.keyword,'r8unorm'),r8snorm:new qe('r8snorm',z.keyword,'r8snorm'),r8uint:new qe('r8uint',z.keyword,'r8uint'),r8sint:new qe('r8sint',z.keyword,'r8sint'),r16uint:new qe('r16uint',z.keyword,'r16uint'),r16sint:new qe('r16sint',z.keyword,'r16sint'),r16float:new qe('r16float',z.keyword,'r16float'),rg8unorm:new qe('rg8unorm',z.keyword,'rg8unorm'),rg8snorm:new qe('rg8snorm',z.keyword,'rg8snorm'),rg8uint:new qe('rg8uint',z.keyword,'rg8uint'),rg8sint:new qe('rg8sint',z.keyword,'rg8sint'),r32uint:new qe('r32uint',z.keyword,'r32uint'),r32sint:new qe('r32sint',z.keyword,'r32sint'),r32float:new qe('r32float',z.keyword,'r32float'),rg16uint:new qe('rg16uint',z.keyword,'rg16uint'),rg16sint:new qe('rg16sint',z.keyword,'rg16sint'),rg16float:new qe('rg16float',z.keyword,'rg16float'),rgba8unorm:new qe('rgba8unorm',z.keyword,'rgba8unorm'),rgba8unorm_srgb:new qe('rgba8unorm_srgb',z.keyword,'rgba8unorm_srgb'),rgba8snorm:new qe('rgba8snorm',z.keyword,'rgba8snorm'),rgba8uint:new qe('rgba8uint',z.keyword,'rgba8uint'),rgba8sint:new qe('rgba8sint',z.keyword,'rgba8sint'),bgra8unorm:new qe('bgra8unorm',z.keyword,'bgra8unorm'),bgra8unorm_srgb:new qe('bgra8unorm_srgb',z.keyword,'bgra8unorm_srgb'),rgb10a2unorm:new qe('rgb10a2unorm',z.keyword,'rgb10a2unorm'),rg11b10float:new qe('rg11b10float',z.keyword,'rg11b10float'),rg32uint:new qe('rg32uint',z.keyword,'rg32uint'),rg32sint:new qe('rg32sint',z.keyword,'rg32sint'),rg32float:new qe('rg32float',z.keyword,'rg32float'),rgba16uint:new qe('rgba16uint',z.keyword,'rgba16uint'),rgba16sint:new qe('rgba16sint',z.keyword,'rgba16sint'),rgba16float:new qe('rgba16float',z.keyword,'rgba16float'),rgba32uint:new qe('rgba32uint',z.keyword,'rgba32uint'),rgba32sint:new qe('rgba32sint',z.keyword,'rgba32sint'),rgba32float:new qe('rgba32float',z.keyword,'rgba32float'),static_assert:new qe('static_assert',z.keyword,'static_assert')},He.tokens={decimal_float_literal:new qe('decimal_float_literal',z.token,/((-?[0-9]*\\.[0-9]+|-?[0-9]+\\.[0-9]*)((e|E)(\\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new qe('hex_float_literal',z.token,/-?0x((([0-9a-fA-F]*\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\.[0-9a-fA-F]*)((p|P)(\\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\\+|-)?[0-9]+[fh]?))/),int_literal:new qe('int_literal',z.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new qe('uint_literal',z.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new qe('name',z.token,/([_\\p{XID_Start}][\\p{XID_Continue}]+)|([\\p{XID_Start}])/u),ident:new qe('ident',z.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new qe('and',z.token,'&'),and_and:new qe('and_and',z.token,'&&'),arrow:new qe('arrow ',z.token,'->'),attr:new qe('attr',z.token,'@'),forward_slash:new qe('forward_slash',z.token,'/'),bang:new qe('bang',z.token,'!'),bracket_left:new qe('bracket_left',z.token,'['),bracket_right:new qe('bracket_right',z.token,']'),brace_left:new qe('brace_left',z.token,'{'),brace_right:new qe('brace_right',z.token,'}'),colon:new qe('colon',z.token,':'),comma:new qe('comma',z.token,','),equal:new qe('equal',z.token,'='),equal_equal:new qe('equal_equal',z.token,'=='),not_equal:new qe('not_equal',z.token,'!='),greater_than:new qe('greater_than',z.token,'>'),greater_than_equal:new qe('greater_than_equal',z.token,'>='),shift_right:new qe('shift_right',z.token,'>>'),less_than:new qe('less_than',z.token,'<'),less_than_equal:new qe('less_than_equal',z.token,'<='),shift_left:new qe('shift_left',z.token,'<<'),modulo:new qe('modulo',z.token,'%'),minus:new qe('minus',z.token,'-'),minus_minus:new qe('minus_minus',z.token,'--'),period:new qe('period',z.token,'.'),plus:new qe('plus',z.token,'+'),plus_plus:new qe('plus_plus',z.token,'++'),or:new qe('or',z.token,'|'),or_or:new qe('or_or',z.token,'||'),paren_left:new qe('paren_left',z.token,'('),paren_right:new qe('paren_right',z.token,')'),semicolon:new qe('semicolon',z.token,';'),star:new qe('star',z.token,'*'),tilde:new qe('tilde',z.token,'~'),underscore:new qe('underscore',z.token,'_'),xor:new qe('xor',z.token,'^'),plus_equal:new qe('plus_equal',z.token,'+='),minus_equal:new qe('minus_equal',z.token,'-='),times_equal:new qe('times_equal',z.token,'*='),division_equal:new qe('division_equal',z.token,'/='),modulo_equal:new qe('modulo_equal',z.token,'%='),and_equal:new qe('and_equal',z.token,'&='),or_equal:new qe('or_equal',z.token,'|='),xor_equal:new qe('xor_equal',z.token,'^='),shift_right_equal:new qe('shift_right_equal',z.token,'>>='),shift_left_equal:new qe('shift_left_equal',z.token,'<<=')},He.simpleTokens={'@':H.tokens.attr,'{':H.tokens.brace_left,'}':H.tokens.brace_right,':':H.tokens.colon,',':H.tokens.comma,'(':H.tokens.paren_left,')':H.tokens.paren_right,';':H.tokens.semicolon},He.literalTokens={'&':H.tokens.and,'&&':H.tokens.and_and,'->':H.tokens.arrow,'/':H.tokens.forward_slash,'!':H.tokens.bang,'[':H.tokens.bracket_left,']':H.tokens.bracket_right,'=':H.tokens.equal,'==':H.tokens.equal_equal,'!=':H.tokens.not_equal,'>':H.tokens.greater_than,'>=':H.tokens.greater_than_equal,'>>':H.tokens.shift_right,'<':H.tokens.less_than,'<=':H.tokens.less_than_equal,'<<':H.tokens.shift_left,'%':H.tokens.modulo,'-':H.tokens.minus,'--':H.tokens.minus_minus,'.':H.tokens.period,'+':H.tokens.plus,'++':H.tokens.plus_plus,'|':H.tokens.or,'||':H.tokens.or_or,'*':H.tokens.star,'~':H.tokens.tilde,_:H.tokens.underscore,'^':H.tokens.xor,'+=':H.tokens.plus_equal,'-=':H.tokens.minus_equal,'*=':H.tokens.times_equal,'/=':H.tokens.division_equal,'%=':H.tokens.modulo_equal,'&=':H.tokens.and_equal,'|=':H.tokens.or_equal,'^=':H.tokens.xor_equal,'>>=':H.tokens.shift_right_equal,'<<=':H.tokens.shift_left_equal},He.regexTokens={decimal_float_literal:H.tokens.decimal_float_literal,hex_float_literal:H.tokens.hex_float_literal,int_literal:H.tokens.int_literal,uint_literal:H.tokens.uint_literal,ident:H.tokens.ident},He.storage_class=[H.keywords.function,H.keywords.private,H.keywords.workgroup,H.keywords.uniform,H.keywords.storage],He.access_mode=[H.keywords.read,H.keywords.write,H.keywords.read_write],He.sampler_type=[H.keywords.sampler,H.keywords.sampler_comparison],He.sampled_texture_type=[H.keywords.texture_1d,H.keywords.texture_2d,H.keywords.texture_2d_array,H.keywords.texture_3d,H.keywords.texture_cube,H.keywords.texture_cube_array],He.multisampled_texture_type=[H.keywords.texture_multisampled_2d],He.storage_texture_type=[H.keywords.texture_storage_1d,H.keywords.texture_storage_2d,H.keywords.texture_storage_2d_array,H.keywords.texture_storage_3d],He.depth_texture_type=[H.keywords.texture_depth_2d,H.keywords.texture_depth_2d_array,H.keywords.texture_depth_cube,H.keywords.texture_depth_cube_array,H.keywords.texture_depth_multisampled_2d],He.texture_external_type=[H.keywords.texture_external],He.any_texture_type=[...H.sampled_texture_type,...H.multisampled_texture_type,...H.storage_texture_type,...H.depth_texture_type,...H.texture_external_type],He.texel_format=[H.keywords.r8unorm,H.keywords.r8snorm,H.keywords.r8uint,H.keywords.r8sint,H.keywords.r16uint,H.keywords.r16sint,H.keywords.r16float,H.keywords.rg8unorm,H.keywords.rg8snorm,H.keywords.rg8uint,H.keywords.rg8sint,H.keywords.r32uint,H.keywords.r32sint,H.keywords.r32float,H.keywords.rg16uint,H.keywords.rg16sint,H.keywords.rg16float,H.keywords.rgba8unorm,H.keywords.rgba8unorm_srgb,H.keywords.rgba8snorm,H.keywords.rgba8uint,H.keywords.rgba8sint,H.keywords.bgra8unorm,H.keywords.bgra8unorm_srgb,H.keywords.rgb10a2unorm,H.keywords.rg11b10float,H.keywords.rg32uint,H.keywords.rg32sint,H.keywords.rg32float,H.keywords.rgba16uint,H.keywords.rgba16sint,H.keywords.rgba16float,H.keywords.rgba32uint,H.keywords.rgba32sint,H.keywords.rgba32float],He.const_literal=[H.tokens.int_literal,H.tokens.uint_literal,H.tokens.decimal_float_literal,H.tokens.hex_float_literal,H.keywords.true,H.keywords.false],He.literal_or_ident=[H.tokens.ident,H.tokens.int_literal,H.tokens.uint_literal,H.tokens.decimal_float_literal,H.tokens.hex_float_literal,H.tokens.name],He.element_count_expression=[H.tokens.int_literal,H.tokens.uint_literal,H.tokens.ident],He.template_types=[H.keywords.vec2,H.keywords.vec3,H.keywords.vec4,H.keywords.mat2x2,H.keywords.mat2x3,H.keywords.mat2x4,H.keywords.mat3x2,H.keywords.mat3x3,H.keywords.mat3x4,H.keywords.mat4x2,H.keywords.mat4x3,H.keywords.mat4x4,H.keywords.atomic,H.keywords.bitcast,...H.any_texture_type],He.attribute_name=[H.tokens.ident,H.keywords.block,H.keywords.diagnostic],He.assignment_operators=[H.tokens.equal,H.tokens.plus_equal,H.tokens.minus_equal,H.tokens.times_equal,H.tokens.division_equal,H.tokens.modulo_equal,H.tokens.and_equal,H.tokens.or_equal,H.tokens.xor_equal,H.tokens.shift_right_equal,H.tokens.shift_left_equal],He.increment_operators=[H.tokens.plus_plus,H.tokens.minus_minus];class ze{constructor(e,t,n,s,r){this.type=e,this.lexeme=t,this.line=n,this.start=s,this.end=r}toString(){return this.lexeme}isTemplateType(){return-1!=He.template_types.indexOf(this.type)}isArrayType(){return this.type==He.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class Re{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:''}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new ze(He.eof,'',this._line,this._current,this._current)),this._tokens}scanToken(){let e=this._advance();if('\\n'==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if('/'==e){if('/'==this._peekAhead()){for(;'\\n'!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if('*'==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),'\\n'==e)this._line++;else if('*'==e){if('/'==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else'/'==e&&'*'==this._peekAhead()&&(this._advance(),t++)}return!0}}const t=He.simpleTokens[e];if(t)return this._addToken(t),!0;let n=He.none;const s=this._isAlpha(e),r='_'===e;if(this._isAlphaNumeric(e)){let t=this._peekAhead();for(;this._isAlphaNumeric(t);)e+=this._advance(),t=this._peekAhead()}if(s){const t=He.keywords[e];if(t)return this._addToken(t),!0}if(s||r)return this._addToken(He.tokens.ident),!0;for(;;){let t=this._findType(e);const s=this._peekAhead();if('-'==e&&this._tokens.length>0){if('='==s)return this._current++,e+=s,this._addToken(He.tokens.minus_equal),!0;if('-'==s)return this._current++,e+=s,this._addToken(He.tokens.minus_minus),!0;const n=this._tokens.length-1;if((-1!=He.literal_or_ident.indexOf(this._tokens[n].type)||this._tokens[n].type==He.tokens.paren_right)&&'>'!=s)return this._addToken(t),!0}if('>'==e&&('>'==s||'='==s)){let e=!1,n=this._tokens.length-1;for(let t=0;t<5&&n>=0&&-1===He.assignment_operators.indexOf(this._tokens[n].type);++t,--n)if(this._tokens[n].type===He.tokens.less_than){n>0&&this._tokens[n-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(t),!0}if(t===He.none){let s=e,r=0;const a=2;for(let e=0;e<a;++e)if(s+=this._peekAhead(e),t=this._findType(s),t!==He.none){r=e;break}if(t===He.none)return n!==He.none&&(this._current--,this._addToken(n),!0);e=s,this._current+=r+1}if(n=t,this._isAtEnd())break;e+=this._advance()}return n!==He.none&&(this._addToken(n),!0)}_findType(e){for(const t in He.regexTokens){const n=He.regexTokens[t];if(this._match(e,n.rule))return n}const t=He.literalTokens[e];return t||He.none}_match(e,t){const n=t.exec(e);return n&&0==n.index&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return!this._isNumeric(e)&&!this._isWhitespace(e)&&'_'!==e&&'.'!==e&&'('!==e&&')'!==e&&'['!==e&&']'!==e&&'{'!==e&&'}'!==e&&','!==e&&';'!==e&&':'!==e&&'='!==e&&'!'!==e&&'<'!==e&&'>'!==e&&'+'!==e&&'-'!==e&&'*'!==e&&'/'!==e&&'%'!==e&&'&'!==e&&'|'!==e&&'^'!==e&&'~'!==e&&'@'!==e&&'#'!==e&&'?'!==e&&'\\''!==e&&'`'!==e&&'\"'!==e&&'\\\\'!==e&&'\\n'!==e&&'\\r'!==e&&'\\t'!==e&&'\\0'!==e}_isNumeric(e){return e>='0'&&e<='9'}_isAlphaNumeric(e){return this._isAlpha(e)||this._isNumeric(e)||'_'===e}_isWhitespace(e){return' '==e||'\\t'==e||'\\r'==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?'\\0':this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new ze(e,t,this._line,this._start,this._current))}}function Ge(e){return Array.isArray(e)||(null==e?void 0:e.buffer)instanceof ArrayBuffer}const Xe=new Float32Array(1),je=new Uint32Array(Xe.buffer),Ze=new Uint32Array(Xe.buffer),Qe=new Int32Array(1),Ye=new Float32Array(Qe.buffer),Ke=new Uint32Array(Qe.buffer),Je=new Uint32Array(1),et=new Float32Array(Je.buffer),tt=new Int32Array(Je.buffer);function nt(e,t,n){if(t===n)return e;if('f32'===t){if('i32'===n||'x32'===n)return Xe[0]=e,je[0];if('u32'===n)return Xe[0]=e,Ze[0]}else if('i32'===t||'x32'===t){if('f32'===n)return Qe[0]=e,Ye[0];if('u32'===n)return Qe[0]=e,Ke[0]}else if('u32'===t){if('f32'===n)return Je[0]=e,et[0];if('i32'===n||'x32'===n)return Je[0]=e,tt[0]}return console.error(`Unsupported cast from ${t} to ${n}`),e}class st{constructor(e){this.resources=null,this.inUse=!1,this.info=null,this.node=e}}class rt{constructor(e,t){this.align=e,this.size=t}}class at{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new d,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(e){return'texture_storage_1d'==e.name||'texture_storage_2d'==e.name||'texture_storage_2d_array'==e.name||'texture_storage_3d'==e.name}updateAST(e){for(const t of e)t instanceof D&&this._functions.set(t.name,new st(t));for(const t of e)if(t instanceof oe){const e=this.getTypeInfo(t,null);e instanceof n&&this.structs.push(e)}for(const t of e)if(t instanceof te)this.aliases.push(this._getAliasInfo(t));else{if(t instanceof M){const e=t,n=this._getAttributeNum(e.attributes,'id',0),s=null!=e.type?this.getTypeInfo(e.type,e.attributes):null;this.overrides.push(new h(e.name,s,e.attributes,n));continue}if(this._isUniformVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=new o(e.name,r,n,s,e.attributes,i.Uniform,e.access);a.access||(a.access='read'),this.uniforms.push(a);continue}if(this._isStorageVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=this._isStorageTexture(r),c=new o(e.name,r,n,s,e.attributes,a?i.StorageTexture:i.Storage,e.access);c.access||(c.access='read'),this.storage.push(c);continue}if(this._isTextureVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=this._isStorageTexture(r),c=new o(e.name,r,n,s,e.attributes,a?i.StorageTexture:i.Texture,e.access);c.access||(c.access='read'),a?this.storage.push(c):this.textures.push(c);continue}if(this._isSamplerVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=new o(e.name,r,n,s,e.attributes,i.Sampler,e.access);this.samplers.push(a);continue}}for(const t of e)if(t instanceof D){const e=this._getAttribute(t,'vertex'),n=this._getAttribute(t,'fragment'),s=this._getAttribute(t,'compute'),r=e||n||s,a=new p(t.name,null==r?void 0:r.name,t.attributes);a.attributes=t.attributes,a.startLine=t.startLine,a.endLine=t.endLine,this.functions.push(a),this._functions.get(t.name).info=a,r&&(this._functions.get(t.name).inUse=!0,a.inUse=!0,a.resources=this._findResources(t,!!r),a.inputs=this._getInputs(t.args),a.outputs=this._getOutputs(t.returnType),this.entry[r.name].push(a)),a.arguments=t.args.map(e=>new f(e.name,this.getTypeInfo(e.type,e.attributes),e.attributes)),a.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null;continue}for(const e of this._functions.values())e.info&&(e.info.inUse=e.inUse,this._addCalls(e.node,e.info.calls));for(const e of this._functions.values())e.node.search(t=>{var n,s,r;if(t instanceof De){if(t.value)if(Ge(t.value))for(const s of t.value)for(const t of this.overrides)s===t.name&&(null===(n=e.info)||void 0===n||n.overrides.push(t));else for(const n of this.overrides)t.value===n.name&&(null===(s=e.info)||void 0===s||s.overrides.push(n))}else if(t instanceof ge)for(const n of this.overrides)t.name===n.name&&(null===(r=e.info)||void 0===r||r.overrides.push(n))});for(const e of this.uniforms)this._markStructsInUse(e.type);for(const e of this.storage)this._markStructsInUse(e.type)}getFunctionInfo(e){for(const t of this.functions)if(t.name==e)return t;return null}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=!0,e.members)for(const t of e.members)this._markStructsInUse(t.type)}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else{const t=this._getAlias(e.name);t&&this._markStructsInUse(t)}}_addCalls(e,t){var n;for(const s of e.calls){const e=null===(n=this._functions.get(s.name))||void 0===n?void 0:n.info;e&&t.add(e)}}findResource(e,t,n){if(n){for(const s of this.entry.compute)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n;for(const s of this.entry.vertex)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n;for(const s of this.entry.fragment)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n}for(const n of this.uniforms)if(n.group==e&&n.binding==t)return n;for(const n of this.storage)if(n.group==e&&n.binding==t)return n;for(const n of this.textures)if(n.group==e&&n.binding==t)return n;for(const n of this.samplers)if(n.group==e&&n.binding==t)return n;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t)}_findResources(e,t){const n=[],s=this,r=[];return e.search(a=>{if(a instanceof E)r.push({});else if(a instanceof $)r.pop();else if(a instanceof F){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof de){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type)}else if(a instanceof U){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof ge){const e=a;if(r.length>0){if(r[r.length-1][e.name])return}const t=s._findResource(e.name);t&&n.push(t)}else if(a instanceof me){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}else if(a instanceof X){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}}),[...new Map(n.map(e=>[e.name,e])).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.storage){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.textures){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.samplers){t(n.group,n.binding);e[n.group][n.binding]=n}return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof oe)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof oe)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,'location')||this._getAttribute(n,'builtin');if(null!==e){const s=this.getTypeInfo(n.type,n.type.attributes),r=this._parseInt(e.value),a=new u(n.name,s,e.name,r);t.push(a)}}}_getOutputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this.getTypeInfo(e,e.attributes),s=this._parseInt(t.value);return new u('',n,t.name,s)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof oe)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof oe)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this._getAttribute(e,'interpolation'),s=this.getTypeInfo(e.type,e.attributes),r=this._parseInt(t.value),a=new l(e.name,s,t.name,r);return null!==n&&(a.interpolation=this._parseString(n.value)),a}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new c(e.name,this.getTypeInfo(e.type,null))}getTypeInfoByName(e){for(const t of this.structs)if(t.name==e)return t;for(const t of this.aliases)if(t.name==e)return t.type;return null}getTypeInfo(i,o=null){if(this._types.has(i))return this._types.get(i);if(i instanceof le){const e=i.type?this.getTypeInfo(i.type,i.attributes):null,t=new r(i.name,e,o);return this._types.set(i,t),this._updateTypeInfo(t),t}if(i instanceof ue){const e=i,t=e.format?this.getTypeInfo(e.format,e.attributes):null,n=new s(e.name,o);return n.format=t,n.count=e.count,this._types.set(i,n),this._updateTypeInfo(n),n}if(i instanceof oe){const e=i,s=new n(e.name,o);s.startLine=e.startLine,s.endLine=e.endLine;for(const n of e.members){const e=this.getTypeInfo(n.type,n.attributes);s.members.push(new t(n.name,e,n.attributes))}return this._types.set(i,s),this._updateTypeInfo(s),s}if(i instanceof he){const t=i,n=t.format instanceof ae,s=t.format?n?this.getTypeInfo(t.format,null):new e(t.format,null):null,r=new a(t.name,s,o,t.access);return this._types.set(i,r),this._updateTypeInfo(r),r}if(i instanceof ce){const e=i,t=e.format?this.getTypeInfo(e.format,null):null,n=new a(e.name,t,o,e.access);return this._types.set(i,n),this._updateTypeInfo(n),n}const c=new e(i.name,o);return this._types.set(i,c),this._updateTypeInfo(c),c}_updateTypeInfo(e){var t,a,i;const o=this._getTypeSize(e);if(e.size=null!==(t=null==o?void 0:o.size)&&void 0!==t?t:0,e instanceof s&&e.format){const t=this._getTypeSize(e.format);e.stride=Math.max(null!==(a=null==t?void 0:t.size)&&void 0!==a?a:0,null!==(i=null==t?void 0:t.align)&&void 0!==i?i:0),this._updateTypeInfo(e.format)}e instanceof r&&this._updateTypeInfo(e.format),e instanceof n&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,s=0,r=0,a=0;for(let i=0,o=e.members.length;i<o;++i){const o=e.members[i],c=this._getTypeSize(o);if(!c)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const l=c.align,u=c.size;n=this._roundUp(l,n+s),s=u,r=n,a=Math.max(a,l),o.offset=n,o.size=u,this._updateTypeInfo(o.type)}e.size=this._roundUp(a,r+s),e.align=a}_getTypeSize(r){var a,i;if(null==r)return null;const o=this._getAttributeNum(r.attributes,'size',0),c=this._getAttributeNum(r.attributes,'align',0);if(r instanceof t&&(r=r.type),r instanceof e){const e=this._getAlias(r.name);null!==e&&(r=e)}{const e=at._typeInfo[r.name];if(void 0!==e){const t='f16'===(null===(a=r.format)||void 0===a?void 0:a.name)?2:1;return new rt(Math.max(c,e.align/t),Math.max(o,e.size/t))}}{const e=at._typeInfo[r.name.substring(0,r.name.length-1)];if(e){const t='h'===r.name[r.name.length-1]?2:1;return new rt(Math.max(c,e.align/t),Math.max(o,e.size/t))}}if(r instanceof s){let e=r,t=8,n=8;const s=this._getTypeSize(e.format);null!==s&&(n=s.size,t=s.align);return n=e.count*this._getAttributeNum(null!==(i=null==r?void 0:r.attributes)&&void 0!==i?i:null,'stride',this._roundUp(t,n)),o&&(n=o),new rt(Math.max(c,t),Math.max(o,n))}if(r instanceof n){let e=0,t=0,n=0,s=0,a=0;for(const t of r.members){const r=this._getTypeSize(t.type);null!==r&&(e=Math.max(r.align,e),n=this._roundUp(r.align,n+s),s=r.size,a=n)}return t=this._roundUp(e,a+s),new rt(Math.max(c,e),Math.max(o,t))}return null}_isUniformVar(e){return e instanceof F&&'uniform'==e.storage}_isStorageVar(e){return e instanceof F&&'storage'==e.storage}_isTextureVar(e){return e instanceof F&&null!==e.type&&-1!=at._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof F&&null!==e.type&&-1!=at._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const s=n.attributes;for(let e of s)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let s of e)if(s.name==t){let e=null!==s&&null!==s.value?s.value:n;return e instanceof Array&&(e=e[0]),'number'==typeof e?e:'string'==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}at._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},at._textureTypes=He.any_texture_type.map(e=>e.name),at._samplerTypes=He.sampler_type.map(e=>e.name);let it=0;class ot{constructor(e,t,n){this.id=it++,this.name=e,this.value=t,this.node=n}clone(){return new ot(this.name,this.value,this.node)}}class ct{constructor(e){this.id=it++,this.name=e.name,this.node=e}clone(){return new ct(this.node)}}class lt{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName='',this.id=it++,e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName)}getVariable(e){var t;return this.variables.has(e)?null!==(t=this.variables.get(e))&&void 0!==t?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?null!==(t=this.functions.get(e))&&void 0!==t?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new ot(e,t,null!=n?n:null))}setVariable(e,t,n){const s=this.getVariable(e);null!==s?s.value=t:this.createVariable(e,t,n)}getVariableValue(e){var t;const n=this.getVariable(e);return null!==(t=null==n?void 0:n.value)&&void 0!==t?t:null}clone(){return new lt(this)}}class ut{evalExpression(e,t){return null}getTypeInfo(e){return null}getVariableName(e,t){return''}}class ht{constructor(e){this.exec=e}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let s=!0;if(n instanceof Me)return n.data.forEach(e=>{e||(s=!1)}),new Be(s?1:0,this.getTypeInfo('bool'));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me){const e=n.data.some(e=>e);return new Be(e?1:0,this.getTypeInfo('bool'))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof Be))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.evalExpression(n,t);if(s instanceof Pe&&0===s.typeInfo.size){const e=s.typeInfo,t=s.buffer.byteLength/e.stride;return new Be(t,this.getTypeInfo('u32'))}return new Be(s.typeInfo.size,this.getTypeInfo('u32'))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.abs(e)),n.typeInfo);const s=n;return new Be(Math.abs(s.value),s.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.acos(e)),n.typeInfo);const s=n;return new Be(Math.acos(s.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.acosh(e)),n.typeInfo);const s=n;return new Be(Math.acosh(s.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.asin(e)),n.typeInfo);const s=n;return new Be(Math.asin(s.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.asinh(e)),n.typeInfo);const s=n;return new Be(Math.asinh(s.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.atan(e)),n.typeInfo);const s=n;return new Be(Math.atan(s.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.atanh(e)),n.typeInfo);const s=n;return new Be(Math.atanh(s.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me)return new Me(n.data.map((e,t)=>Math.atan2(e,s.data[t])),n.typeInfo);const r=n,a=s;return new Be(Math.atan2(r.value,a.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.ceil(e)),n.typeInfo);const s=n;return new Be(Math.ceil(s.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Me&&s instanceof Me&&r instanceof Me)return new Me(n.data.map((e,t)=>this._clamp(e,s.data[t],r.data[t])),n.typeInfo);const a=n,i=s,o=r;return new Be(this._clamp(a.value,i.value,o.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.cos(e)),n.typeInfo);const s=n;return new Be(Math.cos(s.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.cosh(e)),n.typeInfo);const s=n;return new Be(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.clz32(e)),n.typeInfo);const s=n;return new Be(Math.clz32(s.value),n.typeInfo)}_countOneBits(e){let t=0;for(;0!==e;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>this._countOneBits(e)),n.typeInfo);const s=n;return new Be(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(e){if(0===e)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>this._countTrailingZeros(e)),n.typeInfo);const s=n;return new Be(this._countTrailingZeros(s.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me){if(3!==n.data.length||3!==s.data.length)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const t=n.data,r=s.data;return new Me([t[1]*r[2]-r[1]*t[2],t[2]*r[0]-r[2]*t[0],t[0]*r[1]-r[0]*t[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),s=180/Math.PI;if(n instanceof Me)return new Me(n.data.map(e=>e*s),n.typeInfo);return new Be(n.value*s,this.getTypeInfo('f32'))}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ue){const e=n.data,t=n.typeInfo.getTypeName(),s=t.endsWith('h')?this.getTypeInfo('f16'):this.getTypeInfo('f32');if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t)return new Be(e[0]*e[3]-e[1]*e[2],s);if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t)return new Be(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t)console.error(`TODO: Determinant for ${t}`);else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t)console.error(`TODO: Determinant for ${t}`);else{if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t)return new Be(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);'mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t||'mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t||'mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t?console.error(`TODO: Determinant for ${t}`):'mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t||console.error(`TODO: Determinant for ${t}`)}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me){let e=0;for(let t=0;t<n.data.length;++t)e+=(n.data[t]-s.data[t])*(n.data[t]-s.data[t]);return new Be(Math.sqrt(e),this.getTypeInfo('f32'))}const r=n,a=s;return new Be(Math.abs(r.value-a.value),n.typeInfo)}_dot(e,t){let n=0;for(let s=0;s<e.length;++s)n+=t[s]*e[s];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);return n instanceof Me&&s instanceof Me?new Be(this._dot(n.data,s.data),this.getTypeInfo('f32')):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.exp(e)),n.typeInfo);const s=n;return new Be(Math.exp(s.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.pow(2,e)),n.typeInfo);const s=n;return new Be(Math.pow(2,s.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if('u32'!==s.typeInfo.name&&'x32'!==s.typeInfo.name)return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const a=s.value,i=r.value;if(n instanceof Me)return new Me(n.data.map(e=>e>>a&(1<<i)-1),n.typeInfo);if('i32'!==n.typeInfo.name&&'x32'!==n.typeInfo.name)return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const o=n.value;return new Be(o>>a&(1<<i)-1,this.getTypeInfo('i32'))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Me&&s instanceof Me&&r instanceof Me){const e=this._dot(s.data,r.data);return new Me(e<0?Array.from(n.data):n.data.map(e=>-e),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return 0===e?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>this._firstLeadingBit(e)),n.typeInfo);const s=n;return new Be(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(e){return 0===e?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>this._firstTrailingBit(e)),n.typeInfo);const s=n;return new Be(this._firstTrailingBit(s.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.floor(e)),n.typeInfo);const s=n;return new Be(Math.floor(s.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Me&&s instanceof Me&&r instanceof Me)return n.data.length!==s.data.length||n.data.length!==r.data.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new Me(n.data.map((e,t)=>e*s.data[t]+r.data[t]),n.typeInfo);const a=n,i=s,o=r;return new Be(a.value*i.value+o.value,a.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>e-Math.floor(e)),n.typeInfo);const s=n;return new Be(s.value-Math.floor(s.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t),a=this.exec.evalExpression(e.args[3],t);if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const i=r.value,o=(1<<a.value)-1<<i,c=~o;if(n instanceof Me&&s instanceof Me)return new Me(n.data.map((e,t)=>e&c|s.data[t]<<i&o),n.typeInfo);const l=n.value,u=s.value;return new Be(l&c|u<<i&o,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>1/Math.sqrt(e)),n.typeInfo);const s=n;return new Be(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me){let e=0;return n.data.forEach(t=>{e+=t*t}),new Be(Math.sqrt(e),this.getTypeInfo('f32'))}const s=n;return new Be(Math.abs(s.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.log(e)),n.typeInfo);const s=n;return new Be(Math.log(s.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.log2(e)),n.typeInfo);const s=n;return new Be(Math.log2(s.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me)return new Me(n.data.map((e,t)=>Math.max(e,s.data[t])),n.typeInfo);const r=n,a=s;return new Be(Math.max(r.value,a.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me)return new Me(n.data.map((e,t)=>Math.min(e,s.data[t])),n.typeInfo);const r=n,a=s;return new Be(Math.min(r.value,a.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Me&&s instanceof Me&&r instanceof Me)return new Me(n.data.map((e,t)=>n.data[t]*(1-r.data[t])+s.data[t]*r.data[t]),n.typeInfo);const a=s,i=r;return new Be(n.value*(1-i.value)+a.value*i.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me)return new Me(n.data.map((e,t)=>e%s.data[t]),n.typeInfo);const r=s;return new Be(n.value%r.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me){const s=this.Length(e,t).value;return new Me(n.data.map(e=>e/s),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me)return new Me(n.data.map((e,t)=>Math.pow(e,s.data[t])),n.typeInfo);const r=n,a=s;return new Be(Math.pow(r.value,a.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>e),n.typeInfo);return new Be(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>e*Math.PI/180),n.typeInfo);return new Be(n.value*Math.PI/180,this.getTypeInfo('f32'))}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Me&&s instanceof Me){const e=this._dot(n.data,s.data);return new Me(n.data.map((t,n)=>t-2*e*s.data[n]),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Me&&s instanceof Me&&r instanceof Be){const e=this._dot(s.data,n.data);return new Me(n.data.map((t,n)=>{const a=1-r.value*r.value*(1-e*e);if(a<0)return 0;const i=Math.sqrt(a);return r.value*t-(r.value*e+i)*s.data[n]}),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.round(e)),n.typeInfo);const s=n;return new Be(Math.round(s.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.min(Math.max(e,0),1)),n.typeInfo);const s=n;return new Be(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.sign(e)),n.typeInfo);const s=n;return new Be(Math.sign(s.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.sin(e)),n.typeInfo);const s=n;return new Be(Math.sin(s.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.sinh(e)),n.typeInfo);const s=n;return new Be(Math.sinh(s.value),n.typeInfo)}_smoothstep(e,t,n){const s=Math.min(Math.max((n-e)/(t-e),0),1);return s*s*(3-2*s)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(r instanceof Me&&n instanceof Me&&s instanceof Me)return new Me(r.data.map((e,t)=>this._smoothstep(n.data[t],s.data[t],e)),r.typeInfo);const a=n,i=s,o=r;return new Be(this._smoothstep(a.value,i.value,o.value),r.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.sqrt(e)),n.typeInfo);const s=n;return new Be(Math.sqrt(s.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(s instanceof Me&&n instanceof Me)return new Me(s.data.map((e,t)=>e<n.data[t]?0:1),s.typeInfo);const r=n;return new Be(s.value<r.value?0:1,r.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.tan(e)),n.typeInfo);const s=n;return new Be(Math.tan(s.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.tanh(e)),n.typeInfo);const s=n;return new Be(Math.tanh(s.value),n.typeInfo)}_getTransposeType(e){const t=e.getTypeName();return'mat2x2f'===t||'mat2x2h'===t?e:'mat2x3f'===t?this.getTypeInfo('mat3x2f'):'mat2x3h'===t?this.getTypeInfo('mat3x2h'):'mat2x4f'===t?this.getTypeInfo('mat4x2f'):'mat2x4h'===t?this.getTypeInfo('mat4x2h'):'mat3x2f'===t?this.getTypeInfo('mat2x3f'):'mat3x2h'===t?this.getTypeInfo('mat2x3h'):'mat3x3f'===t||'mat3x3h'===t?e:'mat3x4f'===t?this.getTypeInfo('mat4x3f'):'mat3x4h'===t?this.getTypeInfo('mat4x3h'):'mat4x2f'===t?this.getTypeInfo('mat2x4f'):'mat4x2h'===t?this.getTypeInfo('mat2x4h'):'mat4x3f'===t?this.getTypeInfo('mat3x4f'):'mat4x3h'===t?this.getTypeInfo('mat3x4h'):('mat4x4f'===t||'mat4x4h'===t||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof Ue))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const s=this._getTransposeType(n.typeInfo);if('mat2x2'===n.typeInfo.name||'mat2x2f'===n.typeInfo.name||'mat2x2h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[2],e[1],e[3]],s)}if('mat2x3'===n.typeInfo.name||'mat2x3f'===n.typeInfo.name||'mat2x3h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[3],e[6],e[1],e[4],e[7]],s)}if('mat2x4'===n.typeInfo.name||'mat2x4f'===n.typeInfo.name||'mat2x4h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13]],s)}if('mat3x2'===n.typeInfo.name||'mat3x2f'===n.typeInfo.name||'mat3x2h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[3],e[1],e[4],e[2],e[5]],s)}if('mat3x3'===n.typeInfo.name||'mat3x3f'===n.typeInfo.name||'mat3x3h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]],s)}if('mat3x4'===n.typeInfo.name||'mat3x4f'===n.typeInfo.name||'mat3x4h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14]],s)}if('mat4x2'===n.typeInfo.name||'mat4x2f'===n.typeInfo.name||'mat4x2h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[4],e[1],e[5],e[2],e[6]],s)}if('mat4x3'===n.typeInfo.name||'mat4x3f'===n.typeInfo.name||'mat4x3h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]],s)}if('mat4x4'===n.typeInfo.name||'mat4x4f'===n.typeInfo.name||'mat4x4h'===n.typeInfo.name){const e=n.data;return new Ue([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me)return new Me(n.data.map(e=>Math.trunc(e)),n.typeInfo);const s=n;return new Be(Math.trunc(s.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error('TODO: dpdxFine'),null}Dpdy(e,t){return console.error('TODO: dpdy'),null}DpdyCoarse(e,t){return console.error('TODO: dpdyCoarse'),null}DpdyFine(e,t){return console.error('TODO: dpdyFine'),null}Fwidth(e,t){return console.error('TODO: fwidth'),null}FwidthCoarse(e,t){return console.error('TODO: fwidthCoarse'),null}FwidthFine(e,t){return console.error('TODO: fwidthFine'),null}TextureDimensions(e,t){const n=e.args[0],s=e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0;if(n instanceof ge){const r=n.name,a=t.getVariableValue(r);if(a instanceof We){if(s<0||s>=a.mipLevelCount)return console.error(`Invalid mip level for textureDimensions. Line ${e.line}`),null;const t=a.getMipLevelSize(s),n=a.dimension;return'1d'===n?new Be(t[0],this.getTypeInfo('u32')):'3d'===n?new Me(t,this.getTypeInfo('vec3u')):'2d'===n?new Me(t.slice(0,2),this.getTypeInfo('vec2u')):(console.error(`Invalid texture dimension ${n} not found. Line ${e.line}`),null)}return console.error(`Texture ${r} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error('TODO: textureGather'),null}TextureGatherCompare(e,t){return console.error('TODO: textureGatherCompare'),null}TextureLoad(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0;if(!(s instanceof Me)||2!==s.data.length)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof ge){const a=n.name,i=t.getVariableValue(a);if(i instanceof We){const t=Math.floor(s.data[0]),n=Math.floor(s.data[1]);if(t<0||t>=i.width||n<0||n>=i.height)return console.error(`Texture ${a} out of bounds. Line ${e.line}`),null;const o=i.getPixel(t,n,0,r);return null===o?(console.error(`Invalid texture format for textureLoad. Line ${e.line}`),null):new Me(o,this.getTypeInfo('vec4f'))}return console.error(`Texture ${a} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){const n=e.args[0];if(n instanceof ge){const s=n.name,r=t.getVariableValue(s);return r instanceof We?new Be(r.depthOrArrayLayers,this.getTypeInfo('u32')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLayers. Line ${e.line}`),null}TextureNumLevels(e,t){const n=e.args[0];if(n instanceof ge){const s=n.name,r=t.getVariableValue(s);return r instanceof We?new Be(r.mipLevelCount,this.getTypeInfo('u32')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLevels. Line ${e.line}`),null}TextureNumSamples(e,t){const n=e.args[0];if(n instanceof ge){const s=n.name,r=t.getVariableValue(s);return r instanceof We?new Be(r.sampleCount,this.getTypeInfo('u32')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumSamples. Line ${e.line}`),null}TextureSample(e,t){return console.error('TODO: textureSample'),null}TextureSampleBias(e,t){return console.error('TODO: textureSampleBias'),null}TextureSampleCompare(e,t){return console.error('TODO: textureSampleCompare'),null}TextureSampleCompareLevel(e,t){return console.error('TODO: textureSampleCompareLevel'),null}TextureSampleGrad(e,t){return console.error('TODO: textureSampleGrad'),null}TextureSampleLevel(e,t){return console.error('TODO: textureSampleLevel'),null}TextureSampleBaseClampToEdge(e,t){return console.error('TODO: textureSampleBaseClampToEdge'),null}TextureStore(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=4===e.args.length?this.exec.evalExpression(e.args[2],t).value:0,a=4===e.args.length?this.exec.evalExpression(e.args[3],t).data:this.exec.evalExpression(e.args[2],t).data;if(4!==a.length)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(s instanceof Me)||2!==s.data.length)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof ge){const i=n.name,o=t.getVariableValue(i);if(o instanceof We){const t=o.getMipLevelSize(0),n=Math.floor(s.data[0]),c=Math.floor(s.data[1]);return n<0||n>=t[0]||c<0||c>=t[1]?(console.error(`Texture ${i} out of bounds. Line ${e.line}`),null):(o.setPixel(n,c,0,r,Array.from(a)),null)}return console.error(`Texture ${i} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t);return t.getVariable(s).value.getSubData(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t);return o instanceof Be&&i instanceof Be&&(o.value=i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value+=i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicSub(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value-=i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicMax(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value=Math.max(o.value,i.value)),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicMin(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value=Math.min(o.value,i.value)),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicAnd(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value=o.value&i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicOr(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value=o.value|i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicXor(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value=o.value^i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicExchange(e,t){let n=e.args[0];n instanceof ke&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),c=new Be(o.value,o.typeInfo);return o instanceof Be&&i instanceof Be&&(o.value=i.value),r.value instanceof Pe&&r.value.setDataValue(this.exec,o,n.postfix,t),c}AtomicCompareExchangeWeak(e,t){return console.error('TODO: atomicCompareExchangeWeak'),null}Pack4x8snorm(e,t){return console.error('TODO: pack4x8snorm'),null}Pack4x8unorm(e,t){return console.error('TODO: pack4x8unorm'),null}Pack4xI8(e,t){return console.error('TODO: pack4xI8'),null}Pack4xU8(e,t){return console.error('TODO: pack4xU8'),null}Pack4x8Clamp(e,t){return console.error('TODO: pack4x8Clamp'),null}Pack4xU8Clamp(e,t){return console.error('TODO: pack4xU8Clamp'),null}Pack2x16snorm(e,t){return console.error('TODO: pack2x16snorm'),null}Pack2x16unorm(e,t){return console.error('TODO: pack2x16unorm'),null}Pack2x16float(e,t){return console.error('TODO: pack2x16float'),null}Unpack4x8snorm(e,t){return console.error('TODO: unpack4x8snorm'),null}Unpack4x8unorm(e,t){return console.error('TODO: unpack4x8unorm'),null}Unpack4xI8(e,t){return console.error('TODO: unpack4xI8'),null}Unpack4xU8(e,t){return console.error('TODO: unpack4xU8'),null}Unpack2x16snorm(e,t){return console.error('TODO: unpack2x16snorm'),null}Unpack2x16unorm(e,t){return console.error('TODO: unpack2x16unorm'),null}Unpack2x16float(e,t){return console.error('TODO: unpack2x16float'),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error('TODO: subgroupAdd'),null}SubgroupExclusiveAdd(e,t){return console.error('TODO: subgroupExclusiveAdd'),null}SubgroupInclusiveAdd(e,t){return console.error('TODO: subgroupInclusiveAdd'),null}SubgroupAll(e,t){return console.error('TODO: subgroupAll'),null}SubgroupAnd(e,t){return console.error('TODO: subgroupAnd'),null}SubgroupAny(e,t){return console.error('TODO: subgroupAny'),null}SubgroupBallot(e,t){return console.error('TODO: subgroupBallot'),null}SubgroupBroadcast(e,t){return console.error('TODO: subgroupBroadcast'),null}SubgroupBroadcastFirst(e,t){return console.error('TODO: subgroupBroadcastFirst'),null}SubgroupElect(e,t){return console.error('TODO: subgroupElect'),null}SubgroupMax(e,t){return console.error('TODO: subgroupMax'),null}SubgroupMin(e,t){return console.error('TODO: subgroupMin'),null}SubgroupMul(e,t){return console.error('TODO: subgroupMul'),null}SubgroupExclusiveMul(e,t){return console.error('TODO: subgroupExclusiveMul'),null}SubgroupInclusiveMul(e,t){return console.error('TODO: subgroupInclusiveMul'),null}SubgroupOr(e,t){return console.error('TODO: subgroupOr'),null}SubgroupShuffle(e,t){return console.error('TODO: subgroupShuffle'),null}SubgroupShuffleDown(e,t){return console.error('TODO: subgroupShuffleDown'),null}SubgroupShuffleUp(e,t){return console.error('TODO: subgroupShuffleUp'),null}SubgroupShuffleXor(e,t){return console.error('TODO: subgroupShuffleXor'),null}SubgroupXor(e,t){return console.error('TODO: subgroupXor'),null}QuadBroadcast(e,t){return console.error('TODO: quadBroadcast'),null}QuadSwapDiagonal(e,t){return console.error('TODO: quadSwapDiagonal'),null}QuadSwapX(e,t){return console.error('TODO: quadSwapX'),null}QuadSwapY(e,t){return console.error('TODO: quadSwapY'),null}}const ft={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4},pt={mat2x2:[2,2,4],mat2x2f:[2,2,4],mat2x2h:[2,2,4],mat2x3:[2,3,6],mat2x3f:[2,3,6],mat2x3h:[2,3,6],mat2x4:[2,4,8],mat2x4f:[2,4,8],mat2x4h:[2,4,8],mat3x2:[3,2,6],mat3x2f:[3,2,6],mat3x2h:[3,2,6],mat3x3:[3,3,9],mat3x3f:[3,3,9],mat3x3h:[3,3,9],mat3x4:[3,4,12],mat3x4f:[3,4,12],mat3x4h:[3,4,12],mat4x2:[4,2,8],mat4x2f:[4,2,8],mat4x2h:[4,2,8],mat4x3:[4,3,12],mat4x3f:[4,3,12],mat4x3h:[4,3,12],mat4x4:[4,4,16],mat4x4f:[4,4,16],mat4x4h:[4,4,16]};class dt extends ut{constructor(e,t){var n;super(),this.ast=null!=e?e:[],this.reflection=new at,this.reflection.updateAST(this.ast),this.context=null!==(n=null==t?void 0:t.clone())&&void 0!==n?n:new lt,this.builtins=new ht(this),this.typeInfo={bool:this.getTypeInfo(ae.bool),i32:this.getTypeInfo(ae.i32),u32:this.getTypeInfo(ae.u32),f32:this.getTypeInfo(ae.f32),f16:this.getTypeInfo(ae.f16),vec2f:this.getTypeInfo(ce.vec2f),vec2u:this.getTypeInfo(ce.vec2u),vec2i:this.getTypeInfo(ce.vec2i),vec2h:this.getTypeInfo(ce.vec2h),vec3f:this.getTypeInfo(ce.vec3f),vec3u:this.getTypeInfo(ce.vec3u),vec3i:this.getTypeInfo(ce.vec3i),vec3h:this.getTypeInfo(ce.vec3h),vec4f:this.getTypeInfo(ce.vec4f),vec4u:this.getTypeInfo(ce.vec4u),vec4i:this.getTypeInfo(ce.vec4i),vec4h:this.getTypeInfo(ce.vec4h),mat2x2f:this.getTypeInfo(ce.mat2x2f),mat2x3f:this.getTypeInfo(ce.mat2x3f),mat2x4f:this.getTypeInfo(ce.mat2x4f),mat3x2f:this.getTypeInfo(ce.mat3x2f),mat3x3f:this.getTypeInfo(ce.mat3x3f),mat3x4f:this.getTypeInfo(ce.mat3x4f),mat4x2f:this.getTypeInfo(ce.mat4x2f),mat4x3f:this.getTypeInfo(ce.mat4x3f),mat4x4f:this.getTypeInfo(ce.mat4x4f)}}getVariableValue(e){var t,n;const r=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;if(null===r)return null;if(r instanceof Be)return r.value;if(r instanceof Me)return Array.from(r.data);if(r instanceof Ue)return Array.from(r.data);if(r instanceof Pe&&r.typeInfo instanceof s){if('u32'===r.typeInfo.format.name)return Array.from(new Uint32Array(r.buffer,r.offset,r.typeInfo.count));if('i32'===r.typeInfo.format.name)return Array.from(new Int32Array(r.buffer,r.offset,r.typeInfo.count));if('f32'===r.typeInfo.format.name)return Array.from(new Float32Array(r.buffer,r.offset,r.typeInfo.count))}return console.error(`Unsupported return variable type ${r.typeInfo.name}`),null}execute(e){(e=null!=e?e:{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(e,t,n,s){const r=this.context.clone();(s=null!=s?s:{}).constants&&this._setOverrides(s.constants,r),this._execStatements(this.ast,r);const a=r.getFunction(e);if(!a)return void console.error(`Function ${e} not found`);if('number'==typeof t)t=[t,1,1];else{if(0===t.length)return void console.error('Invalid dispatch count');1===t.length?t=[t[0],1,1]:2===t.length?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]])}const i=t[0],o=t[1],c=t[2],l=this.getTypeInfo('vec3u');r.setVariable('@num_workgroups',new Me(t,l));const u=this.reflection.getFunctionInfo(e);null===u&&console.error(`Function ${e} not found in reflection data`);for(const e in n)for(const t in n[e]){const s=n[e][t];r.variables.forEach(n=>{var r;const a=n.node;if(null==a?void 0:a.attributes){let i=null,o=null;for(const e of a.attributes)'binding'===e.name?i=e.value:'group'===e.name&&(o=e.value);if(t==i&&e==o){let i=!1;for(const s of u.resources)if(s.name===n.name&&s.group===parseInt(e)&&s.binding===parseInt(t)){i=!0;break}if(i)if(void 0!==s.texture&&void 0!==s.descriptor){const e=new We(s.texture,this.getTypeInfo(a.type),s.descriptor,null!==(r=s.texture.view)&&void 0!==r?r:null);n.value=e}else void 0!==s.uniform?n.value=new Pe(s.uniform,this.getTypeInfo(a.type)):n.value=new Pe(s,this.getTypeInfo(a.type))}}})}for(let e=0;e<c;++e)for(let t=0;t<o;++t)for(let n=0;n<i;++n)r.setVariable('@workgroup_id',new Me([n,t,e],this.getTypeInfo('vec3u'))),this._dispatchWorkgroup(a,[n,t,e],r)}execStatement(e,t){if(e instanceof Y)return this.evalExpression(e.value,t);if(e instanceof se){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof Be))throw new Error('Invalid break-if condition');if(!n.value)return null}return dt._breakObj}if(e instanceof re)return dt._continueObj;if(e instanceof U)this._let(e,t);else if(e instanceof F)this._var(e,t);else if(e instanceof P)this._const(e,t);else if(e instanceof D)this._function(e,t);else{if(e instanceof Q)return this._if(e,t);if(e instanceof Z)return this._switch(e,t);if(e instanceof B)return this._for(e,t);if(e instanceof V)return this._while(e,t);if(e instanceof j)return this._loop(e,t);if(e instanceof O){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof G)this._assign(e,t);else if(e instanceof R)this._increment(e,t);else{if(e instanceof oe)return null;if(e instanceof M){const n=e.name;null===t.getVariable(n)&&t.setVariable(n,new Be(0,this.getTypeInfo('u32')))}else if(e instanceof X)this._call(e,t);else{if(e instanceof ee)return null;if(e instanceof te)return null;console.error('Invalid statement type.',e,`Line ${e.line}`)}}}return null}evalExpression(e,t){return e instanceof Ie?this._evalBinaryOp(e,t):e instanceof xe?this._evalLiteral(e,t):e instanceof ge?this._evalVariable(e,t):e instanceof me?this._evalCall(e,t):e instanceof de?this._evalCreate(e,t):e instanceof _e?this._evalConst(e,t):e instanceof ye?this._evalBitcast(e,t):e instanceof ke?this._evalUnaryOp(e,t):(console.error('Invalid expression type',e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof ae){const t=this.reflection.getTypeInfo(e);if(null!==t)return t}let n=null!==(t=this.typeInfo[e])&&void 0!==t?t:null;return null!==n||(n=this.reflection.getTypeInfoByName(e)),n}_setOverrides(e,t){for(const n in e){const s=e[n],r=this.reflection.getOverrideInfo(n);null!==r?(null===r.type&&(r.type=this.getTypeInfo('u32')),'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new Be(s,r.type)):'bool'===r.type.name?t.setVariable(n,new Be(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Me(s,r.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof Be?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof Be?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof Be?e.value:parseInt(t.value[2])}}const r=this.getTypeInfo('vec3u'),a=this.getTypeInfo('u32');n.setVariable('@workgroup_size',new Me(s,r));const i=s[0],o=s[1],c=s[2];for(let l=0,u=0;l<c;++l)for(let c=0;c<o;++c)for(let o=0;o<i;++o,++u){const i=[o,c,l],h=[o+t[0]*s[0],c+t[1]*s[1],l+t[2]*s[2]];n.setVariable('@local_invocation_id',new Me(i,r)),n.setVariable('@global_invocation_id',new Me(h,r)),n.setVariable('@local_invocation_index',new Be(u,a)),this._dispatchExec(e,n)}}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);void 0!==r&&t.variables.set(n.name,r)}this._execStatements(e.node.body,t)}getVariableName(e,t){for(;e instanceof ke;)e=e.right;return e instanceof ge?e.name:(console.error('Unknown variable type',e,'Line',e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const e=t.clone(),s=this._execStatements(n,e);if(s)return s;continue}const e=this.execStatement(n,t);if(e)return e}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(s){for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.setVariable(r.name,a,r)}this._execStatements(s.node.body,n)}else if(e.isBuiltin)this._callBuiltinFunction(e,n);else{this.getTypeInfo(e.name)&&this._evalCreate(e,t)}}_increment(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);s?'++'===e.operator?s.value instanceof Be?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):'--'===e.operator?s.value instanceof Be?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`)}_getVariableData(e,t){if(e instanceof ge){const n=this.getVariableName(e,t),s=t.getVariable(n);return null===s?(console.error(`Variable ${n} not found. Line ${e.line}`),null):s.value.getSubData(this,e.postfix,t)}if(e instanceof ke){if('*'===e.operator){const n=this._getVariableData(e.right,t);return n instanceof Oe?n.reference.getSubData(this,e.postfix,t):(console.error(`Variable ${e.right} is not a pointer. Line ${e.line}`),null)}if('&'===e.operator){const n=this._getVariableData(e.right,t);return new Oe(n)}}return null}_assign(e,t){let n=null,s='<var>',r=null;if(e.variable instanceof ke){const n=this._getVariableData(e.variable,t),s=this.evalExpression(e.value,t),r=e.operator;if('='===r){if(n instanceof Be||n instanceof Me||n instanceof Ue){if(s instanceof Be||s instanceof Me||s instanceof Ue&&n.data.length===s.data.length)return void n.data.set(s.data);console.error(`Invalid assignment. Line ${e.line}`)}else if(n instanceof Pe&&s instanceof Pe&&n.buffer.byteLength-n.offset>=s.buffer.byteLength-s.offset)return void(n.buffer.byteLength%4==0?new Uint32Array(n.buffer,n.offset,n.typeInfo.size/4).set(new Uint32Array(s.buffer,s.offset,s.typeInfo.size/4)):new Uint8Array(n.buffer,n.offset,n.typeInfo.size).set(new Uint8Array(s.buffer,s.offset,s.typeInfo.size)));return console.error(`Invalid assignment. Line ${e.line}`),null}if('+='===r)return n instanceof Be||n instanceof Me||n instanceof Ue?s instanceof Be||s instanceof Me||s instanceof Ue?void n.data.set(s.data.map((e,t)=>n.data[t]+e)):void console.error(`Invalid assignment . Line ${e.line}`):void console.error(`Invalid assignment. Line ${e.line}`);if('-='===r)return(n instanceof Be||n instanceof Me||n instanceof Ue)&&(s instanceof Be||s instanceof Me||s instanceof Ue)?void n.data.set(s.data.map((e,t)=>n.data[t]-e)):void console.error(`Invalid assignment. Line ${e.line}`)}if(e.variable instanceof ke){if('*'===e.variable.operator){s=this.getVariableName(e.variable.right,t);const r=t.getVariable(s);if(!(r&&r.value instanceof Oe))return void console.error(`Variable ${s} is not a pointer. Line ${e.line}`);n=r.value.reference;let a=e.variable.postfix;if(!a){let t=e.variable.right;for(;t instanceof ke;){if(t.postfix){a=t.postfix;break}t=t.right}}a&&(n=n.getSubData(this,a,t))}}else{r=e.variable.postfix,s=this.getVariableName(e.variable,t);const a=t.getVariable(s);if(null===a)return void console.error(`Variable ${s} not found. Line ${e.line}`);n=a.value}if(n instanceof Oe&&(n=n.reference),null===n)return void console.error(`Variable ${s} not found. Line ${e.line}`);const a=this.evalExpression(e.value,t),i=e.operator;if('='!==i){const s=n.getSubData(this,r,t);if(s instanceof Me&&a instanceof Be){const t=s.data,n=a.value;if('+='===i)for(let e=0;e<t.length;++e)t[e]+=n;else if('-='===i)for(let e=0;e<t.length;++e)t[e]-=n;else if('*='===i)for(let e=0;e<t.length;++e)t[e]*=n;else if('/='===i)for(let e=0;e<t.length;++e)t[e]/=n;else if('%='===i)for(let e=0;e<t.length;++e)t[e]%=n;else if('&='===i)for(let e=0;e<t.length;++e)t[e]&=n;else if('|='===i)for(let e=0;e<t.length;++e)t[e]|=n;else if('^='===i)for(let e=0;e<t.length;++e)t[e]^=n;else if('<<='===i)for(let e=0;e<t.length;++e)t[e]<<=n;else if('>>='===i)for(let e=0;e<t.length;++e)t[e]>>=n;else console.error(`Invalid operator ${i}. Line ${e.line}`)}else if(s instanceof Me&&a instanceof Me){const t=s.data,n=a.data;if(t.length!==n.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if('+='===i)for(let e=0;e<t.length;++e)t[e]+=n[e];else if('-='===i)for(let e=0;e<t.length;++e)t[e]-=n[e];else if('*='===i)for(let e=0;e<t.length;++e)t[e]*=n[e];else if('/='===i)for(let e=0;e<t.length;++e)t[e]/=n[e];else if('%='===i)for(let e=0;e<t.length;++e)t[e]%=n[e];else if('&='===i)for(let e=0;e<t.length;++e)t[e]&=n[e];else if('|='===i)for(let e=0;e<t.length;++e)t[e]|=n[e];else if('^='===i)for(let e=0;e<t.length;++e)t[e]^=n[e];else if('<<='===i)for(let e=0;e<t.length;++e)t[e]<<=n[e];else if('>>='===i)for(let e=0;e<t.length;++e)t[e]>>=n[e];else console.error(`Invalid operator ${i}. Line ${e.line}`)}else{if(!(s instanceof Be&&a instanceof Be))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);'+='===i?s.value+=a.value:'-='===i?s.value-=a.value:'*='===i?s.value*=a.value:'/='===i?s.value/=a.value:'%='===i?s.value%=a.value:'&='===i?s.value&=a.value:'|='===i?s.value|=a.value:'^='===i?s.value^=a.value:'<<='===i?s.value<<=a.value:'>>='===i?s.value>>=a.value:console.error(`Invalid operator ${i}. Line ${e.line}`)}return void(n instanceof Pe&&n.setDataValue(this,s,r,t))}if(n instanceof Pe)n.setDataValue(this,a,r,t);else if(r){if(!(n instanceof Me||n instanceof Ue))return void console.error(`Variable ${s} is not a vector or matrix. Line ${e.line}`);if(r instanceof ve){const i=this.evalExpression(r.index,t).value;if(n instanceof Me){if(!(a instanceof Be))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[i]=a.value}else{if(!(n instanceof Ue))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const i=this.evalExpression(r.index,t).value;if(i<0)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(a instanceof Me))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const t=n.typeInfo.getTypeName();if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t){if(!(i<2&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t){if(!(i<2&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t){if(!(i<2&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t){if(!(i<3&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t){if(!(i<3&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else if('mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t){if(!(i<3&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}else if('mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t){if(!(i<4&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if('mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t){if(!(i<4&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else{if('mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(i<4&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}}}}}else if(r instanceof pe){const t=r.value;if(!(n instanceof Me))return void console.error(`Invalid assignment to ${t}. Variable ${s} is not a vector. Line ${e.line}`);if(a instanceof Be){if(t.length>1)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);if('x'===t)n.data[0]=a.value;else if('y'===t){if(n.data.length<2)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[1]=a.value}else if('z'===t){if(n.data.length<3)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[2]=a.value}else if('w'===t){if(n.data.length<4)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[3]=a.value}}else{if(!(a instanceof Me))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(t.length!==a.data.length)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);for(let r=0;r<t.length;++r){const i=t[r];if('x'===i||'r'===i)n.data[0]=a.data[r];else if('y'===i||'g'===i){if(a.data.length<2)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[1]=a.data[r]}else if('z'===i||'b'===i){if(a.data.length<3)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[2]=a.data[r]}else{if('w'!==i&&'a'!==i)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);if(a.data.length<4)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[3]=a.data[r]}}}}}else n instanceof Be&&a instanceof Be?n.value=a.value:n instanceof Me&&a instanceof Me||n instanceof Ue&&a instanceof Ue?n.data.set(a.data):console.error(`Invalid assignment to ${s}. Line ${e.line}`)}_function(e,t){const n=new ct(e);t.functions.set(e.name,n)}_const(e,t){let n=null;null!==e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_let(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof ke||(n=n.clone())}else{const s=e.type.name;if('f32'===s||'i32'===s||'u32'===s||'bool'===s||'f16'===s||'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2b'===s||'vec3b'===s||'vec4b'===s||'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s||'array'===s){const s=new de(e.type,[]);n=this._evalCreate(s,t)}}t.createVariable(e.name,n,e)}_var(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof ke||(n=n.clone())}else{if(null===e.type)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);const s=e.type.name;if('f32'===s||'i32'===s||'u32'===s||'bool'===s||'f16'===s||'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2b'===s||'vec3b'===s||'vec4b'===s||'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s||e.type instanceof ue||e.type instanceof oe||e.type instanceof ce){const s=new de(e.type,[]);n=this._evalCreate(s,t)}}t.createVariable(e.name,n,e)}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof Be))return console.error(`Invalid if condition. Line ${e.line}`),null;let s=null;for(const r of e.cases)if(r instanceof Ae)for(const a of r.selectors){if(a instanceof Se){s=r;continue}const i=this.evalExpression(a,t);if(!(i instanceof Be))return console.error(`Invalid case selector. Line ${e.line}`),null;if(i.value===n.value)return this._execStatements(r.body,t)}else r instanceof Ee&&(s=r);return s?this._execStatements(s.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof Be))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const n of e.elseif){const s=this.evalExpression(n.condition,t);if(!(s instanceof Be))return console.error(`Invalid if condition. Line ${e.line}`),null;if(s.value)return this._execStatements(n.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof Be?e.value:(console.error('Expected scalar value.',e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===dt._breakObj)break;if(null!==n&&n!==dt._continueObj)return n;this.execStatement(e.increment,t)}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===dt._breakObj)break;if(n===dt._continueObj){if(e.continuing){if(this._execStatements(e.continuing.body,t)===dt._breakObj)break}}else if(null!==n)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===dt._breakObj)break;if(n!==dt._continueObj&&null!==n)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),s=e.type;if(n instanceof Be){const e=nt(n.value,n.typeInfo.name,s.name);return new Be(e,this.getTypeInfo(s))}if(n instanceof Me){const t=n.typeInfo.getTypeName();let r='';if(t.endsWith('f'))r='f32';else if(t.endsWith('i'))r='i32';else if(t.endsWith('u'))r='u32';else if(t.endsWith('b'))r='bool';else{if(!t.endsWith('h'))return console.error(`Unknown vector type ${t}. Line ${e.line}`),null;r='f16'}const a=s.getTypeName();let i='';if(a.endsWith('f'))i='f32';else if(a.endsWith('i'))i='i32';else if(a.endsWith('u'))i='u32';else if(a.endsWith('b'))i='bool';else{if(!a.endsWith('h'))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;i='f16'}const o=function(e,t,n){if(t===n)return e;const s=new Array(e.length);for(let r=0;r<e.length;r++)s[r]=nt(e[r],t,n);return s}(Array.from(n.data),r,i);return new Me(o,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){return t.getVariableValue(e.name).clone().getSubData(this,e.postfix,t)}_evalCreate(e,t){var r;if(e instanceof de){if(null===e.type)return Ve.void;switch(e.type.getTypeName()){case'bool':case'i32':case'u32':case'f32':case'f16':return this._callConstructorValue(e,t);case'vec2':case'vec3':case'vec4':case'vec2f':case'vec3f':case'vec4f':case'vec2h':case'vec3h':case'vec4h':case'vec2i':case'vec3i':case'vec4i':case'vec2u':case'vec3u':case'vec4u':case'vec2b':case'vec3b':case'vec4b':return this._callConstructorVec(e,t);case'mat2x2':case'mat2x2f':case'mat2x2h':case'mat2x3':case'mat2x3f':case'mat2x3h':case'mat2x4':case'mat2x4f':case'mat2x4h':case'mat3x2':case'mat3x2f':case'mat3x2h':case'mat3x3':case'mat3x3f':case'mat3x3h':case'mat3x4':case'mat3x4f':case'mat3x4h':case'mat4x2':case'mat4x2f':case'mat4x2h':case'mat4x3':case'mat4x3f':case'mat4x3h':case'mat4x4':case'mat4x4f':case'mat4x4h':return this._callConstructorMatrix(e,t)}}const a=e instanceof de?e.type.name:e.name,i=e instanceof de?this.getTypeInfo(e.type):this.getTypeInfo(e.name);if(null===i)return console.error(`Unknown type ${a}. Line ${e.line}`),null;if(0===i.size)return null;const o=new Pe(new ArrayBuffer(i.size),i,0);if(i instanceof n){if(e.args)for(let n=0;n<e.args.length;++n){const s=i.members[n],r=e.args[n],a=this.evalExpression(r,t);o.setData(this,a,s.type,s.offset,t)}}else if(i instanceof s){let n=0;if(e.args)for(let s=0;s<e.args.length;++s){const a=e.args[s],c=this.evalExpression(a,t);null===i.format&&('x32'===(null===(r=c.typeInfo)||void 0===r?void 0:r.name)?i.format=this.getTypeInfo('i32'):i.format=c.typeInfo),o.setData(this,c,i.format,n,t),n+=i.stride}}else console.error(`Unknown type \"${a}\". Line ${e.line}`);return e instanceof de?o.getSubData(this,e.postfix,t):o}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),s=n.name;if('x32'===s||'u32'===s||'f32'===s||'f16'===s||'i32'===s||'bool'===s){return new Be(e.scalarValue,n)}return'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s?this._callConstructorVec(e,t):'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return null===n?n:n.getSubData(this,e.postfix,t)}_maxFormatTypeInfo(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=dt._priority.get(t.name);dt._priority.get(e[n].name)<s&&(t=e[n])}return'x32'===t.name?this.getTypeInfo('i32'):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t);if('&'===e.operator)return new Oe(n);if('*'===e.operator)return n instanceof Oe?n.reference.getSubData(this,e.postfix,t):(console.error(`Invalid dereference. Line ${e.line}`),null);const s=n instanceof Be?n.value:n instanceof Me?Array.from(n.data):null;switch(e.operator){case'+':{if(Ge(s)){const e=s.map((e,t)=>+e);return new Me(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Be(+e,t)}case'-':{if(Ge(s)){const e=s.map((e,t)=>-e);return new Me(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Be(-e,t)}case'!':{if(Ge(s)){const e=s.map((e,t)=>e?0:1);return new Me(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Be(e?0:1,t)}case'~':{if(Ge(s)){const e=s.map((e,t)=>~e);return new Me(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Be(~e,t)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),s=this.evalExpression(e.right,t),r=n instanceof Be?n.value:n instanceof Me||n instanceof Ue?Array.from(n.data):null,a=s instanceof Be?s.value:s instanceof Me||s instanceof Ue?Array.from(s.data):null;switch(e.operator){case'+':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e+s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t+e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e+t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t+i,o)}case'-':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e-s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t-e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e-t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t-i,o)}case'*':{if(Ge(r)&&Ge(a)){const t=r,i=a;if(n instanceof Ue&&s instanceof Ue){const r=function(e,t,n,s){if(void 0===pt[t.name]||void 0===pt[s.name])return null;const r=pt[t.name][0],a=pt[t.name][1],i=pt[s.name][0];if(r!==pt[s.name][1])return null;const o=new Array(i*a);for(let t=0;t<a;t++)for(let s=0;s<i;s++){let c=0;for(let i=0;i<r;i++)c+=e[i*a+t]*n[s*r+i];o[t*i+s]=c}return o}(t,n.typeInfo,i,s.typeInfo);if(null===r)return console.error(`Matrix multiplication failed. Line ${e.line}.`),null;const a=pt[s.typeInfo.name][0],o=pt[n.typeInfo.name][1],c=this.getTypeInfo(`mat${a}x${o}f`);return new Ue(r,c)}if(n instanceof Ue&&s instanceof Me){const r=function(e,t,n,s){if(void 0===pt[t.name]||void 0===ft[s.name])return null;const r=pt[t.name][0],a=pt[t.name][1];if(r!==n.length)return null;const i=new Array(a);for(let t=0;t<a;t++){let s=0;for(let i=0;i<r;i++)s+=e[i*a+t]*n[i];i[t]=s}return i}(t,n.typeInfo,i,s.typeInfo);return null===r?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new Me(r,s.typeInfo)}if(n instanceof Me&&s instanceof Ue){const r=function(e,t,n,s){if(void 0===ft[t.name]||void 0===pt[s.name])return null;const r=pt[s.name][0],a=pt[s.name][1];if(a!==e.length)return null;const i=[];for(let t=0;t<r;t++){let s=0;for(let i=0;i<a;i++)s+=e[i]*n[i*r+t];i[t]=s}return i}(t,n.typeInfo,i,s.typeInfo);return null===r?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new Me(r,n.typeInfo)}{if(t.length!==i.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const s=t.map((e,t)=>e*i[t]);return new Me(s,n.typeInfo)}}if(Ge(r)){const e=a,t=r.map((t,n)=>t*e);return n instanceof Ue?new Ue(t,n.typeInfo):new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e*t);return s instanceof Ue?new Ue(t,s.typeInfo):new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t*i,o)}case'%':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e%s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t%e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e%t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t%i,o)}case'/':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e/s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t/e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e/t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t/i,o)}case'&':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e&s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t&e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e&t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t&i,o)}case'|':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e|s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t|e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e|t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t|i,o)}case'^':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e^s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t^e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e^t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t^i,o)}case'<<':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e<<s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t<<e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e<<t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t<<i,o)}case'>>':{if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e>>s[t]);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t>>e);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e>>t);return new Me(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Be(t>>i,o)}case'>':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e>s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t>e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e>t?1:0);return new Me(t,s.typeInfo)}return new Be(r>a?1:0,this.getTypeInfo('bool'));case'<':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e<s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t<e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e<t?1:0);return new Me(t,s.typeInfo)}return new Be(r<a?1:0,this.getTypeInfo('bool'));case'==':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e===s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t==e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e==t?1:0);return new Me(t,s.typeInfo)}return new Be(r===a?1:0,this.getTypeInfo('bool'));case'!=':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e!==s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t!==e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e!==t?1:0);return new Me(t,s.typeInfo)}return new Be(r!==a?1:0,this.getTypeInfo('bool'));case'>=':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e>=s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t>=e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e>=t?1:0);return new Me(t,s.typeInfo)}return new Be(r>=a?1:0,this.getTypeInfo('bool'));case'<=':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e<=s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t<=e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e<=t?1:0);return new Me(t,s.typeInfo)}return new Be(r<=a?1:0,this.getTypeInfo('bool'));case'&&':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e&&s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t&&e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e&&t?1:0);return new Me(t,s.typeInfo)}return new Be(r&&a?1:0,this.getTypeInfo('bool'));case'||':if(Ge(r)&&Ge(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e||s[t]?1:0);return new Me(i,n.typeInfo)}if(Ge(r)){const e=a,t=r.map((t,n)=>t||e?1:0);return new Me(t,n.typeInfo)}if(Ge(a)){const e=r,t=a.map((t,n)=>e||t?1:0);return new Me(t,s.typeInfo)}return new Be(r||a?1:0,this.getTypeInfo('bool'))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(null!==e.cachedReturnValue)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(!s){if(e.isBuiltin)return this._callBuiltinFunction(e,n);return this.getTypeInfo(e.name)?this._evalCreate(e,t):(console.error(`Unknown function \"${e.name}\". Line ${e.line}`),null)}for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.createVariable(r.name,a,r)}return this._execStatements(s.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case'all':return this.builtins.All(e,t);case'any':return this.builtins.Any(e,t);case'select':return this.builtins.Select(e,t);case'arrayLength':return this.builtins.ArrayLength(e,t);case'abs':return this.builtins.Abs(e,t);case'acos':return this.builtins.Acos(e,t);case'acosh':return this.builtins.Acosh(e,t);case'asin':return this.builtins.Asin(e,t);case'asinh':return this.builtins.Asinh(e,t);case'atan':return this.builtins.Atan(e,t);case'atanh':return this.builtins.Atanh(e,t);case'atan2':return this.builtins.Atan2(e,t);case'ceil':return this.builtins.Ceil(e,t);case'clamp':return this.builtins.Clamp(e,t);case'cos':return this.builtins.Cos(e,t);case'cosh':return this.builtins.Cosh(e,t);case'countLeadingZeros':return this.builtins.CountLeadingZeros(e,t);case'countOneBits':return this.builtins.CountOneBits(e,t);case'countTrailingZeros':return this.builtins.CountTrailingZeros(e,t);case'cross':return this.builtins.Cross(e,t);case'degrees':return this.builtins.Degrees(e,t);case'determinant':return this.builtins.Determinant(e,t);case'distance':return this.builtins.Distance(e,t);case'dot':return this.builtins.Dot(e,t);case'dot4U8Packed':return this.builtins.Dot4U8Packed(e,t);case'dot4I8Packed':return this.builtins.Dot4I8Packed(e,t);case'exp':return this.builtins.Exp(e,t);case'exp2':return this.builtins.Exp2(e,t);case'extractBits':return this.builtins.ExtractBits(e,t);case'faceForward':return this.builtins.FaceForward(e,t);case'firstLeadingBit':return this.builtins.FirstLeadingBit(e,t);case'firstTrailingBit':return this.builtins.FirstTrailingBit(e,t);case'floor':return this.builtins.Floor(e,t);case'fma':return this.builtins.Fma(e,t);case'fract':return this.builtins.Fract(e,t);case'frexp':return this.builtins.Frexp(e,t);case'insertBits':return this.builtins.InsertBits(e,t);case'inverseSqrt':return this.builtins.InverseSqrt(e,t);case'ldexp':return this.builtins.Ldexp(e,t);case'length':return this.builtins.Length(e,t);case'log':return this.builtins.Log(e,t);case'log2':return this.builtins.Log2(e,t);case'max':return this.builtins.Max(e,t);case'min':return this.builtins.Min(e,t);case'mix':return this.builtins.Mix(e,t);case'modf':return this.builtins.Modf(e,t);case'normalize':return this.builtins.Normalize(e,t);case'pow':return this.builtins.Pow(e,t);case'quantizeToF16':return this.builtins.QuantizeToF16(e,t);case'radians':return this.builtins.Radians(e,t);case'reflect':return this.builtins.Reflect(e,t);case'refract':return this.builtins.Refract(e,t);case'reverseBits':return this.builtins.ReverseBits(e,t);case'round':return this.builtins.Round(e,t);case'saturate':return this.builtins.Saturate(e,t);case'sign':return this.builtins.Sign(e,t);case'sin':return this.builtins.Sin(e,t);case'sinh':return this.builtins.Sinh(e,t);case'smoothstep':return this.builtins.SmoothStep(e,t);case'sqrt':return this.builtins.Sqrt(e,t);case'step':return this.builtins.Step(e,t);case'tan':return this.builtins.Tan(e,t);case'tanh':return this.builtins.Tanh(e,t);case'transpose':return this.builtins.Transpose(e,t);case'trunc':return this.builtins.Trunc(e,t);case'dpdx':return this.builtins.Dpdx(e,t);case'dpdxCoarse':return this.builtins.DpdxCoarse(e,t);case'dpdxFine':return this.builtins.DpdxFine(e,t);case'dpdy':return this.builtins.Dpdy(e,t);case'dpdyCoarse':return this.builtins.DpdyCoarse(e,t);case'dpdyFine':return this.builtins.DpdyFine(e,t);case'fwidth':return this.builtins.Fwidth(e,t);case'fwidthCoarse':return this.builtins.FwidthCoarse(e,t);case'fwidthFine':return this.builtins.FwidthFine(e,t);case'textureDimensions':return this.builtins.TextureDimensions(e,t);case'textureGather':return this.builtins.TextureGather(e,t);case'textureGatherCompare':return this.builtins.TextureGatherCompare(e,t);case'textureLoad':return this.builtins.TextureLoad(e,t);case'textureNumLayers':return this.builtins.TextureNumLayers(e,t);case'textureNumLevels':return this.builtins.TextureNumLevels(e,t);case'textureNumSamples':return this.builtins.TextureNumSamples(e,t);case'textureSample':return this.builtins.TextureSample(e,t);case'textureSampleBias':return this.builtins.TextureSampleBias(e,t);case'textureSampleCompare':return this.builtins.TextureSampleCompare(e,t);case'textureSampleCompareLevel':return this.builtins.TextureSampleCompareLevel(e,t);case'textureSampleGrad':return this.builtins.TextureSampleGrad(e,t);case'textureSampleLevel':return this.builtins.TextureSampleLevel(e,t);case'textureSampleBaseClampToEdge':return this.builtins.TextureSampleBaseClampToEdge(e,t);case'textureStore':return this.builtins.TextureStore(e,t);case'atomicLoad':return this.builtins.AtomicLoad(e,t);case'atomicStore':return this.builtins.AtomicStore(e,t);case'atomicAdd':return this.builtins.AtomicAdd(e,t);case'atomicSub':return this.builtins.AtomicSub(e,t);case'atomicMax':return this.builtins.AtomicMax(e,t);case'atomicMin':return this.builtins.AtomicMin(e,t);case'atomicAnd':return this.builtins.AtomicAnd(e,t);case'atomicOr':return this.builtins.AtomicOr(e,t);case'atomicXor':return this.builtins.AtomicXor(e,t);case'atomicExchange':return this.builtins.AtomicExchange(e,t);case'atomicCompareExchangeWeak':return this.builtins.AtomicCompareExchangeWeak(e,t);case'pack4x8snorm':return this.builtins.Pack4x8snorm(e,t);case'pack4x8unorm':return this.builtins.Pack4x8unorm(e,t);case'pack4xI8':return this.builtins.Pack4xI8(e,t);case'pack4xU8':return this.builtins.Pack4xU8(e,t);case'pack4x8Clamp':return this.builtins.Pack4x8Clamp(e,t);case'pack4xU8Clamp':return this.builtins.Pack4xU8Clamp(e,t);case'pack2x16snorm':return this.builtins.Pack2x16snorm(e,t);case'pack2x16unorm':return this.builtins.Pack2x16unorm(e,t);case'pack2x16float':return this.builtins.Pack2x16float(e,t);case'unpack4x8snorm':return this.builtins.Unpack4x8snorm(e,t);case'unpack4x8unorm':return this.builtins.Unpack4x8unorm(e,t);case'unpack4xI8':return this.builtins.Unpack4xI8(e,t);case'unpack4xU8':return this.builtins.Unpack4xU8(e,t);case'unpack2x16snorm':return this.builtins.Unpack2x16snorm(e,t);case'unpack2x16unorm':return this.builtins.Unpack2x16unorm(e,t);case'unpack2x16float':return this.builtins.Unpack2x16float(e,t);case'storageBarrier':return this.builtins.StorageBarrier(e,t);case'textureBarrier':return this.builtins.TextureBarrier(e,t);case'workgroupBarrier':return this.builtins.WorkgroupBarrier(e,t);case'workgroupUniformLoad':return this.builtins.WorkgroupUniformLoad(e,t);case'subgroupAdd':return this.builtins.SubgroupAdd(e,t);case'subgroupExclusiveAdd':return this.builtins.SubgroupExclusiveAdd(e,t);case'subgroupInclusiveAdd':return this.builtins.SubgroupInclusiveAdd(e,t);case'subgroupAll':return this.builtins.SubgroupAll(e,t);case'subgroupAnd':return this.builtins.SubgroupAnd(e,t);case'subgroupAny':return this.builtins.SubgroupAny(e,t);case'subgroupBallot':return this.builtins.SubgroupBallot(e,t);case'subgroupBroadcast':return this.builtins.SubgroupBroadcast(e,t);case'subgroupBroadcastFirst':return this.builtins.SubgroupBroadcastFirst(e,t);case'subgroupElect':return this.builtins.SubgroupElect(e,t);case'subgroupMax':return this.builtins.SubgroupMax(e,t);case'subgroupMin':return this.builtins.SubgroupMin(e,t);case'subgroupMul':return this.builtins.SubgroupMul(e,t);case'subgroupExclusiveMul':return this.builtins.SubgroupExclusiveMul(e,t);case'subgroupInclusiveMul':return this.builtins.SubgroupInclusiveMul(e,t);case'subgroupOr':return this.builtins.SubgroupOr(e,t);case'subgroupShuffle':return this.builtins.SubgroupShuffle(e,t);case'subgroupShuffleDown':return this.builtins.SubgroupShuffleDown(e,t);case'subgroupShuffleUp':return this.builtins.SubgroupShuffleUp(e,t);case'subgroupShuffleXor':return this.builtins.SubgroupShuffleXor(e,t);case'subgroupXor':return this.builtins.SubgroupXor(e,t);case'quadBroadcast':return this.builtins.QuadBroadcast(e,t);case'quadSwapDiagonal':return this.builtins.QuadSwapDiagonal(e,t);case'quadSwapX':return this.builtins.QuadSwapX(e,t);case'quadSwapY':return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const s=t.clone();for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this.evalExpression(e.args[t],s);s.setVariable(r.name,a,r)}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(e,t){if(!e.args||0===e.args.length)return new Be(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n.getSubData(this,e.postfix,t).clone()}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),r=ft[s];if(void 0===r)return console.error(`Invalid vec constructor ${s}. Line ${e.line}`),null;const a=[];if(e instanceof xe)if(e.isVector){const t=e.vectorValue;for(const e of t)a.push(e)}else a.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Me){const t=e.data;for(let e=0;e<t.length;++e){let n=t[e];a.push(n)}}else if(e instanceof Be){let t=e.value;a.push(t)}}if(e.type instanceof ce&&null===e.type.format&&(e.type.format=ce.f32),0===a.length){const s=new Array(r).fill(0);return new Me(s,n).getSubData(this,e.postfix,t)}if(1===a.length)for(;a.length<r;)a.push(a[0]);if(a.length<r)return console.error(`Invalid vec constructor. Line ${e.line}`),null;return new Me(a.length>r?a.slice(0,r):a,n).getSubData(this,e.postfix,t)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),r=pt[s];if(void 0===r)return console.error(`Invalid matrix constructor ${s}. Line ${e.line}`),null;const i=[];if(e instanceof xe)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e)}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);e instanceof Me?i.push(...e.data):e instanceof Be?i.push(e.value):e instanceof Ue&&i.push(...e.data)}if(n instanceof a&&null===n.format&&(n.format=this.getTypeInfo('f32')),0===i.length){const s=new Array(r[2]).fill(0);return new Ue(s,n).getSubData(this,e.postfix,t)}return i.length!==r[2]?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new Ue(i,n).getSubData(this,e.postfix,t)}}dt._breakObj=new Ne(new e('BREAK',null),null),dt._continueObj=new Ne(new e('CONTINUE',null),null),dt._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class mt{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class gt{constructor(){this._tokens=[],this._current=0,this._currentLine=1,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new mt,this._exec=new dt,this._forwardTypeCount=0}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}if(this._deferArrayCountEval.length>0){for(const e of this._deferArrayCountEval){const t=e.arrayType,n=e.countNode;if(n instanceof ge){const e=n.name,s=this._context.constants.get(e);if(s)try{const e=s.constEvaluate(this._exec);t.count=e}catch(e){}}}this._deferArrayCountEval.length=0}if(this._forwardTypeCount>0)for(const e of t)e.search(e=>{e instanceof Ce||e instanceof le?e.type=this._forwardType(e.type):e instanceof ue?e.format=this._forwardType(e.format):e instanceof F||e instanceof U||e instanceof P?e.type=this._forwardType(e.type):e instanceof D?e.returnType=this._forwardType(e.returnType):e instanceof $e&&(e.type=this._forwardType(e.type))});return t}_forwardType(e){if(e instanceof ie){const t=this._getType(e.name);if(t)return t}else e instanceof le?e.type=this._forwardType(e.type):e instanceof ue&&(e.format=this._forwardType(e.format));return e}_initialize(e){if(e)if('string'==typeof e){const t=new Re(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_updateNode(e,t){return e.line=null!=t?t:this._currentLine,e}_error(e,t){return{token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==He.eof}_match(e){if(e instanceof qe)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){const n=t.type;let s=!1;for(const t of e){if(n===t)return!0;t===He.tokens.name&&(s=!0)}if(s){const e=He.tokens.name.rule.exec(t.lexeme);if(e&&0==e.index&&e[0]==t.lexeme)return!0}return!1}if(t.type===e)return!0;if(e===He.tokens.name){const e=He.tokens.name.rule.exec(t.lexeme);return e&&0==e.index&&e[0]==t.lexeme}return!1}_advance(){var e,t;return this._currentLine=null!==(t=null===(e=this._peek())||void 0===e?void 0:e.line)&&void 0!==t?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(He.tokens.semicolon)&&!this._isAtEnd(););if(this._match(He.keywords.alias)){const e=this._type_alias();return this._consume(He.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(He.keywords.diagnostic)){const e=this._diagnostic();return this._consume(He.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(He.keywords.requires)){const e=this._requires_directive();return this._consume(He.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(He.keywords.enable)){const e=this._enable_directive();return this._consume(He.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}const e=this._attribute();if(this._check(He.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(He.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(He.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(He.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(He.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(He.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(He.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(He.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(He.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(He.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(He.keywords.fn))return null;const e=this._currentLine,t=this._consume(He.tokens.ident,'Expected function name.').toString();this._consume(He.tokens.paren_left,'Expected \\'(\\' for function arguments.');const n=[];if(!this._check(He.tokens.paren_right))do{if(this._check(He.tokens.paren_right))break;const e=this._attribute(),t=this._consume(He.tokens.name,'Expected argument name.').toString();this._consume(He.tokens.colon,'Expected \\':\\' for argument type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s,n.push(this._updateNode(new $e(t,r,e))))}while(this._match(He.tokens.comma));this._consume(He.tokens.paren_right,'Expected \\')\\' after function arguments.');let s=null;if(this._match(He.tokens.arrow)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}const r=this._compound_statement(),a=this._currentLine;return this._updateNode(new D(t,n,s,r,e,a),e)}_compound_statement(){const e=[];for(this._consume(He.tokens.brace_left,'Expected \\'{\\' for block.');!this._check(He.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(He.tokens.brace_right,'Expected \\'}\\' for block.'),e}_statement(){for(;this._match(He.tokens.semicolon)&&!this._isAtEnd(););if(this._check(He.tokens.attr)&&this._attribute(),this._check(He.keywords.if))return this._if_statement();if(this._check(He.keywords.switch))return this._switch_statement();if(this._check(He.keywords.loop))return this._loop_statement();if(this._check(He.keywords.for))return this._for_statement();if(this._check(He.keywords.while))return this._while_statement();if(this._check(He.keywords.continuing))return this._continuing_statement();if(this._check(He.keywords.static_assert))return this._static_assert_statement();if(this._check(He.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(He.keywords.return))e=this._return_statement();else if(this._check([He.keywords.var,He.keywords.let,He.keywords.const]))e=this._variable_statement();else if(this._match(He.keywords.discard))e=this._updateNode(new ne);else if(this._match(He.keywords.break)){const t=this._updateNode(new se);if(this._currentLoop.length>0){const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t,this._check(He.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression())}else if(this._match(He.keywords.continue)){const t=this._updateNode(new re);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return null!=e&&this._consume(He.tokens.semicolon,'Expected \\';\\' after statement.'),e}_static_assert_statement(){if(!this._match(He.keywords.static_assert))return null;const e=this._currentLine,t=this._optional_paren_expression();return this._updateNode(new N(t),e)}_while_statement(){if(!this._match(He.keywords.while))return null;const e=this._updateNode(new V(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(He.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){const e=this._currentLoop.length>0?this._currentLoop[this._currentLoop.length-1].id:-1;if(!this._match(He.keywords.continuing))return null;const t=this._currentLine,n=this._compound_statement();return this._updateNode(new O(n,e),t)}_for_statement(){if(!this._match(He.keywords.for))return null;this._consume(He.tokens.paren_left,'Expected \\'(\\'.');const e=this._updateNode(new B(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(He.tokens.semicolon)?null:this._for_init(),this._consume(He.tokens.semicolon,'Expected \\';\\'.'),e.condition=this._check(He.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(He.tokens.semicolon,'Expected \\';\\'.'),e.increment=this._check(He.tokens.paren_right)?null:this._for_increment(),this._consume(He.tokens.paren_right,'Expected \\')\\'.'),this._check(He.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(He.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),'Variable declaration expected.');let t=null;return this._match(He.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new F(e.name,e.type,e.storage,e.access,t),e.line)}if(this._match(He.keywords.let)){const e=this._currentLine,t=this._consume(He.tokens.name,'Expected name for let.').toString();let n=null;if(this._match(He.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}this._consume(He.tokens.equal,'Expected \\'=\\' for let.');const s=this._short_circuit_or_expression();return this._updateNode(new U(t,n,null,null,s),e)}if(this._match(He.keywords.const)){const e=this._currentLine,t=this._consume(He.tokens.name,'Expected name for const.').toString();let n=null;if(this._match(He.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}this._consume(He.tokens.equal,'Expected \\'=\\' for const.');const s=this._short_circuit_or_expression();return null===n&&s instanceof xe&&(n=s.type),this._updateNode(new P(t,n,null,null,s),e)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(He.increment_operators))return this._current=e,null;const n=this._consume(He.increment_operators,'Expected increment operator');return this._updateNode(new R(n.type===He.tokens.plus_plus?W.increment:W.decrement,t))}_assignment_statement(){let e=null;const t=this._currentLine;if(this._check(He.tokens.brace_right))return null;let n=this._match(He.tokens.underscore);if(n||(e=this._unary_expression()),!n&&null==e)return null;const s=this._consume(He.assignment_operators,'Expected assignment operator.'),r=this._short_circuit_or_expression();return this._updateNode(new G(q.parse(s.lexeme),e,r),t)}_func_call_statement(){if(!this._check(He.tokens.ident))return null;const e=this._currentLine,t=this._current,n=this._consume(He.tokens.ident,'Expected function name.'),s=this._argument_expression_list();return null===s?(this._current=t,null):this._updateNode(new X(n.lexeme,s),e)}_loop_statement(){if(!this._match(He.keywords.loop))return null;this._check(He.tokens.attr)&&this._attribute(),this._consume(He.tokens.brace_left,'Expected \\'{\\' for loop.');const e=this._updateNode(new j([],null));this._currentLoop.push(e);let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof O){e.continuing=t;break}t=this._statement()}return this._currentLoop.pop(),this._consume(He.tokens.brace_right,'Expected \\'}\\' for loop.'),e}_switch_statement(){if(!this._match(He.keywords.switch))return null;const e=this._updateNode(new Z(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(He.tokens.attr)&&this._attribute(),this._consume(He.tokens.brace_left,'Expected \\'{\\' for switch.'),e.cases=this._switch_body(),null==e.cases||0==e.cases.length)throw this._error(this._previous(),'Expected \\'case\\' or \\'default\\'.');return this._consume(He.tokens.brace_right,'Expected \\'}\\' for switch.'),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=!1;for(;this._check([He.keywords.default,He.keywords.case]);){if(this._match(He.keywords.case)){const n=this._case_selectors();for(const e of n)if(e instanceof Se){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');t=!0;break}this._match(He.tokens.colon),this._check(He.tokens.attr)&&this._attribute(),this._consume(He.tokens.brace_left,'Exected \\'{\\' for switch case.');const s=this._case_body();this._consume(He.tokens.brace_right,'Exected \\'}\\' for switch case.'),e.push(this._updateNode(new Ae(n,s)))}if(this._match(He.keywords.default)){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');this._match(He.tokens.colon),this._check(He.tokens.attr)&&this._attribute(),this._consume(He.tokens.brace_left,'Exected \\'{\\' for switch default.');const n=this._case_body();this._consume(He.tokens.brace_right,'Exected \\'}\\' for switch default.'),e.push(this._updateNode(new Ee(n)))}}return e}_case_selectors(){const e=[];for(this._match(He.keywords.default)?e.push(this._updateNode(new Se)):e.push(this._shift_expression());this._match(He.tokens.comma);)this._match(He.keywords.default)?e.push(this._updateNode(new Se)):e.push(this._shift_expression());return e}_case_body(){if(this._match(He.keywords.fallthrough))return this._consume(He.tokens.semicolon,'Expected \\';\\''),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(He.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(He.tokens.attr)&&this._attribute();const n=this._compound_statement();let s=[];this._match_elseif()&&(this._check(He.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let r=null;return this._match(He.keywords.else)&&(this._check(He.tokens.attr)&&this._attribute(),r=this._compound_statement()),this._updateNode(new Q(t,n,s,r),e)}_match_elseif(){return this._tokens[this._current].type===He.keywords.else&&this._tokens[this._current+1].type===He.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new Le(t,n))),this._match_elseif()&&(this._check(He.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(He.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new Y(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(He.tokens.or_or);)e=this._updateNode(new Ie(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(He.tokens.and_and);)e=this._updateNode(new Ie(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(He.tokens.or);)e=this._updateNode(new Ie(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(He.tokens.xor);)e=this._updateNode(new Ie(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(He.tokens.and);)e=this._updateNode(new Ie(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([He.tokens.equal_equal,He.tokens.not_equal])?this._updateNode(new Ie(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([He.tokens.less_than,He.tokens.greater_than,He.tokens.less_than_equal,He.tokens.greater_than_equal]);)e=this._updateNode(new Ie(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([He.tokens.shift_left,He.tokens.shift_right]);)e=this._updateNode(new Ie(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([He.tokens.plus,He.tokens.minus]);)e=this._updateNode(new Ie(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([He.tokens.star,He.tokens.forward_slash,He.tokens.modulo]);)e=this._updateNode(new Ie(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([He.tokens.minus,He.tokens.bang,He.tokens.tilde,He.tokens.star,He.tokens.and])?this._updateNode(new ke(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(He.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(He.tokens.bracket_right,'Expected \\']\\'.');const t=this._updateNode(new ve(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(He.tokens.period)){const e=this._consume(He.tokens.name,'Expected member name.'),t=this._postfix_expression(),n=this._updateNode(new pe(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){if(this._context.aliases.has(e)){return this._context.aliases.get(e).type}if(this._context.structs.has(e)){return this._context.structs.get(e)}return null}_getType(e){const t=this._getStruct(e);if(null!==t)return t;switch(e){case'void':return ae.void;case'bool':return ae.bool;case'i32':return ae.i32;case'u32':return ae.u32;case'f32':return ae.f32;case'f16':return ae.f16;case'vec2f':return ce.vec2f;case'vec3f':return ce.vec3f;case'vec4f':return ce.vec4f;case'vec2i':return ce.vec2i;case'vec3i':return ce.vec3i;case'vec4i':return ce.vec4i;case'vec2u':return ce.vec2u;case'vec3u':return ce.vec3u;case'vec4u':return ce.vec4u;case'vec2h':return ce.vec2h;case'vec3h':return ce.vec3h;case'vec4h':return ce.vec4h;case'mat2x2f':return ce.mat2x2f;case'mat2x3f':return ce.mat2x3f;case'mat2x4f':return ce.mat2x4f;case'mat3x2f':return ce.mat3x2f;case'mat3x3f':return ce.mat3x3f;case'mat3x4f':return ce.mat3x4f;case'mat4x2f':return ce.mat4x2f;case'mat4x3f':return ce.mat4x3f;case'mat4x4f':return ce.mat4x4f;case'mat2x2h':return ce.mat2x2h;case'mat2x3h':return ce.mat2x3h;case'mat2x4h':return ce.mat2x4h;case'mat3x2h':return ce.mat3x2h;case'mat3x3h':return ce.mat3x3h;case'mat3x4h':return ce.mat3x4h;case'mat4x2h':return ce.mat4x2h;case'mat4x3h':return ce.mat4x3h;case'mat4x4h':return ce.mat4x4h;case'mat2x2i':return ce.mat2x2i;case'mat2x3i':return ce.mat2x3i;case'mat2x4i':return ce.mat2x4i;case'mat3x2i':return ce.mat3x2i;case'mat3x3i':return ce.mat3x3i;case'mat3x4i':return ce.mat3x4i;case'mat4x2i':return ce.mat4x2i;case'mat4x3i':return ce.mat4x3i;case'mat4x4i':return ce.mat4x4i;case'mat2x2u':return ce.mat2x2u;case'mat2x3u':return ce.mat2x3u;case'mat2x4u':return ce.mat2x4u;case'mat3x2u':return ce.mat3x2u;case'mat3x3u':return ce.mat3x3u;case'mat3x4u':return ce.mat3x4u;case'mat4x2u':return ce.mat4x2u;case'mat4x3u':return ce.mat4x3u;case'mat4x4u':return ce.mat4x4u}return null}_validateTypeRange(e,t){if('i32'===t.name){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if('u32'===t.name&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(He.tokens.ident)){const e=this._previous().toString();if(this._check(He.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getType(e);return null!==n?this._updateNode(new de(n,t)):this._updateNode(new me(e,t))}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return this._updateNode(new _e(e,t.value))}return this._updateNode(new ge(e))}if(this._match(He.tokens.int_literal)){const e=this._previous().toString();let t=e.endsWith('i')||e.endsWith('i')?ae.i32:e.endsWith('u')||e.endsWith('U')?ae.u32:ae.x32;const n=parseInt(e);return this._validateTypeRange(n,t),this._updateNode(new xe(new Be(n,this._exec.getTypeInfo(t)),t))}if(this._match(He.tokens.uint_literal)){const e=parseInt(this._previous().toString());return this._validateTypeRange(e,ae.u32),this._updateNode(new xe(new Be(e,this._exec.getTypeInfo(ae.u32)),ae.u32))}if(this._match([He.tokens.decimal_float_literal,He.tokens.hex_float_literal])){let e=this._previous().toString(),t=e.endsWith('h');t&&(e=e.substring(0,e.length-1));const n=parseFloat(e);this._validateTypeRange(n,t?ae.f16:ae.f32);const s=t?ae.f16:ae.f32;return this._updateNode(new xe(new Be(n,this._exec.getTypeInfo(s)),s))}if(this._match([He.keywords.true,He.keywords.false])){let e=this._previous().toString()===He.keywords.true.rule;return this._updateNode(new xe(new Be(e?1:0,this._exec.getTypeInfo(ae.bool)),ae.bool))}if(this._check(He.tokens.paren_left))return this._paren_expression();if(this._match(He.keywords.bitcast)){this._consume(He.tokens.less_than,'Expected \\'<\\'.');const e=this._type_decl();this._consume(He.tokens.greater_than,'Expected \\'>\\'.');const t=this._paren_expression();return this._updateNode(new ye(e,t))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new de(e,t))}_argument_expression_list(){if(!this._match(He.tokens.paren_left))return null;const e=[];do{if(this._check(He.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(He.tokens.comma));return this._consume(He.tokens.paren_right,'Expected \\')\\' for agument list'),e}_optional_paren_expression(){this._match(He.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(He.tokens.paren_right),e}_paren_expression(){this._consume(He.tokens.paren_left,'Expected \\'(\\'.');const e=this._short_circuit_or_expression();return this._consume(He.tokens.paren_right,'Expected \\')\\'.'),e}_struct_decl(){if(!this._match(He.keywords.struct))return null;const e=this._currentLine,t=this._consume(He.tokens.ident,'Expected name for struct.').toString();this._consume(He.tokens.brace_left,'Expected \\'{\\' for struct body.');const n=[];for(;!this._check(He.tokens.brace_right);){const e=this._attribute(),t=this._consume(He.tokens.name,'Expected variable name.').toString();this._consume(He.tokens.colon,'Expected \\':\\' for struct member type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s),this._check(He.tokens.brace_right)?this._match(He.tokens.comma):this._consume(He.tokens.comma,'Expected \\',\\' for struct member.'),n.push(this._updateNode(new Ce(t,r,e)))}this._consume(He.tokens.brace_right,'Expected \\'}\\' after struct body.');const s=this._currentLine,r=this._updateNode(new oe(t,n,e,s),e);return this._context.structs.set(t,r),r}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(He.tokens.equal)){const t=this._const_expression();e.value=t}if(null!==e.type&&e.value instanceof xe){if('x32'!==e.value.type.name){if(e.type.getTypeName()!==e.value.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`)}e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type}else null===e.type&&e.value instanceof xe&&(e.type='x32'===e.value.type.name?ae.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(He.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(He.keywords.const))return null;const t=this._consume(He.tokens.name,'Expected variable name'),n=this._currentLine;let s=null;if(this._match(He.tokens.colon)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}let r=null;this._consume(He.tokens.equal,'const declarations require an assignment');const i=this._short_circuit_or_expression();try{let e=[ae.f32],n=i.constEvaluate(this._exec,e);n instanceof Be&&this._validateTypeRange(n.value,e[0]),e[0]instanceof ce&&null===e[0].format&&n.typeInfo instanceof a&&null!==n.typeInfo.format&&('f16'===n.typeInfo.format.name?e[0].format=ae.f16:'f32'===n.typeInfo.format.name?e[0].format=ae.f32:'i32'===n.typeInfo.format.name?e[0].format=ae.i32:'u32'===n.typeInfo.format.name?e[0].format=ae.u32:'bool'===n.typeInfo.format.name?e[0].format=ae.bool:console.error(`TODO: impelement template format type ${n.typeInfo.format.name}`)),r=this._updateNode(new xe(n,e[0])),this._exec.context.setVariable(t.toString(),n)}catch(e){r=i}if(null!==s&&r instanceof xe){if('x32'!==r.type.name){if(s.getTypeName()!==r.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${r.type.name} to ${s.name}. Line:${this._currentLine}`)}r.type=s,r.isScalar&&this._validateTypeRange(r.scalarValue,r.type)}else null===s&&r instanceof xe&&(s=null!==(e=null==r?void 0:r.type)&&void 0!==e?e:ae.f32,s===ae.x32&&(s=ae.i32));const o=this._updateNode(new P(t.toString(),s,'','',r),n);return this._context.constants.set(o.name,o),o}_global_let_decl(){if(!this._match(He.keywords.let))return null;const e=this._currentLine,t=this._consume(He.tokens.name,'Expected variable name');let n=null;if(this._match(He.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}let s=null;if(this._match(He.tokens.equal)&&(s=this._const_expression()),null!==n&&s instanceof xe){if('x32'!==s.type.name){if(n.getTypeName()!==s.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`)}s.type=n}else null===n&&s instanceof xe&&(n='x32'===s.type.name?ae.i32:s.type);return s instanceof xe&&s.isScalar&&this._validateTypeRange(s.scalarValue,n),this._updateNode(new U(t.toString(),n,'','',s),e)}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(He.keywords.var))return null;const e=this._currentLine;let t='',n='';this._match(He.tokens.less_than)&&(t=this._consume(He.storage_class,'Expected storage_class.').toString(),this._match(He.tokens.comma)&&(n=this._consume(He.access_mode,'Expected access_mode.').toString()),this._consume(He.tokens.greater_than,'Expected \\'>\\'.'));const s=this._consume(He.tokens.name,'Expected variable name');let r=null;if(this._match(He.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}return this._updateNode(new F(s.toString(),r,t,n,null),e)}_override_decl(){if(!this._match(He.keywords.override))return null;const e=this._consume(He.tokens.name,'Expected variable name');let t=null;if(this._match(He.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return this._updateNode(new M(e.toString(),t,null))}_diagnostic(){this._consume(He.tokens.paren_left,'Expected \\'(\\'');const e=this._consume(He.tokens.ident,'Expected severity control name.');this._consume(He.tokens.comma,'Expected \\',\\'');let t=this._consume(He.tokens.ident,'Expected diagnostic rule name.').toString();if(this._match(He.tokens.period)){t+=`.${this._consume(He.tokens.ident,'Expected diagnostic message.').toString()}`}return this._consume(He.tokens.paren_right,'Expected \\')\\''),this._updateNode(new ee(e.toString(),t))}_enable_directive(){const e=this._consume(He.tokens.ident,'identity expected.');return this._updateNode(new K(e.toString()))}_requires_directive(){const e=[this._consume(He.tokens.ident,'identity expected.').toString()];for(;this._match(He.tokens.comma);){const t=this._consume(He.tokens.ident,'identity expected.');e.push(t.toString())}return this._updateNode(new J(e))}_type_alias(){const e=this._consume(He.tokens.ident,'identity expected.');this._consume(He.tokens.equal,'Expected \\'=\\' for type alias.');let t=this._type_decl();if(null===t)throw this._error(this._peek(),'Expected Type for Alias.');this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new te(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([He.tokens.ident,...He.texel_format,He.keywords.bool,He.keywords.f32,He.keywords.i32,He.keywords.u32])){const e=this._advance().toString();if(this._context.structs.has(e))return this._context.structs.get(e);if(this._context.aliases.has(e))return this._context.aliases.get(e).type;if(!this._getType(e)){const t=this._updateNode(new ie(e));return this._forwardTypeCount++,t}return this._updateNode(new ae(e))}let e=this._texture_sampler_types();if(e)return e;if(this._check(He.template_types)){let e=this._advance().toString(),t=null,n=null;this._match(He.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(He.tokens.comma)&&(n=this._consume(He.access_mode,'Expected access_mode for pointer').toString()),this._consume(He.tokens.greater_than,'Expected \\'>\\' for type.'));return this._updateNode(new ce(e,t,n))}if(this._match(He.keywords.ptr)){let e=this._previous().toString();this._consume(He.tokens.less_than,'Expected \\'<\\' for pointer.');const t=this._consume(He.storage_class,'Expected storage_class for pointer');this._consume(He.tokens.comma,'Expected \\',\\' for pointer.');const n=this._type_decl();let s=null;this._match(He.tokens.comma)&&(s=this._consume(He.access_mode,'Expected access_mode for pointer').toString()),this._consume(He.tokens.greater_than,'Expected \\'>\\' for pointer.');return this._updateNode(new le(e,t.toString(),n,s))}const t=this._attribute();if(this._match(He.keywords.array)){let e=null,n=-1;const s=this._previous();let r=null;if(this._match(He.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t='';if(this._match(He.tokens.comma)){r=this._shift_expression();try{t=r.constEvaluate(this._exec).toString(),r=null}catch(e){t='1'}}this._consume(He.tokens.greater_than,'Expected \\'>\\' for array.'),n=t?parseInt(t):0}const a=this._updateNode(new ue(s.toString(),t,e,n));return r&&this._deferArrayCountEval.push({arrayType:a,countNode:r}),a}return null}_texture_sampler_types(){if(this._match(He.sampler_type))return this._updateNode(new he(this._previous().toString(),null,null));if(this._match(He.depth_texture_type))return this._updateNode(new he(this._previous().toString(),null,null));if(this._match(He.sampled_texture_type)||this._match(He.multisampled_texture_type)){const e=this._previous();this._consume(He.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._type_decl();return this._consume(He.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new he(e.toString(),t,null))}if(this._match(He.storage_texture_type)){const e=this._previous();this._consume(He.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._consume(He.texel_format,'Invalid texel format.').toString();this._consume(He.tokens.comma,'Expected \\',\\' after texel format.');const n=this._consume(He.access_mode,'Expected access mode for storage texture type.').toString();return this._consume(He.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new he(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(He.tokens.attr);){const t=this._consume(He.attribute_name,'Expected attribute name'),n=this._updateNode(new De(t.toString(),null));if(this._match(He.tokens.paren_left)){if(n.value=this._consume(He.literal_or_ident,'Expected attribute value').toString(),this._check(He.tokens.comma)){this._advance();do{const e=this._consume(He.literal_or_ident,'Expected attribute value').toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(He.tokens.comma))}this._consume(He.tokens.paren_right,'Expected \\')\\'')}e.push(n)}return 0==e.length?null:e}}class _t extends at{constructor(e){super(),e&&this.update(e)}update(e){const t=(new gt).parse(e);this.updateAST(t)}}class xt{get line(){return-1}}class yt extends xt{constructor(e){super(),this.node=e}get line(){return this.node.line}}class bt extends xt{constructor(e,t){super(),this.node=e,this.statement=t}get line(){return this.statement.line}}class vt extends xt{constructor(e){super(),this.id=e}}class wt extends xt{constructor(e){super(),this.id=e}}class kt extends xt{constructor(e,t){super(),this.id=e,this.node=t}get line(){return this.node.line}}class It extends xt{constructor(e,t,n){super(),this.id=e,this.condition=t,this.node=n}get line(){return this.node.line}}class Tt extends xt{constructor(e,t,n){super(),this.lineNo=-1,this.condition=e,this.position=t,this.lineNo=n}get line(){var e,t;return null!==(t=null===(e=this.condition)||void 0===e?void 0:e.line)&&void 0!==t?t:this.lineNo}}class St extends xt{constructor(e){super(),this.statements=[],this.statements=e}get line(){return this.statements.length>0?this.statements[0].line:-1}}class At{constructor(e,t){this.parent=null,this.commands=[],this.current=0,this.parentCallExpr=null,this.context=e,this.parent=null!=t?t:null}get isAtEnd(){return this.current>=this.commands.length}getNextCommand(){if(this.current>=this.commands.length)return null;const e=this.commands[this.current];return this.current++,e}getCurrentCommand(){return this.current>=this.commands.length?null:this.commands[this.current]}}class Et{constructor(){this.states=[]}get isEmpty(){return 0==this.states.length}get last(){var e;return null!==(e=this.states[this.states.length-1])&&void 0!==e?e:null}pop(){this.states.pop()}}class $t{constructor(e,t){this._runTimer=null,this.breakpoints=new Set,this.runStateCallback=null,this._code=e;const n=(new gt).parse(e);this._exec=new dt(n),this.runStateCallback=null!=t?t:null}getVariableValue(e){var t,n;const s=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;return null===s?null:s instanceof Be?s.value:s instanceof Me||s instanceof Ue?Array.from(s.data):(console.error(`Unsupported return variable type ${s.typeInfo.name}`),null)}reset(){this._exec=new dt(this._exec.ast),this.startDebug()}startDebug(){this._execStack=new Et;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}get context(){const e=this.currentState;return null===e?this._exec.context:e.context}get currentState(){for(;;){if(this._execStack.isEmpty)return null;let e=this._execStack.last;if(null===e)return null;if(e.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return null;e=this._execStack.last}return e}}get currentCommand(){for(;;){if(this._execStack.isEmpty)return null;let e=this._execStack.last;if(null===e)return null;if(e.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return null;e=this._execStack.last}const t=e.getCurrentCommand();if(null!==t)return t}}toggleBreakpoint(e){this.breakpoints.has(e)?this.breakpoints.delete(e):this.breakpoints.add(e)}clearBreakpoints(){this.breakpoints.clear()}get isRunning(){return null!==this._runTimer}run(){this.isRunning||(this._runTimer=setInterval(()=>{const e=this.currentCommand;if(e&&this.breakpoints.has(e.line))return clearInterval(this._runTimer),this._runTimer=null,void(null!==this.runStateCallback&&this.runStateCallback());this.stepNext(!0)||(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())},0),null!==this.runStateCallback&&this.runStateCallback())}pause(){null!==this._runTimer&&(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}_setOverrides(e,t){for(const n in e){const s=e[n],r=this._exec.reflection.getOverrideInfo(n);null!==r?(null===r.type&&(r.type=this._exec.getTypeInfo('u32')),'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new Be(s,r.type)):'bool'===r.type.name?t.setVariable(n,new Be(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Me(s,r.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`)}}debugWorkgroup(e,t,n,s,r){this._execStack=new Et;const a=this._exec.context;a.currentFunctionName=e,this._dispatchId=t,(r=null!=r?r:{}).constants&&this._setOverrides(r.constants,a),this._exec._execStatements(this._exec.ast,a);const i=a.getFunction(e);if(!i)return console.error(`Function ${e} not found`),!1;const o=this._exec.reflection.getFunctionInfo(e);if('number'==typeof n)n=[n,1,1];else{if(0===n.length)return console.error('Invalid dispatch count'),!1;1===n.length?n=[n[0],1,1]:2===n.length?n=[n[0],n[1],1]:n.length>3&&(n=[n[0],n[1],n[2]])}const c=n[2],l=n[1],u=n[0],h=this._exec.typeInfo.vec3u;a.setVariable('@num_workgroups',new Me(n,h));for(const e in s)for(const t in s[e]){const n=s[e][t];a.variables.forEach(s=>{var r;const a=s.node;if(null==a?void 0:a.attributes){let i=null,c=null;for(const e of a.attributes)'binding'===e.name?i=e.value:'group'===e.name&&(c=e.value);if(t==i&&e==c){let i=!1;for(const n of o.resources)if(n.name===s.name&&n.group===parseInt(e)&&n.binding===parseInt(t)){i=!0;break}if(i)if(void 0!==n.texture&&void 0!==n.descriptor){const e=new We(n.texture,this._exec.getTypeInfo(a.type),n.descriptor,null!==(r=n.texture.view)&&void 0!==r?r:null);s.value=e}else void 0!==n.uniform?s.value=new Pe(n.uniform,this._exec.getTypeInfo(a.type)):s.value=new Pe(n,this._exec.getTypeInfo(a.type))}}})}let f=!1;for(let e=0;e<c&&!f;++e)for(let t=0;t<l&&!f;++t)for(let n=0;n<u&&!f;++n)if(a.setVariable('@workgroup_id',new Me([n,t,e],h)),this._dispatchWorkgroup(i,[n,t,e],a)){f=!0;break}return f}_shouldExecuteNextCommand(){const e=this.currentCommand;if(null===e)return!1;if(e instanceof Tt){if(null===e.condition)return!0}else if(e instanceof vt||e instanceof wt)return!0;return!1}stepInto(){this.isRunning||this.stepNext(!0)}stepOver(){this.isRunning||this.stepNext(!1)}stepOut(){const e=this.currentState;if(null===e)return;const t=e.parent;this.isRunning&&(clearInterval(this._runTimer),this._runTimer=null),this._runTimer=setInterval(()=>{const e=this.currentCommand;if(e&&this.breakpoints.has(e.line))return clearInterval(this._runTimer),this._runTimer=null,void(null!==this.runStateCallback&&this.runStateCallback());this.stepNext(!0)||(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback());this.currentState===t&&(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())},0),null!==this.runStateCallback&&this.runStateCallback()}stepNext(e=!0){if(!this._execStack){this._execStack=new Et;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}for(;;){if(this._execStack.isEmpty)return!1;let t=this._execStack.last;if(null===t)return!1;if(t.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return!1;t=this._execStack.last}const n=t.getNextCommand();if(null!==n){if(e&&n instanceof bt){const e=n.node,s=t.context.getFunction(e.name);if(!s)continue;const r=this._createState(s.node.body,t.context.clone(),t);for(let t=0;t<s.node.args.length;++t){const n=s.node.args[t],a=this._exec.evalExpression(e.args[t],r.context);r.context.createVariable(n.name,a,n)}if(r.parentCallExpr=e,this._execStack.states.push(r),r.context.currentFunctionName=s.name,this._shouldExecuteNextCommand())continue;return!0}if(n instanceof yt){const s=n.node;if(e&&s instanceof X){const e=t.context.getFunction(s.name);if(e){const n=this._createState(e.node.body,t.context.clone(),t);for(let t=0;t<e.node.args.length;++t){const r=e.node.args[t],a=this._exec.evalExpression(s.args[t],n.context);n.context.createVariable(r.name,a,r)}if(this._execStack.states.push(n),n.context.currentFunctionName=e.name,this._shouldExecuteNextCommand())continue;return!0}}const r=this._exec.execStatement(s,t.context);if(null!=r&&!(r instanceof Ve)){let e=t;for(;e;){if(e.parentCallExpr){e.parentCallExpr.setCachedReturnValue(r);break}e=e.parent}if(null===e&&console.error('Could not find CallExpr to store return value in'),this._shouldExecuteNextCommand())continue;return!0}}else{if(n instanceof vt)continue;if(n instanceof wt)continue;if(n instanceof kt){const e=n.id;for(;!this._execStack.isEmpty;){t=this._execStack.last;for(let n=t.commands.length-1;n>=0;--n){const s=t.commands[n];if(s instanceof vt&&s.id===e)return t.current=n+1,!0}this._execStack.pop()}return console.error('Continue statement used outside of a loop'),!1}if(n instanceof It){const e=n.id;if(n.condition){const e=this._exec.evalExpression(n.condition,t.context);if(!(e instanceof Be))return console.error('Condition must be a scalar'),!1;if(!e.value){if(this._shouldExecuteNextCommand())continue;return!0}}for(;!this._execStack.isEmpty;){t=this._execStack.last;for(let n=t.commands.length-1;n>=0;--n){const s=t.commands[n];if(s instanceof wt&&s.id===e)return t.current=n+1,!0}this._execStack.pop()}return console.error('Break statement used outside of a loop'),!1}if(n instanceof Tt){if(n.condition){const e=this._exec.evalExpression(n.condition,t.context);if(!(e instanceof Be))return console.error('Condition must be a scalar'),!1;if(e.value){if(this._shouldExecuteNextCommand())continue;return!0}}if(t.current=n.position,this._shouldExecuteNextCommand())continue;return!0}if(n instanceof St){const e=this._createState(n.statements,t.context.clone(),t);this._execStack.states.push(e);continue}}if(t.isAtEnd&&(this._execStack.pop(),this._execStack.isEmpty))return!1;if(!this._shouldExecuteNextCommand())return!0}}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name)if(Array.isArray(t.value)){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof Be?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof Be?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof Be?e.value:parseInt(t.value[2])}}else{const e=n.getVariableValue(t.value);e instanceof Be?s[0]=e.value:e instanceof Me?(s[0]=e.data[0],s[1]=e.data.length>1?e.data[1]:1,s[2]=e.data.length>2?e.data[2]:1):s[0]=parseInt(t.value)}const r=this._exec.typeInfo.vec3u,a=this._exec.typeInfo.u32;n.setVariable('@workgroup_size',new Me(s,r));const i=s[0],o=s[1],c=s[2];let l=!1;for(let e=0,u=0;e<c&&!l;++e)for(let c=0;c<o&&!l;++c)for(let o=0;o<i&&!l;++o,++u){const i=[o,c,e],h=[o+t[0]*s[0],c+t[1]*s[1],e+t[2]*s[2]];if(n.setVariable('@local_invocation_id',new Me(i,r)),n.setVariable('@global_invocation_id',new Me(h,r)),n.setVariable('@local_invocation_index',new Be(u,a)),h[0]===this._dispatchId[0]&&h[1]===this._dispatchId[1]&&h[2]===this._dispatchId[2]){l=!0;break}}return l&&this._dispatchExec(e,n),l}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);null!==r&&t.variables.set(n.name,r)}const n=this._createState(e.node.body,t);this._execStack.states.push(n)}_createState(e,t,n){const s=new At(t,null!=n?n:null);for(const t of e)if(t instanceof U||t instanceof F||t instanceof P||t instanceof G){const e=[];this._collectFunctionCalls(t.value,e);for(const n of e)s.commands.push(new bt(n,t));s.commands.push(new yt(t))}else if(t instanceof X){const e=[];for(const n of t.args)this._collectFunctionCalls(n,e);for(const n of e)s.commands.push(new bt(n,t));s.commands.push(new yt(t))}else if(t instanceof Y){const e=[];this._collectFunctionCalls(t.value,e);for(const n of e)s.commands.push(new bt(n,t));s.commands.push(new yt(t))}else if(t instanceof R)s.commands.push(new yt(t));else{if(t instanceof D){const e=new ct(t);s.context.functions.set(t.name,e);continue}if(t instanceof Q){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new bt(n,t));let n=new Tt(t.condition,0,t.line);s.commands.push(n),t.body.length>0&&s.commands.push(new St(t.body));const r=new Tt(null,0,t.line);s.commands.push(r);for(const e of t.elseif){n.position=s.commands.length;const a=[];this._collectFunctionCalls(e.condition,a);for(const e of a)s.commands.push(new bt(e,t));n=new Tt(e.condition,0,e.line),s.commands.push(n),e.body.length>0&&s.commands.push(new St(e.body)),s.commands.push(r)}n.position=s.commands.length,t.else&&s.commands.push(new St(t.else)),r.position=s.commands.length}else if(t instanceof Z){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new bt(n,t));let n=null;for(const e of t.cases){if(e instanceof Ee){n=e;break}if(e instanceof Ae)for(const t of e.selectors)if(t instanceof Se){n=e;break}}const r=[];for(const e of t.cases){if(e===n)continue;if(!(e instanceof Ae))continue;let a=null;for(const n of e.selectors){let e=new Ie('==',t.condition,n);a&&(e=new Ie('||',a,e)),a=e}const i=new Tt(a,0,e.line);s.commands.push(i),e.body.length>0&&s.commands.push(new St(e.body));const o=new Tt(null,0,e.line);r.push(o),s.commands.push(o),i.position=s.commands.length}n&&s.commands.push(new St(n.body)),s.commands.push(new wt(t.id));const a=s.commands.length;for(let e=0;e<r.length;++e)r[e].position=a}else if(t instanceof V){const e=[];s.commands.push(new vt(t.id)),this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new bt(n,t));const n=new Tt(t.condition,0,t.line);s.commands.push(n);let r=t.line;t.body.length>0&&(s.commands.push(new St(t.body)),r=t.body[t.body.length-1].line),s.commands.push(new Tt(t.condition,0,r)),s.commands.push(new wt(t.id)),n.position=s.commands.length}else if(t instanceof B){t.init&&s.commands.push(new yt(t.init));let e=s.commands.length;null===t.increment&&s.commands.push(new vt(t.id));let n=null;if(t.condition){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new bt(n,t));n=new Tt(t.condition,0,t.line),s.commands.push(n)}let r=t.line;t.body.length>0&&(s.commands.push(new St(t.body)),r=t.body[t.body.length-1].line),t.increment&&(s.commands.push(new vt(t.id)),s.commands.push(new yt(t.increment))),s.commands.push(new Tt(null,e,r)),s.commands.push(new wt(t.id)),n.position=s.commands.length}else if(t instanceof j){let e=s.commands.length;t.continuing||s.commands.push(new vt(t.id));let n=t.line;t.body.length>0&&(s.commands.push(new St(t.body)),n=t.body[t.body.length-1].line),s.commands.push(new Tt(null,e,n)),s.commands.push(new wt(t.id))}else t instanceof O?(s.commands.push(new vt(t.loopId)),s.commands.push(new St(t.body))):t instanceof re?s.commands.push(new kt(t.loopId,t)):t instanceof se?s.commands.push(new It(t.loopId,t.condition,t)):t instanceof N?s.commands.push(new yt(t)):t instanceof oe||console.error(`TODO: statement type ${t.constructor.name}`)}return s}_collectFunctionCalls(e,t){if(e instanceof me){if(e.args)for(const n of e.args)this._collectFunctionCalls(n,t);e.isBuiltin||t.push(e)}else if(e instanceof Ie)this._collectFunctionCalls(e.left,t),this._collectFunctionCalls(e.right,t);else if(e instanceof ke)this._collectFunctionCalls(e.right,t);else if(e instanceof de){if(e.args)for(const n of e.args)this._collectFunctionCalls(n,t)}else e instanceof ye?this._collectFunctionCalls(e.value,t):e instanceof ve?this._collectFunctionCalls(e.index,t):xe||console.error(`TODO: expression type ${e.constructor.name}`)}}export{te as Alias,c as AliasInfo,$e as Argument,f as ArgumentInfo,ve as ArrayIndex,s as ArrayInfo,ue as ArrayType,G as Assign,q as AssignOperator,De as Attribute,Ie as BinaryOperator,ye as BitcastExpr,se as Break,X as Call,me as CallExpr,Ae as Case,P as Const,_e as ConstExpr,re as Continue,O as Continuing,de as CreateExpr,Ne as Data,Ee as Default,Se as DefaultSelector,ee as Diagnostic,ne as Discard,Le as ElseIf,K as Enable,d as EntryFunctions,fe as Expression,B as For,ie as ForwardType,D as Function,p as FunctionInfo,Q as If,R as Increment,W as IncrementOperator,l as InputInfo,U as Let,xe as LiteralExpr,j as Loop,Ue as MatrixData,Ce as Member,t as MemberInfo,A as Node,we as Operator,u as OutputInfo,M as Override,h as OverrideInfo,Oe as PointerData,r as PointerInfo,le as PointerType,J as Requires,i as ResourceType,Y as Return,he as SamplerType,Be as ScalarData,C as Statement,N as StaticAssert,pe as StringExpr,oe as Struct,n as StructInfo,Z as Switch,Te as SwitchCase,a as TemplateInfo,ce as TemplateType,We as TextureData,ze as Token,z as TokenClass,qe as TokenType,He as TokenTypes,ae as Type,e as TypeInfo,be as TypecastExpr,Pe as TypedData,ke as UnaryOperator,F as Var,ge as VariableExpr,o as VariableInfo,Me as VectorData,Ve as VoidData,$t as WgslDebug,dt as WgslExec,gt as WgslParser,_t as WgslReflect,Re as WgslScanner,V as While,$ as _BlockEnd,E as _BlockStart};\n//# sourceMappingURL=wgsl_reflect.module.js.map\n","import { ArgumentInfo, ArrayInfo, Attribute, MemberInfo, ResourceType, TypeInfo, WgslReflect } from \"wgsl_reflect\";\r\n\r\nexport { WgslReflect, ResourceType,TypeInfo };\r\nexport function parseTypeName(type: TypeInfo) {\r\n    return type.name + ((type as ArrayInfo).format ? `<${parseTypeName((type as ArrayInfo).format)}${(type as ArrayInfo).count ? \",\" + (type as ArrayInfo).count : \"\"}>` : \"\");\r\n}\r\nexport function parseAttr(attrs: Array<Attribute>) {\r\n    // todo: match just one attribute\r\n    return attrs ? Array.from(new Set(attrs.map(a => a.name + (a.value ? `(${a.value})` : \"\")))).join(\" \") : \"\";\r\n}\r\nexport function getFnInputAndOutput(\r\n    reflect: WgslReflect, fn: ReturnType<WgslReflect[\"_functions\"][\"get\"]>,\r\n    expectInput: { [name: string]: string }, expectOutput: string[]\r\n) {\r\n    let input: Set<string> = new Set();\r\n    let output: { [name: string]: string | { expr: string, type: string } } = {\r\n        \"return\": \"_ouput_of_\" + fn.node.name\r\n    };\r\n    let call = `\r\n                let _ouput_of_${fn.node.name} = ${fn.node.name}(${fn.node.args.map(a => getInput(a as any as ArgumentInfo)).join(\", \")});\r\n                `;\r\n    getOutput(fn.node.returnType as any as TypeInfo, \"_ouput_of_\" + fn.node.name);\r\n    return { input, call, output: output as { [name: string]: { expr: string, type: string } } };\r\n\r\n    function getInput(arg: ArgumentInfo | MemberInfo) {\r\n        let attr = parseAttr(arg.attributes ? arg.attributes.concat(arg.type.attributes ?? []) : arg.type.attributes);\r\n        let varName = expectInput[attr];\r\n        if (varName) {\r\n            input.add(attr);\r\n            return varName;\r\n        } else {\r\n            let struct = reflect.structs.filter(s => s.name === arg.type.name)[0];\r\n            if (!struct) {\r\n                console.error(\"invalid entry point function args\");\r\n            }\r\n            let str = arg.type.name + \"(\";\r\n            for (let m of struct.members) {\r\n                str += getInput(m) + \",\";\r\n            }\r\n            str += \")\";\r\n            return str;\r\n        }\r\n    }\r\n    function getOutput(type: TypeInfo, prefix: string) {\r\n        let varName = parseAttr(type.attributes);\r\n        if (expectOutput.includes(varName)) {\r\n            output[varName] = {\r\n                expr: prefix,\r\n                type: parseTypeName(type)\r\n            }; return;\r\n        } else {\r\n            let struct = reflect.structs.filter(s => s.name === type.name)[0];\r\n            if (!struct) { return; }\r\n            for (let m of struct.members) {\r\n                if (m.attributes) {\r\n                    m.type.attributes = m.type.attributes ? m.type.attributes : m.attributes;\r\n                }\r\n                getOutput(m.type, prefix + \".\" + m.name);\r\n            }\r\n        }\r\n    }\r\n}","\r\nimport { GPU } from \"../gpu.js\";\r\nimport { InternalSliceRendererConfig, RetinaSliceBufferMgr, TetraSliceBufferMgr } from \"./renderer.js\";\r\nimport { RaytracingPipelineDescriptor, TetraSlicePipelineDescriptor } from \"./interfaces.js\";\r\nimport { getFnInputAndOutput, parseAttr, parseTypeName, ResourceType, TypeInfo, WgslReflect } from \"../wgsl.js\";\r\n\r\nconst tetraSliceBindGroup0declareIndex = 3;\r\nexport const refacingMatsCode = `\r\nconst tsx_refacingMats = array<mat4x4<f32>,6>(\r\n// +z\r\nmat4x4<f32>(\r\n1,0,0,0,\r\n0,1,0,0,\r\n0,0,1,0,\r\n0,0,0,1,\r\n),\r\n// -z\r\nmat4x4<f32>(\r\n1,0,0,0,\r\n0,1,0,0,\r\n0,0,-1,0,\r\n0,0,0,1,\r\n),\r\n// +y\r\nmat4x4<f32>(\r\n1,0,0,0,\r\n0,0,1,0,\r\n0,1,0,0,\r\n0,0,0,1,\r\n),\r\n// -y\r\nmat4x4<f32>(\r\n1,0,0,0,\r\n0,0,-1,0,\r\n0,-1,0,0,\r\n0,0,0,1,\r\n),\r\n// +x\r\nmat4x4<f32>(\r\n0,0,1,0,\r\n0,1,0,0,\r\n1,0,0,0,\r\n0,0,0,1,\r\n),\r\n// -x\r\nmat4x4<f32>(\r\n0,0,-1,0,\r\n0,1,0,0,\r\n-1,0,0,0,\r\n0,0,0,1,\r\n),\r\n);\r\nconst determinantRefacingMats = array<f32,6>(1,-1,-1,-1,-1,-1);\r\n`;\r\nexport const StructDefSliceInfo = `\r\nstruct tsxSliceInfo{\r\n    slicePos: f32, refacing: u32, flag: u32, viewport: u32,\r\n}`;\r\nexport const StructDefUniformBuffer = `\r\nstruct tsxUniformBuffer{\r\n    retinaMV: mat4x4<f32>, retinaP: mat4x4<f32>, camProj: vec4<f32>,\r\n    eyeCross: vec3<f32>, sliceOffset: u32, refacing: u32, screenAspect: f32, layerOpacity: f32,\r\n}`;\r\nconst expectTetraSlicePipelineInput = {\r\n    \"location(0)\": \"_attribute0[tetraIndex]\",\r\n    \"location(1)\": \"_attribute1[tetraIndex]\",\r\n    \"location(2)\": \"_attribute2[tetraIndex]\",\r\n    \"location(3)\": \"_attribute3[tetraIndex]\",\r\n    \"location(4)\": \"_attribute4[tetraIndex]\",\r\n    \"location(5)\": \"_attribute5[tetraIndex]\",\r\n    \"builtin(instance_index)\": \"instanceIndex\",\r\n    \"builtin(tetra_index)\": \"tetraIndex\",\r\n}\r\nconst expectTetraSlicePipelineOutput = [\r\n    \"location(0)\", \"location(1)\", \"location(2)\", \"location(3)\", \"location(4)\", \"location(5)\",\r\n    \"builtin(position)\"\r\n];\r\nexport class TetraSlicePipeline {\r\n    computePipeline: GPUComputePipeline;\r\n    computeBindGroup0: GPUBindGroup;\r\n    renderPipeline: GPURenderPipeline;\r\n    outputVaryBuffer: GPUBuffer[];\r\n    vertexOutNum: number;\r\n    private reflect: WgslReflect;\r\n    private gpu: GPU;\r\n    private device: GPUDevice;\r\n    private crossComputeShaderModule: GPUShaderModule;\r\n    private fragmentShaderModule: GPUShaderModule;\r\n    descriptor: TetraSlicePipelineDescriptor;\r\n    getCompilationInfo() {\r\n        return { tetra: this.crossComputeShaderModule?.getCompilationInfo(), fragment: this.fragmentShaderModule?.getCompilationInfo() };\r\n    }\r\n    async init(gpu: GPU, config: InternalSliceRendererConfig, descriptor: TetraSlicePipelineDescriptor, tetrasliceBufferMgr: TetraSliceBufferMgr) {\r\n        this.gpu = gpu;\r\n        this.device = gpu.device;\r\n        this.descriptor = descriptor;\r\n        let vertexState = descriptor.vertex;\r\n        this.reflect = new WgslReflect(vertexState.code);\r\n        let mainFn = this.reflect._functions.get(vertexState.entryPoint);\r\n        if (!mainFn || mainFn.node.attributes?.[0].name !== \"tetra\") console.error(\"Tetra vertex shader entry Point function not found\");\r\n\r\n        let { input, output, call } = getFnInputAndOutput(this.reflect, mainFn, expectTetraSlicePipelineInput, expectTetraSlicePipelineOutput);\r\n        let layout = this.getBindGroupLayout(output);\r\n        // compute pipeline\r\n        let computeGroup0Buffers = tetrasliceBufferMgr.buffers.slice(0);\r\n        let bindGroup0declare = '';\r\n        let varInterpolate = \"\";\r\n        let emitOutput1 = \"\";\r\n        let emitOutput2 = \"\";\r\n\r\n        // render pipeline\r\n        let vinputVert = '';\r\n        let voutputVert = '';\r\n        let vcallVert = \"\";\r\n        let vertexBufferAttributes: GPUVertexBufferLayout[] = [];\r\n        this.vertexOutNum = 0;\r\n        this.outputVaryBuffer = tetrasliceBufferMgr.prepareNewPipeline();\r\n        for (let attr in output) {\r\n            let id: number;\r\n            if (attr === \"return\") continue;\r\n            let packedType = output[attr].type; // unpack matrix4x4\r\n            let rawType = packedType.replace(\"mat4x4<f32>\", \"vec4<f32>\");\r\n            if (attr === \"builtin(position)\") {\r\n                id = 0;\r\n            } else if (attr.startsWith(\"location(\")) {\r\n                let i = attr.charAt(9);\r\n                id = Number(i) + 1;\r\n            }\r\n            if (id >= 0) {\r\n                this.vertexOutNum++;\r\n                bindGroup0declare += `@group(0) @binding(${tetraSliceBindGroup0declareIndex + id}) var<storage, read_write> _output${id} : array<${rawType}>;\\n`;\r\n                varInterpolate += `var output${id}s : array<${rawType},4>;\\n`;\r\n                emitOutput1 += `\r\n            _output${id}[outOffset] =   output${id}s[0];\r\n            _output${id}[outOffset+1] = output${id}s[1];\r\n            _output${id}[outOffset+2] = output${id}s[2];`\r\n                emitOutput2 += `\r\n                _output${id}[outOffset+3] = output${id}s[2];\r\n                _output${id}[outOffset+4] = output${id}s[1];\r\n                _output${id}[outOffset+5] = output${id}s[3];`\r\n                let jeg = rawType.match(/array<(.+),(.+)>/);\r\n                if (jeg) {\r\n                    let typeArrLength = Number(jeg[2]);\r\n                    let attributes = [];\r\n                    for (let i = 0; i < typeArrLength; i++) {\r\n                        attributes.push({\r\n                            shaderLocation: id, // here we keep same id, we'll deal this later\r\n                            format: 'float32x4',\r\n                            offset: i << 4\r\n                        })\r\n                    }\r\n                    vertexBufferAttributes.push({\r\n                        arrayStride: typeArrLength << 4,\r\n                        attributes\r\n                    });\r\n                    computeGroup0Buffers.push({ buffer: tetrasliceBufferMgr.requireOutputBuffer(id, typeArrLength, this.outputVaryBuffer) });\r\n                } else {\r\n                    computeGroup0Buffers.push({ buffer: tetrasliceBufferMgr.requireOutputBuffer(id, 1, this.outputVaryBuffer) });\r\n                    vertexBufferAttributes.push({\r\n                        arrayStride: 16,\r\n                        attributes: [{\r\n                            shaderLocation: id,\r\n                            format: 'float32x4' as GPUVertexFormat,\r\n                            offset: 0\r\n                        }]\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n        let bindGroup1declare = '';\r\n        for (let attr of input) {\r\n            if (!attr.startsWith(\"location(\")) continue;\r\n            let i = attr.charAt(9);\r\n            bindGroup1declare += `@group(1) @binding(${i}) var<storage, read> _attribute${i} : array<mat4x4<f32>>;\\n`;\r\n        }\r\n        let parsedCode = vertexState.code.replace(/@tetra/g, \" \").replace(/@location\\s*\\(\\s*[0-9]+\\s*\\)\\s*/g, \" \").replace(/@builtin\\s*\\(\\s*[^\\)\\s]+\\s*\\)\\s*/g, \" \");\r\n        function makeInterpolate(a: number, b: number) {\r\n            let str = '';\r\n            for (let attr in output) {\r\n                let result = output[attr].type?.match(/array<(.+),(.+)>/);\r\n                let name = attr.startsWith(\"location(\") ? output[attr].expr : attr == \"builtin(position)\" ? \"refPosMat\" : \"\";\r\n                if (!name) continue;\r\n                let i = attr.startsWith(\"location(\") ? Number(attr.charAt(9)) + 1 : 0;\r\n                if (result) {\r\n                    let typeArrLength = Number(result[2]);\r\n                    for (let idx = 0; idx < typeArrLength; idx++)\r\n                        str += `output${i}s[offset][${idx}] = mix(${name}[${idx}][${a}],${name}[${idx}][${b}],alpha);\\n`;\r\n                } else {\r\n                    str += `output${i}s[offset] = mix(${name}[${a}],${name}[${b}],alpha);\\n`;\r\n                }\r\n            }\r\n            return str;\r\n        }\r\n        let cullOperator = descriptor.cullMode == \"back\" ? \"<\" : \">\";\r\n        let commonCameraSliceCode = `\r\nlet sign = step(vec4<f32>(0.0,0.0,0.0,0.0),scalar);\r\nlet vertnum = sign.x + sign.y + sign.z + sign.w;\r\nif(!(vertnum == 0.0 || vertnum == 4.0)){ // if hit one slice\r\n    if(sign.x + sign.y == 1.0){\r\n        let alpha = scalar.x/(scalar.x - scalar.y);\r\n        ${makeInterpolate(0, 1)}\r\n        offset++;\r\n    }\r\n    if(sign.x + sign.z == 1.0){\r\n        let alpha = scalar.x/(scalar.x - scalar.z);\r\n        ${makeInterpolate(0, 2)}\r\n        offset++;\r\n    }\r\n    if(sign.x + sign.w == 1.0){\r\n        let alpha = scalar.x/(scalar.x - scalar.w);\r\n        ${makeInterpolate(0, 3)}\r\n        offset++;\r\n    }\r\n    if(sign.y + sign.z == 1.0){\r\n        let alpha = scalar.y/(scalar.y - scalar.z);\r\n        ${makeInterpolate(1, 2)}\r\n        offset++;\r\n    }\r\n    if(sign.y + sign.w == 1.0){\r\n        let alpha = scalar.y/(scalar.y - scalar.w);\r\n        ${makeInterpolate(1, 3)}\r\n        offset++;\r\n    }\r\n    if(sign.z + sign.w == 1.0){\r\n        let alpha = scalar.z/(scalar.z - scalar.w);\r\n        ${makeInterpolate(2, 3)}\r\n        offset++;\r\n    }\r\n\r\n    // offset is total vertices number (3 or 4), delta is faces number (3 or 6)\r\n    let delta:u32 = u32((offset - 2) * 3);\r\n    // get output location thread-safely\r\n    let outOffset : u32 = atomicAdd(&(_emitIndex_slice.emitIndex[i]), delta) + emitIndexOffset;\r\n    // write 3 vertices of first triangular face\r\n    ${emitOutput1}\r\n    // write 3 vertices of second triangular face if one has\r\n    if(offset == 4){\r\n        ${emitOutput2}\r\n    }\r\n} // end one hit\r\n`;\r\n        let crossComputeCode = refacingMatsCode + StructDefSliceInfo + StructDefUniformBuffer + `\r\nstruct _EmitIndex_Slice{\r\n    slice: array<tsxSliceInfo, ${config.maxSlicesNumber}>,\r\n    emitIndex: array<atomic<u32>>,\r\n}\r\n\r\n@group(0) @binding(0) var<storage, read_write> _emitIndex_slice: _EmitIndex_Slice;\r\n@group(0) @binding(1) var<uniform> tsx_uniforms : tsxUniformBuffer;\r\n@group(0) @binding(2) var<uniform> thumbnailViewport : array<vec4<f32>,16>;\r\n${bindGroup0declare}\r\n${bindGroup1declare}\r\n\r\n// user defined functions and bind groups\r\n${parsedCode}\r\n\r\nconst tsx_emitIndexStride : u32 = ${config.maxCrossSectionBufferSize >> (config.sliceGroupSizeBit + 4)};\r\n@compute @workgroup_size(${vertexState.workgroupSize ?? config.defaultWorkGroupSize})\r\nfn _mainCompute(@builtin(global_invocation_id) GlobalInvocationID : vec3<u32>){\r\n    let tetraIndex = GlobalInvocationID.x;\r\n    let instanceIndex = GlobalInvocationID.y;\r\n    ${input.has(\"location(0)\") ? `\r\n    if(tetraIndex >= arrayLength(&_attribute0)){ // todo: check performance?\r\n        return;\r\n    }` : ``} \r\n    // calculate camera space coordinate : builtin(position) and other output need to be interpolated : location(x)\r\n    // call user defined code \r\n    ${call}\r\n    let cameraPosMat = ${output[\"builtin(position)\"].expr};\r\n    \r\n    var instanceLength:u32 = ${config.sliceGroupSize};\r\n    var refPosMat : mat4x4<f32>;\r\n    var refCamMat : mat4x4<f32>;\r\n    let sliceFlag = _emitIndex_slice.slice[tsx_uniforms.sliceOffset].flag;\r\n\r\n    if(tsx_uniforms.camProj.x < 0){ // Orthographic\r\n        let projBiais:mat4x4<f32> = mat4x4<f32>(\r\n            0,0,tsx_uniforms.camProj.w,1,\r\n            0,0,tsx_uniforms.camProj.w,1,\r\n            0,0,tsx_uniforms.camProj.w,1,\r\n            0,0,tsx_uniforms.camProj.w,1,\r\n        );\r\n        let projMat = mat4x4<f32>(\r\n            -tsx_uniforms.camProj.x,0,0,0,\r\n            0,tsx_uniforms.camProj.y,0,0,\r\n            0,0,0,0,\r\n            0,0,tsx_uniforms.camProj.z,0,\r\n        );\r\n\r\n        ${(descriptor.cullMode == \"back\" || descriptor.cullMode == \"front\") ? `\r\n        // cull face: if all slices in this group has no eye4D offset, cull here\r\n        var cameraPosDetMat = transpose(cameraPosMat); \r\n        cameraPosDetMat[3] = vec4<f32>(-1.0);\r\n        if(determinant(cameraPosDetMat) ${cullOperator} 0){ return; }` : \"\"}\r\n\r\n        // [uniform if] all slices are in retina, no eye4D\r\n        if(sliceFlag == 0){\r\n            // we get refacing mat from uniform for retina slices\r\n            let retinaRefacingMat = tsx_refacingMats[tsx_uniforms.refacing & 7];\r\n            // calculate standard device coordinate for retina: projection * refacing * view * model * pos\r\n            refCamMat = retinaRefacingMat * cameraPosMat;\r\n            refPosMat = projMat * refCamMat + projBiais;\r\n        }else{\r\n            instanceLength = _emitIndex_slice.slice[tsx_uniforms.sliceOffset].flag;\r\n        }\r\n        \r\n        // prepare for interpolations\r\n        var emitIndexOffset = 0u;\r\n        for(var i:u32 = 0; i<instanceLength; i++){\r\n            ${varInterpolate}\r\n            let sliceInfo = _emitIndex_slice.slice[tsx_uniforms.sliceOffset + i];\r\n            if(sliceInfo.slicePos > 1.0){\r\n                emitIndexOffset += tsx_emitIndexStride;\r\n                continue;\r\n            }\r\n            var offset = 0u;\r\n            if(sliceFlag != 0){\r\n                refCamMat = tsx_refacingMats[sliceInfo.refacing & 7] * cameraPosMat;\r\n                refPosMat = projMat * refCamMat + projBiais;\r\n                let vp = thumbnailViewport[tsx_uniforms.sliceOffset + i - (tsx_uniforms.refacing >> 5)];\r\n                let aspect = vp.w / vp.z;\r\n                refPosMat[0].x *= aspect;\r\n                refPosMat[1].x *= aspect;\r\n                refPosMat[2].x *= aspect;\r\n                refPosMat[3].x *= aspect;\r\n            }\r\n            // calculate cross section pos * plane.normal\r\n            let scalar = transpose(refCamMat)[2] + vec4<f32>(sliceInfo.slicePos / tsx_uniforms.camProj.x); \r\n            ${commonCameraSliceCode}\r\n            emitIndexOffset += tsx_emitIndexStride;\r\n        } // end all hits\r\n    }else{\r\n        let preclipW = cameraPosMat[0].w >= 0 && cameraPosMat[1].w >= 0 && cameraPosMat[2].w >= 0  && cameraPosMat[3].w >= 0;\r\n        if(preclipW){ return; }\r\n        let projBiais:mat4x4<f32> = mat4x4<f32>(\r\n            0,0,tsx_uniforms.camProj.w,0,\r\n            0,0,tsx_uniforms.camProj.w,0,\r\n            0,0,tsx_uniforms.camProj.w,0,\r\n            0,0,tsx_uniforms.camProj.w,0\r\n        );\r\n        let projMat = mat4x4<f32>(\r\n            tsx_uniforms.camProj.x,0,0,0,\r\n            0,tsx_uniforms.camProj.y,0,0,\r\n            0,0,0,0,\r\n            0,0,tsx_uniforms.camProj.z,-1,\r\n        );\r\n        let eyeMat = mat4x4<f32>(\r\n            tsx_uniforms.eyeCross.x,0,0,0,\r\n            tsx_uniforms.eyeCross.x,0,0,0,\r\n            tsx_uniforms.eyeCross.x,0,0,0,\r\n            tsx_uniforms.eyeCross.x,0,0,0\r\n        );\r\n        // [uniform if] all slices are in retina, no eye4D\r\n        if(sliceFlag == 0){\r\n            ${(descriptor.cullMode == \"back\" || descriptor.cullMode == \"front\") ? `\r\n            // cull face: if all slices in this group has no eye4D offset, cull here\r\n            if(determinant(cameraPosMat) ${cullOperator} 0){ return; }` : \"\"}\r\n            \r\n            // we get refacing mat from uniform for retina slices\r\n            let retinaRefacingMat = tsx_refacingMats[tsx_uniforms.refacing & 7];\r\n            // calculate standard device coordinate for retina: projection * refacing * view * model * pos\r\n            refCamMat = retinaRefacingMat * cameraPosMat;\r\n            refPosMat = projMat * refCamMat + projBiais;\r\n        }else{\r\n            instanceLength = _emitIndex_slice.slice[tsx_uniforms.sliceOffset].flag;\r\n        }\r\n        \r\n        // prepare for interpolations\r\n        var emitIndexOffset = 0u;\r\n        for(var i:u32 = 0; i<instanceLength; i++){\r\n            ${varInterpolate}\r\n            let sliceInfo = _emitIndex_slice.slice[tsx_uniforms.sliceOffset + i];\r\n            if(sliceInfo.slicePos > 1.0){\r\n                emitIndexOffset += tsx_emitIndexStride;\r\n                continue;\r\n            }\r\n            var offset = 0u;\r\n            if(sliceFlag != 0){\r\n                refCamMat = tsx_refacingMats[sliceInfo.refacing & 7] * cameraPosMat + \r\n                    eyeMat * (f32(sliceInfo.refacing >> 3) - 1.0);\r\n                    ${(descriptor.cullMode == \"back\" || descriptor.cullMode == \"front\") ? `\r\n                if(determinant(refCamMat) * determinantRefacingMats[sliceInfo.refacing & 7] ${cullOperator} 0){\r\n                    emitIndexOffset += tsx_emitIndexStride;\r\n                    continue;\r\n                }`: \"\"}\r\n                refPosMat = projMat * refCamMat + projBiais;\r\n                let vp = thumbnailViewport[tsx_uniforms.sliceOffset + i - (tsx_uniforms.refacing >> 5)];\r\n                let aspect = vp.w / vp.z;\r\n                refPosMat[0].x *= aspect;\r\n                refPosMat[1].x *= aspect;\r\n                refPosMat[2].x *= aspect;\r\n                refPosMat[3].x *= aspect;\r\n            }\r\n            // calculate cross section pos * plane.normal\r\n            let scalar = transpose(refCamMat) * vec4(0.0,0.0,1.0,sliceInfo.slicePos / tsx_uniforms.camProj.x); \r\n            ${commonCameraSliceCode}\r\n            emitIndexOffset += tsx_emitIndexStride;\r\n        } // end all hits\r\n    } // end camera type\r\n}\r\n`;\r\n        this.crossComputeShaderModule = this.gpu.device.createShaderModule({\r\n            code: crossComputeCode\r\n        });\r\n        let computePipelinePromise = this.gpu.device.createComputePipelineAsync({\r\n            layout: layout.computeLayout as GPUPipelineLayout | GPUAutoLayoutMode,\r\n            compute: {\r\n                module: this.crossComputeShaderModule,\r\n                entryPoint: '_mainCompute'\r\n            }\r\n        });\r\n        vertexBufferAttributes.sort((a, b) =>\r\n            (a.attributes[0].shaderLocation - b.attributes[0].shaderLocation)\r\n        );\r\n        let shaderLocationCounter = 0;\r\n        for (let vba of vertexBufferAttributes) {\r\n            for (let attr of vba.attributes) {\r\n                attr.shaderLocation = shaderLocationCounter++;\r\n            }\r\n        }\r\n        for (let i = 0; i < shaderLocationCounter; i++) {\r\n            let attr = i ? `location(${i - 1})` : \"builtin(position)\";\r\n            vinputVert += `@location(${i}) member${i}: vec4<f32>,\\n`;\r\n            voutputVert += `@${attr} member${i}: vec4<f32>,\\n`;\r\n            vcallVert += `data.member${i},`;\r\n        }\r\n        const vertexShaderModule = this.gpu.device.createShaderModule({\r\n            code: `\r\nstruct tsxvInputType{\r\n    ${vinputVert}\r\n};\r\nstruct tsxvOutputType{\r\n    ${voutputVert}\r\n};\r\n@vertex fn main(data : tsxvInputType)-> tsxvOutputType{\r\n    return tsxvOutputType(${vcallVert});\r\n}\r\n`});\r\n        this.fragmentShaderModule = this.gpu.device.createShaderModule({ code: descriptor.fragment.code });\r\n        let renderPipelinePromise = this.gpu.device.createRenderPipelineAsync({\r\n            layout: layout.renderLayout as GPUPipelineLayout | GPUAutoLayoutMode,\r\n            vertex: {\r\n                module: vertexShaderModule,\r\n                entryPoint: 'main',\r\n                buffers: vertexBufferAttributes,\r\n            },\r\n            fragment: {\r\n                module: this.fragmentShaderModule,\r\n                entryPoint: descriptor.fragment.entryPoint,\r\n                targets: [{ format: this.gpu.preferredFormat }]\r\n            },\r\n            primitive: {\r\n                topology: 'triangle-list',\r\n            },\r\n            depthStencil: {\r\n                depthWriteEnabled: true,\r\n                depthCompare: 'less',\r\n                format: 'depth24plus',\r\n            }\r\n        });\r\n        const [computePipeline, renderPipeline] = await Promise.all([computePipelinePromise, renderPipelinePromise]);\r\n        this.computePipeline = computePipeline;\r\n        this.renderPipeline = renderPipeline;\r\n        this.computeBindGroup0 = this.gpu.createBindGroup(computePipeline, 0, computeGroup0Buffers, \"TetraComputePipeline\");\r\n        return this;\r\n    }\r\n    private getBindGroupLayout(output: {\r\n        [name: string]: { expr: string; type: string; }\r\n    }) {\r\n        let computeBindGroupLayouts: GPUBindGroupLayout[] = [];\r\n        let renderBindGroupLayouts: GPUBindGroupLayout[] = [];\r\n        const layout = this.descriptor.layout;\r\n        if (!layout || layout === 'auto') return {\r\n            computeLayout: 'auto' as GPUAutoLayoutMode,\r\n            renderLayout: 'auto' as GPUAutoLayoutMode\r\n        }\r\n        let computeLayout = layout?.computeLayout;\r\n        let renderLayout = layout?.renderLayout;\r\n        if ((computeLayout !== 'auto' && computeLayout as GPUBindGroupLayoutDescriptor[])?.length) {\r\n            const bindGroupLayoutsDesc = (computeLayout as GPUBindGroupLayoutDescriptor[]);\r\n            let bindgroupLayouts = this.reflect.getBindGroups();\r\n            for (let groupIdx = 0, l = bindgroupLayouts.length; groupIdx < l; groupIdx++) {\r\n                let groupLayoutDesc: Array<GPUBindGroupLayoutEntry> = [];\r\n                if (groupIdx === 0) {\r\n                    // here Object.keys(output).length - 1 because it has \"return\" key\r\n                    for (let i = 0, l = Object.keys(output).length - 1 + tetraSliceBindGroup0declareIndex; i < l; i++) {\r\n                        const type: GPUBufferBindingType = i && i < tetraSliceBindGroup0declareIndex ? 'uniform' : 'storage';\r\n                        groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.COMPUTE, buffer: { type } });\r\n                    }\r\n                } else {\r\n                    const bindings = bindgroupLayouts[groupIdx];\r\n                    for (let i = 0, l = bindings.length; i < l; i++) {\r\n                        const entry = (bindGroupLayoutsDesc[groupIdx]?.entries as Array<GPUBindGroupLayoutEntry>)?.filter(\r\n                            e => e.binding === i\r\n                        )[0];\r\n                        const descriptor = bindings[i];\r\n                        if (entry) {\r\n                            groupLayoutDesc.push(entry);\r\n                        } else if (!descriptor) {\r\n                            groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'read-only-storage' } });\r\n                        } else if (descriptor.resourceType === ResourceType.Storage) {\r\n                            groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } });\r\n                        } else if (descriptor.resourceType === ResourceType.Uniform) {\r\n                            groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' } });\r\n                        }\r\n                    }\r\n                }\r\n                const bindGroupLayout = this.device.createBindGroupLayout({ entries: groupLayoutDesc });\r\n                computeBindGroupLayouts.push(bindGroupLayout);\r\n            }\r\n            computeLayout = this.device.createPipelineLayout({ bindGroupLayouts: computeBindGroupLayouts, label: \"computeBindGroupLayoutDesc\" });\r\n        }\r\n\r\n        if ((renderLayout !== 'auto' && renderLayout as GPUBindGroupLayoutDescriptor[])?.length) {\r\n            const bindGroupLayoutsDesc = (renderLayout as GPUBindGroupLayoutDescriptor[]);\r\n            const renderReflect = new WgslReflect(this.descriptor.fragment.code);\r\n            let bindgroupLayouts = renderReflect.getBindGroups();\r\n            for (let groupIdx = 0, l = bindgroupLayouts.length; groupIdx < l; groupIdx++) {\r\n                let groupLayoutDesc: Array<GPUBindGroupLayoutEntry> = [];\r\n\r\n                const bindings = bindgroupLayouts[groupIdx];\r\n                for (let i = 0, l = bindings.length; i < l; i++) {\r\n                    const entry = (bindGroupLayoutsDesc[groupIdx]?.entries as Array<GPUBindGroupLayoutEntry>)?.filter(\r\n                        e => e.binding === i\r\n                    )[0];\r\n                    if (entry) {\r\n                        groupLayoutDesc.push(entry);\r\n                    } else if (!bindings[i] || bindings[i].resourceType === ResourceType.Storage) {\r\n                        groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.FRAGMENT, buffer: {} });\r\n                    } else if (bindings[i].resourceType === ResourceType.Storage) {\r\n                        groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.FRAGMENT, buffer: {} });\r\n                    } else if (bindings[i].resourceType === ResourceType.Sampler) {\r\n                        groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.FRAGMENT, sampler: {} });\r\n                    } else if (bindings[i].resourceType === ResourceType.Texture) {\r\n                        groupLayoutDesc.push({ binding: i, visibility: GPUShaderStage.FRAGMENT, texture: {} });\r\n                    }\r\n                }\r\n                const bindGroupLayout = this.device.createBindGroupLayout({ entries: groupLayoutDesc });\r\n                renderBindGroupLayouts.push(bindGroupLayout);\r\n            }\r\n            renderLayout = this.device.createPipelineLayout({ bindGroupLayouts: renderBindGroupLayouts, label: \"renderBindGroupLayoutDesc\" });\r\n        }\r\n        return {\r\n            computeLayout, renderLayout\r\n        }\r\n    }\r\n}\r\n\r\nexport class RaytracingPipeline {\r\n    pipeline: GPURenderPipeline;\r\n    bindGroup0: GPUBindGroup;\r\n    shaderModule: GPUShaderModule;\r\n    getCompilationInfo(){\r\n        return this.shaderModule?.getCompilationInfo();\r\n    }\r\n    async init(gpu: GPU, config: InternalSliceRendererConfig, descriptor: RaytracingPipelineDescriptor, sliceBuffers: RetinaSliceBufferMgr) {\r\n        let code = descriptor.code.replace(/@ray(\\s)/g, \"@vertex$1\");\r\n        const reflect = new WgslReflect(code);\r\n        let mainRayFn = reflect._functions.get(descriptor.rayEntryPoint);\r\n        if (!mainRayFn) console.error(\"Raytracing pipeline: Entry point does not exist.\");\r\n        // let mainFragFn = reflect.functions.filter(\r\n        //     e => e.attributes && e.attributes.some(a => a.name === \"fragment\") && e.name == descriptor.fragment.entryPoint\r\n        // )[0];\r\n        let { input, output, call } = getFnInputAndOutput(reflect, mainRayFn,\r\n            {\r\n                \"builtin(ray_origin)\": \"camRayOri\",\r\n                \"builtin(ray_direction)\": \"camRayDir\",\r\n                \"builtin(voxel_coord)\": \"voxelCoord\",\r\n                \"builtin(aspect_matrix)\": \"refacingMat3 * mat3x3<f32>(aspect,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0) * refacingMat3\",\r\n            },\r\n            [\"location(0)\", \"location(1)\", \"location(2)\", \"location(3)\", \"location(4)\", \"location(5)\"]\r\n        );\r\n        let dealRefacingCall = \"\";\r\n        if (input.has(\"builtin(aspect_matrix)\")) {\r\n            dealRefacingCall = \"let refacingMat3 = mat3x3<f32>(refacingMat[0].xyz,refacingMat[1].xyz,refacingMat[2].xyz);\"\r\n        }\r\n        let retunTypeMembers: string;\r\n        let outputMembers: string;\r\n        if (mainRayFn.node.returnType.attributes) {\r\n            outputMembers = output[\"return\"].expr;\r\n            retunTypeMembers = `@${parseAttr(mainRayFn.node.returnType.attributes)} ${parseTypeName(mainRayFn.node.returnType as any as TypeInfo)}`;\r\n        } else {\r\n            let st = reflect.structs.filter(s => s.name === mainRayFn.node.returnType.name)[0];\r\n            if (!st) console.error(\"No attribute found\");\r\n            outputMembers = st.members.map(m => output[parseAttr(m.attributes)].expr).join(\",\\n\");\r\n            retunTypeMembers = st.members.map(m => `@${parseAttr(m.attributes)} ${m.name}: ${parseTypeName(m.type)}`).join(\",\\n\");\r\n        }\r\n\r\n        // ${wgslreflect.parseAttr(mainRayFn.return.attributes)} userRayOut: ${wgslreflect.parseTypeName(mainRayFn.return)}\r\n        let shaderCode = refacingMatsCode + StructDefSliceInfo + StructDefUniformBuffer + `\r\nstruct tsxvOut{\r\n    @builtin(position) pos: vec4<f32>,\r\n    ${retunTypeMembers}\r\n}\r\nstruct tsxAffineMat{\r\n    matrix: mat4x4<f32>,\r\n    vector: vec4<f32>,\r\n}\r\n@group(0) @binding(0) var<storage, read> tsx_slice: array<tsxSliceInfo, ${config.maxSlicesNumber}>;\r\n\r\n@group(0) @binding(1) var<uniform> tsx_uniforms : tsxUniformBuffer;\r\n@group(0) @binding(2) var<uniform> thumbnailViewport : array<vec4<f32>,16>;\r\nfn apply(afmat: tsxAffineMat, points: mat4x4<f32>) -> mat4x4<f32>{\r\n    let biais = mat4x4<f32>(afmat.vector, afmat.vector, afmat.vector, afmat.vector);\r\n    return afmat.matrix * points + biais;\r\n}\r\nfn applyinv(afmat: tsxAffineMat, points: mat4x4<f32>) -> mat4x4<f32>{\r\n    let biais = mat4x4<f32>(afmat.vector, afmat.vector, afmat.vector, afmat.vector);\r\n    return transpose(afmat.matrix) * (points - biais);\r\n}\r\n${code.replace(/@vertex/g, \" \").replace(/@builtin\\s*\\(\\s*(ray_origin|ray_direction|voxel_coord|aspect_matrix)\\s*\\)\\s*/g, \" \")}\r\n@vertex fn mainVertex(@builtin(vertex_index) vindex:u32, @builtin(instance_index) i_index:u32) -> tsxvOut{\r\n    const pos = array<vec2<f32>, 4>(\r\n        vec2<f32>(-1.0, -1.0),\r\n        vec2<f32>(-1.0, 1.0),\r\n        vec2<f32>( 1.0, -1.0),\r\n        vec2<f32>( 1.0, 1.0),\r\n    );\r\n    let sliceInfo = tsx_slice[tsx_uniforms.sliceOffset + i_index];\r\n    let sliceFlag = tsx_slice[tsx_uniforms.sliceOffset].flag;\r\n    var refacingEnum : u32;\r\n\r\n    let posidx = pos[vindex];\r\n    let coord = vec2<f32>(posidx.x, posidx.y);\r\n    var aspect = 1.0;\r\n    var rayPos = vec4<f32>(0.0);// no eye offset for retina\r\n    var rayDir = vec4<f32>(0.0,0.0,0.0,-1.0);// point forward for Orthographic camera\r\n    if(tsx_uniforms.camProj.x < 0){\r\n        rayPos = vec4<f32>(coord.x/tsx_uniforms.camProj.x * aspect, coord.y/tsx_uniforms.camProj.y, sliceInfo.slicePos/tsx_uniforms.camProj.x, -tsx_uniforms.camProj.w/tsx_uniforms.camProj.z);\r\n    }else{\r\n        if(sliceFlag == 0){\r\n            refacingEnum = tsx_uniforms.refacing;\r\n        }else{\r\n            refacingEnum = sliceInfo.refacing;\r\n            let vp = thumbnailViewport[tsx_uniforms.sliceOffset + i_index - (tsx_uniforms.refacing >> 5)];\r\n            aspect = vp.z / vp.w;\r\n            rayPos = vec4<f32>(-tsx_uniforms.eyeCross.x * (f32(sliceInfo.refacing >> 3) - 1.0), 0.0, 0.0, 0.0);\r\n        }\r\n        rayDir = vec4<f32>(coord.x/tsx_uniforms.camProj.x * aspect, coord.y/tsx_uniforms.camProj.y, sliceInfo.slicePos/tsx_uniforms.camProj.x, -1.0);\r\n    }\r\n    let refacingMat = tsx_refacingMats[refacingEnum & 7];\r\n    let camRayDir = refacingMat * rayDir;\r\n    let camRayOri = refacingMat * rayPos;\r\n    let voxelCoord = (refacingMat * vec4<f32>(coord, sliceInfo.slicePos,0.0)).xyz;\r\n    ${dealRefacingCall}\r\n    ${call}\r\n    let x = f32(((sliceInfo.viewport >> 24) & 0xFF) << ${config.viewportCompressShift}) * ${1 / config.sliceTextureWidth};\r\n    let y = f32(((sliceInfo.viewport >> 16) & 0xFF) << ${config.viewportCompressShift}) * ${1 / config.sliceTextureHeight};\r\n    let w = f32(((sliceInfo.viewport >> 8 ) & 0xFF) << ${config.viewportCompressShift}) * ${1 / config.sliceTextureWidth};\r\n    let h = f32((sliceInfo.viewport & 0xFF) << ${config.viewportCompressShift}) * ${1 / config.sliceTextureHeight};\r\n    let texelCoord = array<vec2<f32>, 4>(\r\n        vec2<f32>(x, y+h),\r\n        vec2<f32>(x, y),\r\n        vec2<f32>(x+w, y+h),\r\n        vec2<f32>(x+w, y),\r\n    )[vindex] * 2.0 - vec2<f32>(1.0);\r\n    \r\n    if(sliceInfo.slicePos > 1.0){\r\n        return tsxvOut(\r\n            vec4<f32>(0.0,0.0,0.0, -1.0),\r\n            ${outputMembers}\r\n        );\r\n    }else{\r\n        return tsxvOut(\r\n            vec4<f32>(texelCoord.x,-texelCoord.y, 0.999999, 1.0),\r\n            ${outputMembers}\r\n        );\r\n    }\r\n}\r\nfn calDepth(distance: f32)->f32{\r\n    return -tsx_uniforms.camProj.z + tsx_uniforms.camProj.w / distance;\r\n}\r\n`;\r\n        let module = gpu.device.createShaderModule({ code: shaderCode });\r\n        this.shaderModule = module;\r\n        this.pipeline = await gpu.device.createRenderPipelineAsync({\r\n            layout: 'auto',\r\n            vertex: {\r\n                module,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                module,\r\n                entryPoint: descriptor.fragmentEntryPoint,\r\n                targets: [{ format: gpu.preferredFormat }]\r\n            },\r\n            primitive: {\r\n                topology: 'triangle-strip',\r\n            },\r\n            depthStencil: {\r\n                depthWriteEnabled: true,\r\n                depthCompare: 'less',\r\n                format: 'depth24plus',\r\n            }\r\n        });\r\n\r\n        let buffers = [\r\n            { buffer: sliceBuffers.emitIndexSliceBuffer },\r\n            { buffer: sliceBuffers.uniformsBuffer },\r\n            { buffer: sliceBuffers.thumbnailViewportBuffer },\r\n        ];\r\n        this.bindGroup0 = gpu.createBindGroup(this.pipeline, 0, buffers);\r\n\r\n        return this;\r\n    }\r\n\r\n};","import { AffineMat4, Obj4 } from \"../../math/algebra/affine.js\";\r\nimport { Mat4 } from \"../../math/algebra/mat4.js\";\r\nimport { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { _RAD2DEG } from \"../../math/const.js\";\r\nimport { OrthographicCamera, PerspectiveCamera, getOrthographicProjectionMatrix, getPerspectiveProjectionMatrix } from \"../../math/geometry/camera.js\";\r\nimport { AABB, Plane } from \"../../math/geometry/primitive.js\";\r\nimport { GPU } from \"../gpu.js\";\r\nimport { DefaultDisplayConfig, DisplayConfig, DisplayConfigName, EyeStereo, IWireframeRenderState, RaytracingPipelineDescriptor, RetinaRenderPassDescriptor, RetinaSliceFacing, SectionConfig, SliceRendererConfig, TetraSlicePipelineDescriptor } from \"./interfaces.js\";\r\nimport { RaytracingPipeline, StructDefSliceInfo, StructDefUniformBuffer, TetraSlicePipeline, refacingMatsCode } from \"./pipeline.js\";\r\nimport { RenderState as IRenderState, RetinaRenderPass as IRetinaRenderPass } from \"./interfaces.js\";\r\n/** Internal use for SliceRenderer's Display Configs */\r\nexport interface InternalDisplayConfig extends DisplayConfig {\r\n    opacity: number;\r\n    paddedSliceNum: number;\r\n    sliceGroupNum: number;\r\n    totalGroupNum: number;\r\n    enableStereo: boolean;\r\n}\r\n/** Internal use for SliceRenderer's Base Configs */\r\nexport interface InternalSliceRendererConfig extends SliceRendererConfig {\r\n    /** log2 of sliceGroupSize in SliceRendererConfig */\r\n    sliceGroupSizeBit: number;\r\n    /** A gpu device limit to set textures as large as possible */\r\n    maxTextureSize: number;\r\n    /** viewport data is compressed in gpu buffer, this gives the amount */\r\n    viewportCompressShift: number;\r\n    /** SliceTexture is a big 2d texuture containing all slices within a slice group*/\r\n    sliceTextureWidth: number;\r\n    sliceTextureHeight: number;\r\n}\r\nconst DefaultWorkGroupSize = 256;\r\nconst DefaultSliceGroupSize = 16;\r\nconst DefaultMaxSlicesNumber = 256;\r\nconst DefaultMaxCrossSectionBufferSize = 0x800000;\r\nconst DefaultEnableFloat16Blend = true;\r\nconst uniformsBufferLength = 64 + 64 + 16 + 4 + 4 + 4 + 4 + 12 + 4; // last 4 is padding\r\nconst retinaMVBufferOffset = 0;\r\nconst retinaProjectBufferOffset = 64;\r\nconst camProjBufferOffset = retinaProjectBufferOffset + 64;\r\nconst eyeCrossBufferOffset = camProjBufferOffset + 16;\r\nconst sliceOffsetBufferOffset = eyeCrossBufferOffset + 12;\r\nconst refacingBufferOffset = sliceOffsetBufferOffset + 4;\r\nconst screenAspectBufferOffset = refacingBufferOffset + 4;\r\nconst layerOpacityBufferOffset = screenAspectBufferOffset + 4;\r\nconst power2arr = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512];\r\nlet linearTextureSampler: GPUSampler;\r\n\r\nexport class SliceRenderer {\r\n\r\n    gpu: GPU;\r\n    private tetraBuffers: TetraSliceBufferMgr;\r\n    private sliceBuffers: RetinaSliceBufferMgr;\r\n    private crossRenderPass: CrossRenderPass;\r\n    private retinaRenderPass: RetinaRenderPass;\r\n    private screenRenderPass: ScreenRenderPass;\r\n    private rendererConfig: InternalSliceRendererConfig;\r\n    private displayConfig: InternalDisplayConfig;\r\n    private wireframeRenderPass: WireFrameRenderPass;\r\n\r\n    constructor(gpu: GPU, config?: SliceRendererConfig) {\r\n        if (!gpu.device) throw \"GPU is not initialized yet.\";\r\n        config ??= {};\r\n        config.maxSlicesNumber ??= DefaultMaxSlicesNumber;\r\n        config.enableFloat16Blend ??= DefaultEnableFloat16Blend;\r\n        config.maxCrossSectionBufferSize ??= DefaultMaxCrossSectionBufferSize;\r\n        config.sliceGroupSize ??= DefaultSliceGroupSize;\r\n        config.defaultWorkGroupSize ??= DefaultWorkGroupSize;\r\n\r\n        this.rendererConfig = config as InternalSliceRendererConfig;\r\n        this.rendererConfig.sliceGroupSizeBit = power2arr.indexOf(config.sliceGroupSize);\r\n        const maxTextureSize = gpu.device.limits.maxTextureDimension2D;\r\n        this.rendererConfig.maxTextureSize = maxTextureSize;\r\n        this.rendererConfig.sliceTextureWidth = maxTextureSize >> 1;\r\n        this.rendererConfig.sliceTextureHeight = maxTextureSize;\r\n        // viewport is compressed in gpu buffer by four u8s, therefore shift amount is maxSize >> 8\r\n        this.rendererConfig.viewportCompressShift = power2arr.indexOf(this.rendererConfig.maxTextureSize >> 8);\r\n        this.gpu = gpu;\r\n        this.wireframeRenderPass = new WireFrameRenderPass(gpu, this.rendererConfig);\r\n        this.sliceBuffers = new RetinaSliceBufferMgr(gpu, this.rendererConfig);\r\n        this.tetraBuffers = new TetraSliceBufferMgr(gpu, this.rendererConfig, this.sliceBuffers);\r\n        this.crossRenderPass = new CrossRenderPass(gpu);\r\n        this.retinaRenderPass = new RetinaRenderPass(gpu, this.rendererConfig, this.sliceBuffers, this.crossRenderPass);\r\n        this.screenRenderPass = new ScreenRenderPass(gpu, this.rendererConfig, this.sliceBuffers);\r\n        linearTextureSampler = gpu.device.createSampler({\r\n            magFilter: 'linear',\r\n            minFilter: 'linear'\r\n        });\r\n        this.displayConfig = {\r\n            sections: [], retinaResolution: 0, retinaLayers: 0,\r\n            retinaStereoEyeOffset: 0, sectionStereoEyeOffset: 0, crosshair: 0,\r\n            opacity: 1, paddedSliceNum: 0, sliceGroupNum: 0, totalGroupNum: 0, enableStereo: false\r\n        };\r\n        this.setDisplayConfig(DefaultDisplayConfig);\r\n    }\r\n    async init() {\r\n        await Promise.all([this.crossRenderPass.init(), this.retinaRenderPass.init(), this.screenRenderPass.init(), this.wireframeRenderPass.init()]);\r\n        return this;\r\n    }\r\n    createRetinaRenderPass(descriptor: RetinaRenderPassDescriptor): IRetinaRenderPass {\r\n        return new RetinaRenderPass(this.gpu, this.rendererConfig, this.sliceBuffers, this.crossRenderPass, descriptor) as IRetinaRenderPass;\r\n    }\r\n    setRetinaRenderPass(retinaRenderPass: IRetinaRenderPass) {\r\n        this.retinaRenderPass = retinaRenderPass as RetinaRenderPass;\r\n    }\r\n    getCurrentRetinaRenderPass() {\r\n        return this.retinaRenderPass as IRetinaRenderPass;\r\n    }\r\n    setDisplayConfig(config: DisplayConfig) {\r\n\r\n        /// Small buffers settings\r\n\r\n        if (config.canvasSize) {\r\n            this.displayConfig.canvasSize = config.canvasSize;\r\n            this.screenRenderPass.setSize(config.canvasSize);\r\n        }\r\n        if (config.screenBackgroundColor) this.displayConfig.screenBackgroundColor = config.screenBackgroundColor;\r\n        if (config.retinaClearColor) {\r\n            this.displayConfig.retinaClearColor = config.retinaClearColor\r\n            this.crossRenderPass.descClear.colorAttachments[0].clearValue = config.retinaClearColor;\r\n        }\r\n        config.retinaLayers ??= this.displayConfig.retinaLayers ?? 0;\r\n        config.opacity ??= this.displayConfig.opacity ?? 1;\r\n        config.crosshair ??= this.displayConfig.crosshair ?? 0;\r\n        config.retinaStereoEyeOffset ??= this.displayConfig.retinaStereoEyeOffset;\r\n        config.sectionStereoEyeOffset ??= this.displayConfig.sectionStereoEyeOffset;\r\n\r\n        if (config.opacity !== this.displayConfig.opacity || config.retinaLayers !== this.displayConfig.retinaLayers) {\r\n            // When sliceNum == 0, opacity is 0 -> detect opacity to not render crosshair\r\n            let value = config.retinaLayers ? config.opacity / config.retinaLayers : 0.0;\r\n            this.gpu.device.queue.writeBuffer(this.sliceBuffers.uniformsBuffer, layerOpacityBufferOffset, new Float32Array([value]));\r\n            this.displayConfig.opacity = config.opacity;\r\n        }\r\n        if (\r\n            config.retinaStereoEyeOffset !== this.displayConfig.retinaStereoEyeOffset ||\r\n            config.sectionStereoEyeOffset !== this.displayConfig.sectionStereoEyeOffset ||\r\n            config.crosshair !== this.displayConfig.crosshair\r\n        ) {\r\n            this.displayConfig.retinaStereoEyeOffset = config.retinaStereoEyeOffset;\r\n            this.displayConfig.sectionStereoEyeOffset = config.sectionStereoEyeOffset;\r\n            this.displayConfig.crosshair = config.crosshair;\r\n            this.gpu.device.queue.writeBuffer(this.sliceBuffers.uniformsBuffer, eyeCrossBufferOffset, new Float32Array([\r\n                config.sectionStereoEyeOffset, config.retinaStereoEyeOffset, config.crosshair\r\n            ]));\r\n            this.displayConfig.enableStereo = this.displayConfig.sectionStereoEyeOffset !== 0 || this.displayConfig.retinaStereoEyeOffset !== 0;\r\n        }\r\n\r\n        if (config.camera4D) this.sliceBuffers.setCameraProjectMatrix(config.camera4D);\r\n        if (config.camera3D) this.sliceBuffers.setRetinaProjectMatrix(config.camera3D);\r\n        if (config.retinaViewMatrix) this.sliceBuffers.setRetinaViewMatrix(config.retinaViewMatrix);\r\n\r\n        /// Small buffers settings end\r\n\r\n        if ((!config.sections) && (this.displayConfig.retinaLayers == config.retinaLayers\r\n        ) && (!config.retinaResolution)) return;\r\n\r\n        /// Retina and section configurations\r\n\r\n        this.sliceBuffers.setSlicesAndSections(this.displayConfig, config);\r\n\r\n    }\r\n    getSafeTetraNumInOnePass() {\r\n        // maximum vertices per slice\r\n        let maxVertices = this.rendererConfig.maxCrossSectionBufferSize >> (this.rendererConfig.sliceGroupSizeBit + 4);\r\n        // one tetra generate at most 6 vertices\r\n        return Math.floor(maxVertices / 6);\r\n    }\r\n    getStereoMode() { return this.getDisplayConfig('retinaStereoEyeOffset') !== 0 || this.getDisplayConfig('sectionStereoEyeOffset') !== 0; }\r\n    getMinResolutionMultiple() { return 1 << this.rendererConfig.viewportCompressShift; }\r\n    getDisplayConfig(configNames: 'canvasSize'): GPUExtent3DStrict;\r\n    getDisplayConfig(configNames: 'sections'): SectionConfig[];\r\n    getDisplayConfig(configNames: 'retinaViewMatrix'): Mat4;\r\n    getDisplayConfig(configNames: 'camera3D' | 'camera4D'): PerspectiveCamera | OrthographicCamera;\r\n    getDisplayConfig(configNames: \"screenBackgroundColor\" | \"retinaClearColor\"): GPUColor;\r\n    getDisplayConfig(configNames: 'retinaLayers' | 'retinaResolution' | 'opacity' | 'sectionStereoEyeOffset' | 'retinaStereoEyeOffset' | 'crosshair'): number;\r\n    getDisplayConfig(...configNames: DisplayConfigName[]) {\r\n        const cfg = this.displayConfig;\r\n        if (!configNames || !configNames.length) {\r\n            return {\r\n                canvasSize: cfg.canvasSize,\r\n                sections: this.sliceBuffers.deepCopySectionConfigs(cfg.sections),\r\n                retinaLayers: cfg.retinaLayers,\r\n                retinaResolution: cfg.retinaResolution,\r\n                opacity: cfg.opacity,\r\n                retinaStereoEyeOffset: cfg.retinaStereoEyeOffset,\r\n                sectionStereoEyeOffset: cfg.sectionStereoEyeOffset,\r\n                crosshair: cfg.crosshair,\r\n                screenBackgroundColor: cfg.screenBackgroundColor,\r\n                retinaClearColor: cfg.retinaClearColor,\r\n                camera4D: cfg.camera4D,\r\n                camera3D: cfg.camera3D,\r\n                retinaViewMatrix: cfg.retinaViewMatrix,\r\n            } as DisplayConfig;\r\n        }\r\n        if (configNames.length === 1) {\r\n            const name = configNames[0];\r\n            switch (name) {\r\n                case 'sections': return this.sliceBuffers.deepCopySectionConfigs(cfg.sections);\r\n                default: return cfg[name];\r\n            }\r\n        }\r\n        return configNames.map(name => name === 'sections' ? this.sliceBuffers.deepCopySectionConfigs(cfg.sections) : cfg[name]);\r\n    }\r\n    render(context: GPUCanvasContext, drawCall: (rs: IRenderState) => void, wireFrameDrawCall?: (rs: IWireframeRenderState) => void) {\r\n        this.sliceBuffers.updateBuffers(this.displayConfig.sliceGroupNum);\r\n\r\n        const gpu = this.gpu;\r\n        if (!this.crossRenderPass.clearRenderPipeline) throw \"SliceRenderer is not initailzed, forget to call 'await SliceRenderer.init()' ?\";\r\n        if (!this.retinaRenderPass.pipeline) throw \"SliceRenderer's current retinaRenderPass is not initailzed, forget to call 'await RetinaRenderPass.init()' ?\";\r\n        let canvasView = context.getCurrentTexture().createView();\r\n        const renderState = new RenderState(this.gpu, this.rendererConfig, this.sliceBuffers, this.tetraBuffers, this.crossRenderPass);\r\n        const commandEncoder = renderState.commandEncoder;\r\n        // todo: disable depth first, then add it\r\n        if (wireFrameDrawCall) {\r\n            this.wireframeRenderPass.renderPassDesc = {\r\n                colorAttachments: [{\r\n                    clearValue: this.displayConfig.screenBackgroundColor,\r\n                    view: this.screenRenderPass.view,\r\n                    loadOp: \"clear\" as GPULoadOp,\r\n                    storeOp: 'store' as GPUStoreOp\r\n                }],\r\n                depthStencilAttachment: {\r\n                    view: this.screenRenderPass.depthView,\r\n                    depthClearValue: 1.0,\r\n                    depthLoadOp: 'clear' as GPULoadOp,\r\n                    depthStoreOp: 'store' as GPUStoreOp,\r\n                }\r\n            };\r\n            this.wireframeRenderPass.renderState = renderState;\r\n            wireFrameDrawCall(this.wireframeRenderPass);\r\n            this.wireframeRenderPass.renderState = undefined;\r\n        }\r\n\r\n        for (let sliceIndex = 0; sliceIndex < this.displayConfig.totalGroupNum; sliceIndex++) {\r\n            renderState.needClear = true;\r\n            renderState.sliceIndex = sliceIndex;\r\n            renderState.frustumRange = undefined;\r\n            // set new slicegroup offset\r\n            commandEncoder.copyBufferToBuffer(this.sliceBuffers.sliceGroupOffsetBuffer, sliceIndex << 2, this.sliceBuffers.uniformsBuffer, sliceOffsetBufferOffset, 4);\r\n            drawCall(renderState);\r\n            if (renderState.needClear) {\r\n                // if drawCall is empty, we also need to clear texture\r\n                let clearPassEncoder = commandEncoder.beginRenderPass(this.crossRenderPass.descClear);\r\n                clearPassEncoder.setPipeline(this.crossRenderPass.clearRenderPipeline);\r\n                clearPassEncoder.draw(0);\r\n                clearPassEncoder.end();\r\n            }\r\n            const loadOp = (!wireFrameDrawCall) && sliceIndex === 0 ? 'clear' : \"load\" as GPULoadOp;\r\n            let retinaPassEncoder = commandEncoder.beginRenderPass({\r\n                colorAttachments: [{\r\n                    view: this.screenRenderPass.view,\r\n                    clearValue: this.displayConfig.screenBackgroundColor,\r\n                    loadOp,\r\n                    storeOp: 'store' as GPUStoreOp\r\n                }],\r\n\r\n                depthStencilAttachment: {\r\n                    view: this.screenRenderPass.depthView,\r\n                    depthClearValue: 1.0,\r\n                    depthLoadOp: loadOp,\r\n                    depthStoreOp: 'store' as GPUStoreOp,\r\n                }\r\n            });\r\n            retinaPassEncoder.setPipeline(this.retinaRenderPass.pipeline);\r\n            retinaPassEncoder.setBindGroup(0, this.retinaRenderPass.bindgroup);\r\n            if (this.retinaRenderPass.alphaBindgroup) {\r\n                retinaPassEncoder.setBindGroup(1, this.retinaRenderPass.alphaBindgroup);\r\n            }\r\n            let isSectionCount = this.displayConfig.sections.length && sliceIndex >= this.displayConfig.sliceGroupNum;\r\n            let lastCount = isSectionCount ? this.displayConfig.sections.length % this.rendererConfig.sliceGroupSize : 0;\r\n            let count = isSectionCount ? (\r\n                // if is section group\r\n                sliceIndex == this.displayConfig.totalGroupNum - 1 && lastCount ? lastCount : this.rendererConfig.sliceGroupSize\r\n            ) :\r\n                // if is not section group\r\n                this.displayConfig.enableStereo ? (this.rendererConfig.sliceGroupSize << 1) : this.rendererConfig.sliceGroupSize;\r\n            retinaPassEncoder.draw(4, count, 0, 0);\r\n            retinaPassEncoder.end();\r\n        }\r\n\r\n        let screenPassEncoder = commandEncoder.beginRenderPass({\r\n            colorAttachments: [{\r\n                view: canvasView,\r\n                clearValue: this.displayConfig.screenBackgroundColor,\r\n                loadOp: 'clear' as GPULoadOp,\r\n                storeOp: 'store' as GPUStoreOp\r\n            }]\r\n        });\r\n        screenPassEncoder.setPipeline(this.screenRenderPass.pipeline);\r\n        screenPassEncoder.setBindGroup(0, this.screenRenderPass.bindgroup);\r\n        screenPassEncoder.draw(4);\r\n        screenPassEncoder.end();\r\n        gpu.device.queue.submit([commandEncoder.finish()]);\r\n    }\r\n\r\n    async createTetraSlicePipeline(descriptor: TetraSlicePipelineDescriptor): Promise<TetraSlicePipeline> {\r\n        // lazy init buffer here, optimization for only raytracing rendering\r\n        if (!this.tetraBuffers.outputVaryBufferPool.length) this.tetraBuffers.init();\r\n        return await new TetraSlicePipeline().init(this.gpu, this.rendererConfig, descriptor, this.tetraBuffers);\r\n    }\r\n    async createRaytracingPipeline(descriptor: RaytracingPipelineDescriptor): Promise<RaytracingPipeline> {\r\n        return await new RaytracingPipeline().init(this.gpu, this.rendererConfig, descriptor, this.sliceBuffers);\r\n    }\r\n\r\n    /** for TetraSlicePipeline, vertex shader is internally a compute shader, so it doesn't share bindgroups with fragment shader.\r\n     *  for RaytracingPipeline, vertex shader and fragment shader are in one traditional render pipeline, they share bindgroups.\r\n     */\r\n    createVertexShaderBindGroup(pipeline: TetraSlicePipeline | RaytracingPipeline, index: number, buffers: GPUBuffer[], label?: string) {\r\n        if (index === 0) throw \"Unable to create BindGroup 0, which is occupied by internal usages.\";\r\n        return this.gpu.createBindGroup(\r\n            ((pipeline as TetraSlicePipeline).computePipeline ?\r\n                (pipeline as TetraSlicePipeline).computePipeline :\r\n                (pipeline as RaytracingPipeline).pipeline\r\n            ), index, buffers.map(e => ({ buffer: e })), \"VertexShaderBindGroup<\" + label + \">\"\r\n        );\r\n    }\r\n    /** for TetraSlicePipeline, vertex shader is internally a compute shader, so it doesn't share bindgroups with fragment shader.\r\n     *  for RaytracingPipeline, vertex shader and fragment shader are in one traditional render pipeline, they share bindgroups.\r\n     */\r\n    createFragmentShaderBindGroup(pipeline: TetraSlicePipeline | RaytracingPipeline, index: number, buffers: GPUBuffer[], label?: string) {\r\n        if (index === 0 && (pipeline as RaytracingPipeline).pipeline) throw \"Unable to create BindGroup 0, which is occupied by internal usages.\";\r\n        return this.gpu.createBindGroup(\r\n            ((pipeline as TetraSlicePipeline).computePipeline ?\r\n                (pipeline as TetraSlicePipeline).renderPipeline :\r\n                (pipeline as RaytracingPipeline).pipeline\r\n            ), index, buffers.map(e => ({ buffer: e })), \"FragmentShaderBindGroup<\" + label + \">\"\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class RetinaSliceBufferMgr {\r\n\r\n    private queue: GPUQueue;\r\n    private rendererConfig: InternalSliceRendererConfig;\r\n    currentRetinaFacing: RetinaSliceFacing;\r\n    retinaMVMatChanged: boolean = true;\r\n    retinaFacingOrSlicesChanged: boolean = true;\r\n\r\n    uniformsBuffer: GPUBuffer;\r\n    thumbnailViewportBuffer: GPUBuffer;\r\n\r\n    retinaProjectJsBuffer = new Float32Array(16);\r\n    retinaMVMatJsBuffer = new Float32Array(16);\r\n    camProjJsBuffer = new Float32Array(4);\r\n    slicesJsBuffer = new Float32Array(4);\r\n    sliceGroupOffsetBuffer: GPUBuffer;\r\n    emitIndexSliceBuffer: GPUBuffer;\r\n\r\n    constructor(gpu: GPU, config: InternalSliceRendererConfig) {\r\n\r\n        this.emitIndexSliceBuffer = gpu.createBuffer(GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST, (4 << config.sliceGroupSizeBit) + (config.maxSlicesNumber << 4));\r\n\r\n        this.uniformsBuffer = gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, uniformsBufferLength);\r\n        this.thumbnailViewportBuffer = gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, 1024);\r\n\r\n        this.queue = gpu.device.queue;\r\n\r\n        const maxSliceGroupNum = Math.ceil(config.maxSlicesNumber / config.sliceGroupSize);\r\n        const sliceGroupOffsets = new Uint32Array(maxSliceGroupNum);\r\n        for (let i = 0; i < maxSliceGroupNum; i++) {\r\n            sliceGroupOffsets[i] = i * config.sliceGroupSize;\r\n        }\r\n        this.sliceGroupOffsetBuffer = gpu.createBuffer(GPUBufferUsage.COPY_SRC, sliceGroupOffsets);\r\n        this.rendererConfig = config;\r\n    }\r\n    updateBuffers(sliceGroupNum: number) {\r\n        if (this.retinaMVMatChanged) {\r\n            this.queue.writeBuffer(this.uniformsBuffer, retinaMVBufferOffset, this.retinaMVMatJsBuffer);\r\n            this.retinaMVMatChanged = false;\r\n        }\r\n        if (this.retinaFacingOrSlicesChanged) {\r\n            // refacing buffer stores not only refacing but also retina slices\r\n            this.queue.writeBuffer(this.uniformsBuffer, refacingBufferOffset, new Uint32Array([\r\n                this.currentRetinaFacing | ((sliceGroupNum) << (5 + this.rendererConfig.sliceGroupSizeBit))\r\n            ]));\r\n            this.retinaFacingOrSlicesChanged = false;\r\n        }\r\n    }\r\n    deepCopySectionConfigs(sectionConfigs: SectionConfig[], defaultRetinaResolution?: number) {\r\n        return sectionConfigs.map(e => ({\r\n            eyeStereo: e.eyeStereo ?? EyeStereo.None,\r\n            facing: e.facing,\r\n            slicePos: e.slicePos ?? 0,\r\n            viewport: {\r\n                x: e.viewport.x,\r\n                y: e.viewport.y,\r\n                width: e.viewport.width,\r\n                height: e.viewport.height,\r\n            },\r\n            resolution: e.resolution ?? defaultRetinaResolution\r\n        })) as SectionConfig[];\r\n    }\r\n    setSlicesAndSections(internalDisplayConfig: InternalDisplayConfig, displayConfig: DisplayConfig) {\r\n\r\n        let vpShift = this.rendererConfig.viewportCompressShift;\r\n        let prevRetinaResolution = internalDisplayConfig.retinaResolution;\r\n        if (displayConfig.retinaResolution) internalDisplayConfig.retinaResolution = (displayConfig.retinaResolution >> vpShift) << vpShift;\r\n\r\n        if (displayConfig.sections) {\r\n            // deepcopy\r\n            internalDisplayConfig.sections = this.deepCopySectionConfigs(displayConfig.sections, internalDisplayConfig.retinaResolution);\r\n        }\r\n\r\n        internalDisplayConfig.sections ??= [];\r\n        internalDisplayConfig.retinaLayers = displayConfig.retinaLayers;\r\n        let sections = internalDisplayConfig.sections;\r\n        let sliceStep = 2 / displayConfig.retinaLayers; // slice from -1 to 1\r\n        let sliceGroupNum = Math.ceil(displayConfig.retinaLayers / this.rendererConfig.sliceGroupSize);\r\n        let paddedSliceNum = sliceGroupNum << this.rendererConfig.sliceGroupSizeBit;\r\n        internalDisplayConfig.paddedSliceNum = paddedSliceNum;\r\n        let sectionNum = sections.length ?? 0;\r\n        let sectionGroupNum = Math.ceil(sectionNum / this.rendererConfig.sliceGroupSize);\r\n        let totalNum = paddedSliceNum + (sectionGroupNum << this.rendererConfig.sliceGroupSizeBit);\r\n        let slices = (this.slicesJsBuffer?.length === totalNum << 2) ? this.slicesJsBuffer : new Float32Array(totalNum << 2);\r\n        this.slicesJsBuffer = slices;\r\n        slices.fill(0);// todo : check neccesity?\r\n\r\n        let retinaWidth = internalDisplayConfig.retinaResolution;\r\n        let retinaX = 0, retinaY = 0;\r\n        for (let slice = -1, i = 0, sliceGroupOffset = 0; i < paddedSliceNum; slice += sliceStep, i++, sliceGroupOffset++) {\r\n            if (sliceGroupOffset === this.rendererConfig.sliceGroupSize) {\r\n                // start a new slice group\r\n                sliceGroupOffset = 0;\r\n                retinaX = 0;\r\n                retinaY = 0;\r\n            }\r\n            slices[(i << 2)] = slice; // slice pos. if slice > 1, discard in shader\r\n            slices[(i << 2) + 1] = 0; // leave 0 for retina slice (used only in cross section)\r\n            slices[(i << 2) + 2] = 0; // leave 0 for retina slice (used only in cross section)\r\n            let wshift = retinaWidth >> vpShift;\r\n            // a compressed viewport infomation\r\n            slices[(i << 2) + 3] = u32_to_f32(((retinaX >> vpShift) << 24) + ((retinaY >> vpShift) << 16) + (wshift << 8) + wshift);\r\n            if (retinaX + retinaWidth > this.rendererConfig.sliceTextureWidth ||\r\n                retinaY + retinaWidth > this.rendererConfig.sliceTextureHeight) {\r\n                this.setSlicesAndSections(internalDisplayConfig, { retinaResolution: prevRetinaResolution });\r\n                console.warn(\"Maximum retinaResolution reached\");\r\n                return;\r\n            }\r\n            retinaY += retinaWidth;\r\n            if (retinaY + retinaWidth > this.rendererConfig.sliceTextureHeight) {\r\n                retinaX += retinaWidth;\r\n                retinaY = 0;\r\n            }\r\n        }\r\n\r\n        internalDisplayConfig.sliceGroupNum = sliceGroupNum;\r\n        internalDisplayConfig.totalGroupNum = sliceGroupNum + sectionGroupNum;\r\n        if (sectionNum) {\r\n            let thumbnailViewportJsBuffer = new Float32Array(4 * 16);\r\n            let lastGroupPosition = sectionGroupNum - 1 << this.rendererConfig.sliceGroupSizeBit;\r\n            let lastGroupSlices = sections.length - lastGroupPosition;\r\n            // get max resolution widths per slice group\r\n\r\n            let deltaX = [];\r\n            let maxDx = 0;\r\n            for (let j = 0, sliceGroupOffset = 0, l = sections.length; j < l; j++, sliceGroupOffset++) {\r\n                let config = sections[j];\r\n                if (sliceGroupOffset === this.rendererConfig.sliceGroupSize) {\r\n                    sliceGroupOffset = 0;\r\n                    deltaX.push((maxDx >> vpShift) << vpShift);\r\n                    maxDx = 0;\r\n                }\r\n                maxDx = Math.max(maxDx, Math.ceil(config.resolution / config.viewport.height * config.viewport.width));\r\n            }\r\n            deltaX.push((maxDx >> 4) << 4);\r\n            retinaX = 0;\r\n            retinaY = 0;\r\n            let sliceGroup = 0;\r\n            for (let i = paddedSliceNum, j = 0, sliceGroupOffset = 0; i < totalNum; i++, j++, sliceGroupOffset++) {\r\n                let config = sections[j];\r\n                slices[(i << 2)] = config?.slicePos ?? 0;\r\n                slices[(i << 2) + 1] = u32_to_f32(((config?.facing) ?? 0) | ((config?.eyeStereo ?? 1) << 3));\r\n                slices[(i << 2) + 2] = u32_to_f32(j < lastGroupPosition ? this.rendererConfig.sliceGroupSize : lastGroupSlices);\r\n                if (config) {\r\n                    if (sliceGroupOffset === this.rendererConfig.sliceGroupSize) {\r\n                        retinaX = 0;\r\n                        retinaY = 0;\r\n                        sliceGroupOffset = 0;\r\n                        sliceGroup++;\r\n                    } else if (retinaY + config.resolution > this.rendererConfig.sliceTextureHeight) {\r\n                        retinaX += deltaX[sliceGroup];\r\n                        retinaY = 0;\r\n                    }\r\n\r\n                    let wshift = Math.ceil(config.resolution / config.viewport.height * config.viewport.width) >> vpShift;\r\n                    let hshift = config.resolution >> vpShift;\r\n                    slices[(i << 2) + 3] = u32_to_f32(\r\n                        (((retinaX >> vpShift)) << 24) + ((retinaY >> vpShift) << 16) + (wshift << 8) + hshift\r\n                    );\r\n                    thumbnailViewportJsBuffer[j << 2] = config.viewport.x;\r\n                    thumbnailViewportJsBuffer[(j << 2) + 1] = config.viewport.y;\r\n                    thumbnailViewportJsBuffer[(j << 2) + 2] = config.viewport.width;\r\n                    thumbnailViewportJsBuffer[(j << 2) + 3] = config.viewport.height;\r\n\r\n                    retinaY += (config.resolution >> vpShift) << vpShift;\r\n                }\r\n            }\r\n            this.queue.writeBuffer(this.thumbnailViewportBuffer, 0, thumbnailViewportJsBuffer);\r\n        }\r\n        this.queue.writeBuffer(this.emitIndexSliceBuffer, 0, slices);\r\n        this.retinaFacingOrSlicesChanged = true;\r\n    }\r\n    setRetinaProjectMatrix(camera: PerspectiveCamera | OrthographicCamera) {\r\n        if ((camera as PerspectiveCamera).fov) {\r\n            getPerspectiveProjectionMatrix(camera as PerspectiveCamera).mat4.writeBuffer(this.retinaProjectJsBuffer);\r\n        } else {\r\n            getOrthographicProjectionMatrix(camera as OrthographicCamera).mat4.writeBuffer(this.retinaProjectJsBuffer);\r\n        }\r\n        this.queue.writeBuffer(this.uniformsBuffer, retinaProjectBufferOffset, this.retinaProjectJsBuffer);\r\n    }\r\n    setRetinaViewMatrix(m: Mat4) {\r\n        let e = m.elem;\r\n        let facing = this.getFacing(e[8], e[9], e[10]);\r\n        if (facing !== this.currentRetinaFacing) {\r\n            this.retinaFacingOrSlicesChanged = true;\r\n            this.currentRetinaFacing = facing;\r\n        }\r\n        m.writeBuffer(this.retinaMVMatJsBuffer);\r\n        this.retinaMVMatChanged = true;\r\n    }\r\n    getRetinaCamera(): PerspectiveCamera | OrthographicCamera {\r\n        let c = this.retinaProjectJsBuffer;\r\n        let near = c[3] / c[2];\r\n        if (c[0] > 0) {\r\n            return {\r\n                fov: Math.atan(1 / c[1]) * _RAD2DEG * 2,\r\n                aspect: c[1] / c[0],\r\n                near,\r\n                far: c[2] * near / (1 + c[2])\r\n            };\r\n        } else {\r\n            return {\r\n                size: 1 / c[1],\r\n                aspect: - c[1] / c[0],\r\n                near,\r\n                far: near - 1.0 / c[2]\r\n            };\r\n        }\r\n    }\r\n    setCameraProjectMatrix(camera: PerspectiveCamera | OrthographicCamera) {\r\n        if ((camera as PerspectiveCamera).fov) {\r\n            getPerspectiveProjectionMatrix(camera as PerspectiveCamera).vec4.writeBuffer(this.camProjJsBuffer);\r\n        } else {\r\n            getOrthographicProjectionMatrix(camera as OrthographicCamera).vec4.writeBuffer(this.camProjJsBuffer);\r\n            this.camProjJsBuffer[0] = -this.camProjJsBuffer[0]; // use negative to mark Orthographic in shader\r\n        }\r\n        this.queue.writeBuffer(this.uniformsBuffer, camProjBufferOffset, this.camProjJsBuffer);\r\n    }\r\n    getFacing(x: number, y: number, z: number) {\r\n        let xa = Math.abs(x);\r\n        let ya = Math.abs(y);\r\n        let za = Math.abs(z);\r\n        switch (za > ya ? za > xa ? 2 : 0 : ya > xa ? 1 : 0) {\r\n            case 0:\r\n                return x > 0 ? RetinaSliceFacing.POSX : RetinaSliceFacing.NEGX;\r\n            case 1:\r\n                return y > 0 ? RetinaSliceFacing.POSY : RetinaSliceFacing.NEGY;\r\n            default:\r\n                return z > 0 ? RetinaSliceFacing.POSZ : RetinaSliceFacing.NEGZ;\r\n        }\r\n    }\r\n}\r\nclass CrossRenderPass {\r\n    descClear: GPURenderPassDescriptor;\r\n    descLoad: GPURenderPassDescriptor;\r\n    clearRenderPipelinePromise: Promise<GPURenderPipeline>;\r\n    clearRenderPipeline: GPURenderPipeline;\r\n    sliceTextureSize: { width: number, height: number };\r\n    sliceView: GPUTextureView;\r\n    constructor(gpu: GPU) {\r\n        // sliceTexture covered by sliceGroupSize x 2 atlas of sliceResolution x sliceResolution\r\n        let maxTextureSize = gpu.device.limits.maxTextureDimension2D;\r\n        let sliceTextureSize = { width: maxTextureSize >> 1, height: maxTextureSize };\r\n        this.sliceTextureSize = sliceTextureSize;\r\n        let sliceTexture = gpu.device.createTexture({\r\n            size: sliceTextureSize, format: gpu.preferredFormat,\r\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\r\n        });\r\n        this.sliceView = sliceTexture.createView();\r\n\r\n        let depthTexture = gpu.device.createTexture({\r\n            size: sliceTextureSize, format: 'depth24plus',\r\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\r\n        });\r\n        let depthView = depthTexture.createView();\r\n        this.descClear = {\r\n            colorAttachments: [{\r\n                view: this.sliceView,\r\n                clearValue: { r: 0, g: 0, b: 0, a: 0.0 },\r\n                loadOp: 'clear' as GPULoadOp,\r\n                storeOp: 'store' as GPUStoreOp\r\n            }],\r\n            depthStencilAttachment: {\r\n                view: depthView,\r\n                depthClearValue: 1.0,\r\n                depthLoadOp: 'clear' as GPULoadOp,\r\n                depthStoreOp: 'store' as GPUStoreOp,\r\n            }\r\n        };\r\n\r\n        this.descLoad = {\r\n            colorAttachments: [{\r\n                view: this.sliceView,\r\n                loadOp: 'load' as GPULoadOp,\r\n                storeOp: 'store' as GPUStoreOp\r\n            }],\r\n            depthStencilAttachment: {\r\n                view: depthView,\r\n                depthLoadOp: 'load' as GPULoadOp,\r\n                depthStoreOp: 'store' as GPUStoreOp,\r\n            }\r\n        };\r\n        let clearModule = gpu.device.createShaderModule({\r\n            code:\r\n                \"@vertex fn v()->@builtin(position) vec4<f32>{ return vec4<f32>();} @fragment fn f()->@location(0) vec4<f32>{ return vec4<f32>();}\"\r\n        });\r\n        this.clearRenderPipelinePromise = gpu.device.createRenderPipelineAsync({\r\n            layout: 'auto',\r\n            vertex: {\r\n                module: clearModule,\r\n                entryPoint: 'v',\r\n            },\r\n            fragment: {\r\n                module: clearModule,\r\n                entryPoint: 'f',\r\n                targets: [{ format: gpu.preferredFormat }]\r\n            },\r\n            depthStencil: {\r\n                format: 'depth24plus',\r\n                depthCompare: 'less',\r\n                depthWriteEnabled: true\r\n            }\r\n        });\r\n    }\r\n    async init() {\r\n        this.clearRenderPipeline = await this.clearRenderPipelinePromise;\r\n    }\r\n}\r\nconst outputAttributeUsage = typeof GPUBufferUsage === 'undefined' ? null : GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE | GPUBufferUsage.VERTEX;\r\n\r\nexport class TetraSliceBufferMgr {\r\n    maxCrossSectionBufferSize: number;\r\n    gpu: GPU;\r\n    outputVaryBufferPool: Array<GPUBuffer> = []; // all the vary buffers for pipelines\r\n    private indicesInOutputBufferPool: Set<number>;\r\n    buffers: { buffer: GPUBuffer }[];\r\n    // outputVaryBuffer: GPUBuffer[];\r\n    constructor(gpu: GPU, config: InternalSliceRendererConfig, sliceBuffers: RetinaSliceBufferMgr) {\r\n        this.buffers = [\r\n            { buffer: sliceBuffers.emitIndexSliceBuffer },\r\n            { buffer: sliceBuffers.uniformsBuffer },\r\n            { buffer: sliceBuffers.thumbnailViewportBuffer },\r\n        ];\r\n        this.gpu = gpu;\r\n        this.maxCrossSectionBufferSize = config.maxCrossSectionBufferSize;\r\n    }\r\n    init() {\r\n        // lazy init buffer in creeating first tetraslice pipeline, optimization for only raytracing rendering\r\n        this.outputVaryBufferPool.push(this.gpu.createBuffer(outputAttributeUsage, this.maxCrossSectionBufferSize, \"Output buffer for builtin(position)\"));\r\n    }\r\n    prepareNewPipeline() {\r\n        this.indicesInOutputBufferPool = new Set;\r\n        this.indicesInOutputBufferPool.add(0); // default builtin(position) buffer\r\n        return [this.outputVaryBufferPool[0]];\r\n    }\r\n    destroy() {\r\n        for (const buffer of this.outputVaryBufferPool) {\r\n            buffer.destroy();\r\n        }\r\n    }\r\n    ////// caution: data race here\r\n    requireOutputBuffer(id: number, size: number, outBuffers: GPUBuffer[]): GPUBuffer {\r\n        if (id === 0) return this.outputVaryBufferPool[0];\r\n        let expectedSize = this.maxCrossSectionBufferSize * size;\r\n        for (let i = 0; i < this.outputVaryBufferPool.length; i++) {\r\n            if (this.indicesInOutputBufferPool.has(i)) continue; // we can't bind the same buffer again\r\n            let buffer = this.outputVaryBufferPool[i];\r\n            if (buffer.size === expectedSize) {\r\n                // found unused exactly sized buffer\r\n                this.indicesInOutputBufferPool.add(i);\r\n                outBuffers.push(buffer);\r\n                return buffer;\r\n            }\r\n        }\r\n        // no buffer found, we need to create\r\n        let buffer = this.gpu.createBuffer(outputAttributeUsage, expectedSize, \"Output buffer for \" + size + \" vec4(s)\");\r\n        this.indicesInOutputBufferPool.add(this.outputVaryBufferPool.length);\r\n        this.outputVaryBufferPool.push(buffer);\r\n        outBuffers.push(buffer);\r\n        return buffer;\r\n    }\r\n}\r\nclass RetinaRenderPass implements IRetinaRenderPass {\r\n    pipeline: GPURenderPipeline;\r\n    pipelinePromise: Promise<GPURenderPipeline>;\r\n    bindgroup: GPUBindGroup;\r\n    alphaBindgroup: GPUBindGroup;\r\n    crossRenderPass: CrossRenderPass;\r\n    readonly __brand: \"RetinaRenderPass\";\r\n    private gpu: GPU;\r\n    private config: InternalSliceRendererConfig;\r\n    private sliceBuffers: RetinaSliceBufferMgr;\r\n    descriptor: RetinaRenderPassDescriptor\r\n\r\n    constructor(gpu: GPU, config: InternalSliceRendererConfig, sliceBuffers: RetinaSliceBufferMgr, crossRenderPass: CrossRenderPass, descriptor?: RetinaRenderPassDescriptor) {\r\n        this.gpu = gpu;\r\n        this.config = config;\r\n        this.descriptor = descriptor ?? {};\r\n        this.sliceBuffers = sliceBuffers;\r\n        this.crossRenderPass = crossRenderPass;\r\n        let retinaRenderCode = refacingMatsCode + StructDefSliceInfo + StructDefUniformBuffer + `\r\nstruct tsxvOutputType{\r\n    @builtin(position) position : vec4<f32>,\r\n    @location(0) relativeFragPosition : vec3<f32>,\r\n    @location(1) crossHair : f32,\r\n    @location(2) rayForCalOpacity : vec4<f32>,\r\n    @location(3) retinaCoord : vec3<f32>,\r\n    @location(4) normalForCalOpacity : vec4<f32>,\r\n}\r\nstruct tsxfInputType{\r\n    @location(0) relativeFragPosition : vec3<f32>,\r\n    @location(1) crossHair : f32,\r\n    @location(2) rayForCalOpacity : vec4<f32>,\r\n    @location(3) retinaCoord : vec3<f32>,\r\n    @location(4) normalForCalOpacity : vec4<f32>,\r\n}\r\n@group(0) @binding(0) var<storage,read> slice : array<tsxSliceInfo,${this.config.maxSlicesNumber}>;\r\n@group(0) @binding(1) var<uniform> tsx_uniforms : tsxUniformBuffer;\r\n@group(0) @binding(2) var<uniform> thumbnailViewport : array<vec4<f32>,16>;\r\n\r\n@vertex fn mainVertex(@builtin(vertex_index) vindex : u32, @builtin(instance_index) iindex : u32) -> tsxvOutputType {\r\n    const pos = array<vec2<f32>, 4>(\r\n        vec2<f32>(-1.0, -1.0),\r\n        vec2<f32>(-1.0, 1.0),\r\n        vec2<f32>( 1.0, -1.0),\r\n        vec2<f32>( 1.0, 1.0),\r\n    );\r\n    var sindex = iindex;\r\n    var pos2d = pos[vindex];\r\n    let stereoLR = f32(iindex & 1) - 0.5;\r\n    if (slice[tsx_uniforms.sliceOffset].flag == 0 && tsx_uniforms.eyeCross.y != 0.0){\r\n        sindex = iindex >> 1;\r\n    }\r\n    let s = slice[sindex + tsx_uniforms.sliceOffset];\r\n    // let coord = vec2<f32>(pos2d.x, -pos2d.y) * 0.5 + 0.5;\r\n    let ray = vec4<f32>(pos2d, s.slicePos, 1.0);\r\n    var retinaCoord: vec4<f32>;\r\n    var glPosition: vec4<f32>;\r\n    var camRay: vec4<f32>;\r\n    var normal: vec4<f32>;\r\n    let x = f32(((s.viewport >> 24) & 0xFF) << ${this.config.viewportCompressShift}) * ${1 / this.config.sliceTextureWidth};\r\n    let y = f32(((s.viewport >> 16) & 0xFF) << ${this.config.viewportCompressShift}) * ${1 / this.config.sliceTextureHeight};\r\n    let w = f32(((s.viewport >> 8 ) & 0xFF) << ${this.config.viewportCompressShift}) * ${1 / this.config.sliceTextureWidth};\r\n    let h = f32((s.viewport & 0xFF) << ${this.config.viewportCompressShift}) * ${1 / this.config.sliceTextureHeight};\r\n    var crossHair : f32;\r\n    if (slice[tsx_uniforms.sliceOffset].flag == 0){\r\n        crossHair = 0.0;\r\n        let stereoLR_offset = -stereoLR * tsx_uniforms.eyeCross.y;\r\n        let se = sin(stereoLR_offset);\r\n        let ce = cos(stereoLR_offset);\r\n        var pureRotationMvMat = tsx_uniforms.retinaMV;\r\n        pureRotationMvMat[3].z = 0.0;\r\n        let eyeMat = mat4x4<f32>(\r\n            ce,0,se,0,\r\n            0,1,0,0,\r\n            -se,0,ce,0,\r\n            0,0,tsx_uniforms.retinaMV[3].z,1\r\n        );\r\n        let omat = eyeMat * pureRotationMvMat * tsx_refacingMats[tsx_uniforms.refacing & 7];\r\n        camRay = omat * ray;\r\n        retinaCoord = tsx_refacingMats[tsx_uniforms.refacing & 7] * ray;\r\n        glPosition = tsx_uniforms.retinaP * camRay;\r\n        if(tsx_uniforms.retinaP[3].w > 0){ // Orthographic\r\n            camRay = vec4<f32>(0.0,0.0,-1.0,1.0);\r\n        }\r\n        normal = omat[2];\r\n        // todo: viewport of retina slices\r\n        glPosition.x = (glPosition.x) * tsx_uniforms.screenAspect + step(0.0001, abs(tsx_uniforms.eyeCross.y)) * stereoLR * glPosition.w;\r\n    }else{\r\n        let vp = thumbnailViewport[sindex + tsx_uniforms.sliceOffset - (tsx_uniforms.refacing >> 5)];\r\n        crossHair = tsx_uniforms.eyeCross.z / vp.w * step(abs(s.slicePos),0.1);\r\n        glPosition = vec4<f32>(ray.x * vp.z * tsx_uniforms.screenAspect + vp.x, ray.y * vp.w + vp.y,0.5,1.0);\r\n        camRay = vec4<f32>(pos[vindex].x * vp.z / vp.w,pos[vindex].y,0.0,1.0); // for rendering crosshair\r\n    }\r\n    \r\n    let texelCoord = array<vec2<f32>, 4>(\r\n        vec2<f32>(x, y+h),\r\n        vec2<f32>(x, y),\r\n        vec2<f32>( x+w, y+h),\r\n        vec2<f32>( x+w, y),\r\n    );\r\n    return tsxvOutputType(\r\n        glPosition,\r\n        vec3<f32>(texelCoord[vindex], s.slicePos),\r\n        crossHair,\r\n        camRay,\r\n        retinaCoord.xyz,\r\n        normal\r\n    );\r\n}\r\n\r\n@group(0) @binding(3) var tsx_txt: texture_2d<f32>;\r\n@group(0) @binding(4) var tsx_splr: sampler;\r\n${descriptor?.alphaShader?.code ?? `\r\nfn mainAlpha(color: vec4<f32>, retinaCoord: vec3<f32>) -> f32{\r\n    return color.a;\r\n}\r\n`}\r\n@fragment fn mainFragment(input : tsxfInputType) -> @location(0) vec4<f32> {\r\n    let color = textureSample(tsx_txt, tsx_splr, input.relativeFragPosition.xy);\r\n    var alpha: f32 = 1.0;\r\n    var factor = 0.0;\r\n    if (slice[tsx_uniforms.sliceOffset].flag == 0){\r\n        let dotvalue = dot(normalize(input.rayForCalOpacity.xyz), input.normalForCalOpacity.xyz);\r\n        let factor = tsx_uniforms.layerOpacity / (clamp(-dotvalue,0.0,1.0));\r\n        alpha = clamp(${descriptor?.alphaShader?.entryPoint ?? \"mainAlpha\"}(color, input.retinaCoord) * factor,0.0,1.0);\r\n    }else if (input.crossHair > 0.0) {\r\n    let cross = abs(input.rayForCalOpacity.xy);\r\n    factor = step(cross.x, input.crossHair * 0.05) + step(cross.y, input.crossHair * 0.05);\r\n    factor *= step(cross.x, input.crossHair) * step(cross.y, input.crossHair);\r\n}\r\nreturn vec4<f32>(mix(color.rgb, vec3<f32>(1.0) - color.rgb, clamp(factor, 0.0, 1.0)), alpha);\r\n}\r\n`;\r\n        const retinaRenderShaderModule = gpu.device.createShaderModule({\r\n            code: retinaRenderCode\r\n        });\r\n        this.pipelinePromise = gpu.device.createRenderPipelineAsync({\r\n            layout: 'auto',\r\n            vertex: {\r\n                module: retinaRenderShaderModule,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                module: retinaRenderShaderModule,\r\n                entryPoint: 'mainFragment',\r\n                targets: [{\r\n                    format: this.config.enableFloat16Blend ? 'rgba16float' : this.gpu.preferredFormat,\r\n                    blend: {\r\n                        color: {\r\n                            srcFactor: \"src-alpha\" as GPUBlendFactor,\r\n                            dstFactor: \"one-minus-src-alpha\" as GPUBlendFactor,\r\n                            operation: \"add\" as GPUBlendOperation\r\n                        },\r\n                        alpha: {}\r\n                    }\r\n                }],\r\n            },\r\n            depthStencil: {\r\n                depthWriteEnabled: true,\r\n                depthCompare: 'less',\r\n                format: 'depth24plus',\r\n            },\r\n            primitive: { topology: 'triangle-strip' }\r\n        });\r\n    }\r\n    async init() {\r\n        this.pipeline = await this.pipelinePromise;\r\n        this.bindgroup = this.gpu.createBindGroup(this.pipeline, 0, [\r\n            { buffer: this.sliceBuffers.emitIndexSliceBuffer },\r\n            { buffer: this.sliceBuffers.uniformsBuffer },\r\n            { buffer: this.sliceBuffers.thumbnailViewportBuffer },\r\n            this.crossRenderPass.sliceView,\r\n            linearTextureSampler,\r\n        ], \"retinaBindGroup\");\r\n        if (this.descriptor.alphaShaderBindingResources) {\r\n            this.alphaBindgroup = this.gpu.createBindGroup(\r\n                this.pipeline, 1, this.descriptor.alphaShaderBindingResources, \"retinaAlphaBindGroup\"\r\n            );\r\n        }\r\n        return this;\r\n    }\r\n}\r\n/** \r\n * ---------------------------------\r\n * screen render pass\r\n * for float16 blending and convert color to srgb\r\n * ---------------------------------\r\n *  */\r\nconst screenRenderCode = StructDefUniformBuffer + `\r\n@group(0) @binding(0) var tsx_txt: texture_2d<f32>;\r\n@group(0) @binding(1) var tsx_splr: sampler;\r\n@group(0) @binding(2) var<uniform>tsx_uniforms : tsxUniformBuffer;\r\nstruct tsxvOutputType{\r\n    @builtin(position) position: vec4<f32>,\r\n    @location(0) fragPosition: vec2<f32>,\r\n}\r\nstruct tsxfInputType{\r\n    @location(0) fragPosition: vec2<f32>,\r\n}\r\n@vertex fn mainVertex(@builtin(vertex_index) index : u32) -> tsxvOutputType {\r\n    const pos = array<vec2<f32>, 4>(\r\n        vec2<f32>(-1.0, -1.0),\r\n        vec2<f32>(-1.0, 1.0),\r\n        vec2<f32>(1.0, -1.0),\r\n        vec2<f32>(1.0, 1.0),\r\n    );\r\n    const uv = array<vec2<f32>, 4>(\r\n        vec2<f32>(0.0, 1.0),\r\n        vec2<f32>(0.0, 0.0),\r\n        vec2<f32>(1.0, 1.0),\r\n        vec2<f32>(1.0, 0.0),\r\n    );\r\n    return tsxvOutputType(vec4<f32>(pos[index], 0.0, 1.0), uv[index]);\r\n}\r\n@fragment fn mainFragment(input: tsxfInputType) -> @location(0) vec4 < f32 > {\r\nlet color = textureSample(tsx_txt, tsx_splr, input.fragPosition);\r\nvar factor = 0.0;\r\nif(tsx_uniforms.eyeCross.z > 0.0 && tsx_uniforms.layerOpacity > 0.0){\r\n    let aspectedCross = tsx_uniforms.eyeCross.z * tsx_uniforms.screenAspect;\r\n    if (tsx_uniforms.eyeCross.x != 0.0) {\r\n        let cross1 = abs(input.fragPosition - vec2<f32>(0.25, 0.5)) * 2.0;\r\n        let cross2 = abs(input.fragPosition - vec2<f32>(0.75, 0.5)) * 2.0;\r\n        factor = step(cross1.x, 0.05 * aspectedCross) + step(cross2.x, 0.05 * aspectedCross) + step(cross1.y, tsx_uniforms.eyeCross.z * 0.05);\r\n        factor *= step(cross1.y, tsx_uniforms.eyeCross.z) * (step(cross1.x, aspectedCross) + step(cross2.x, aspectedCross));\r\n    } else {\r\n        let cross = abs(input.fragPosition - vec2<f32>(0.5, 0.5)) * 2.0;\r\n        factor = step(cross.x, 0.05 * aspectedCross) + step(cross.y, tsx_uniforms.eyeCross.z * 0.05);\r\n        factor *= step(cross.y, tsx_uniforms.eyeCross.z) * step(cross.x, aspectedCross);\r\n    }\r\n}\r\nreturn vec4<f32>(mix(color.rgb, vec3<f32>(1.0) - color.rgb, clamp(factor, 0.0, 1.0)), 1.0);\r\n}\r\n`;\r\nclass ScreenRenderPass {\r\n    view: GPUTextureView;\r\n    depthView: GPUTextureView;\r\n    pipeline: GPURenderPipeline;\r\n    pipelinePromise: Promise<GPURenderPipeline>;\r\n    bindgroup: GPUBindGroup;\r\n    texture: GPUTexture;\r\n    depthTexture: GPUTexture;\r\n    private gpu: GPU;\r\n    private config: InternalSliceRendererConfig;\r\n    private sliceBuffers: RetinaSliceBufferMgr;\r\n    constructor(gpu: GPU, config: InternalSliceRendererConfig, sliceBuffers: RetinaSliceBufferMgr) {\r\n        this.gpu = gpu;\r\n        this.config = config;\r\n        this.sliceBuffers = sliceBuffers;\r\n        let screenRenderShaderModule = gpu.device.createShaderModule({\r\n            code: screenRenderCode\r\n        });\r\n        this.pipelinePromise = gpu.device.createRenderPipelineAsync({\r\n            layout: 'auto',\r\n            vertex: {\r\n                module: screenRenderShaderModule,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                module: screenRenderShaderModule,\r\n                entryPoint: 'mainFragment',\r\n                targets: [{\r\n                    format: gpu.preferredFormat\r\n                }],\r\n            },\r\n            primitive: { topology: 'triangle-strip' }\r\n        });\r\n    }\r\n    setSize(size: GPUExtent3DStrict) {\r\n        if (this.texture) this.texture.destroy();\r\n        if (this.depthTexture) this.depthTexture.destroy();\r\n\r\n        // if (!this.pipeline) throw \"TetraSliceRenderer: ScreenRenderPipeline is not initialized.\";\r\n        this.texture = this.gpu.device.createTexture({\r\n            size, format: this.config.enableFloat16Blend ? 'rgba16float' : this.gpu.preferredFormat,\r\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\r\n        });\r\n        this.depthTexture = this.gpu.device.createTexture({\r\n            size, format: 'depth24plus',\r\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\r\n        });\r\n        this.view = this.texture.createView();\r\n        this.depthView = this.depthTexture.createView();\r\n\r\n        if (this.pipeline) {\r\n            this.bindgroup = this.gpu.createBindGroup(this.pipeline, 0, [\r\n                this.view,\r\n                linearTextureSampler,\r\n                { buffer: this.sliceBuffers.uniformsBuffer },\r\n            ], \"screenBindGroup\");\r\n        }\r\n        let aspect: number;\r\n        if ((size as GPUExtent3DDict).height) {\r\n            aspect = (size as GPUExtent3DDict).height / (size as GPUExtent3DDict).width;\r\n        } else {\r\n            aspect = size[1] / size[0];\r\n        }\r\n        this.gpu.device.queue.writeBuffer(this.sliceBuffers.uniformsBuffer, screenAspectBufferOffset, new Float32Array([aspect]));\r\n    }\r\n    async init() {\r\n        this.pipeline = await this.pipelinePromise;\r\n        this.bindgroup = this.gpu.createBindGroup(this.pipeline, 0, [\r\n            this.view,\r\n            linearTextureSampler,\r\n            { buffer: this.sliceBuffers.uniformsBuffer },\r\n        ], \"screenBindGroup\");\r\n    }\r\n}\r\nconst _vec4 = new Vec4;\r\nconst _vec42 = new Vec4;\r\n\r\nexport class WireFrameRenderPass {\r\n    private pipeline: GPURenderPipeline;\r\n    private pipelinePromise: Promise<GPURenderPipeline>;\r\n    dataBuffer: GPUBuffer;\r\n    private bindGroup: GPUBindGroup;\r\n    gpu: GPU;\r\n    private config: InternalSliceRendererConfig;\r\n    renderState: RenderState;\r\n    renderPassDesc: GPURenderPassDescriptor;\r\n    constructor(gpu: GPU, config: InternalSliceRendererConfig) {\r\n        this.gpu = gpu;\r\n        this.config = config;\r\n        const shaderModule = gpu.device.createShaderModule({\r\n            code: StructDefUniformBuffer + `\r\n@group(0) @binding(0) var<uniform> tsx_uniforms : tsxUniformBuffer;\r\n@vertex fn tsxVMain(@location(0) inPos: vec4<f32>, @builtin(instance_index) idx: u32) -> @builtin(position) vec4<f32>{\r\n    let stereoLR = f32(idx & 1) - 0.5;\r\n    let stereoLR_offset = -stereoLR * tsx_uniforms.eyeCross.y;\r\n    let se = sin(stereoLR_offset);\r\n    let ce = cos(stereoLR_offset);\r\n    var pureRotationMvMat = tsx_uniforms.retinaMV;\r\n    pureRotationMvMat[3].z = 0.0;\r\n    let eyeMat = mat4x4<f32>(\r\n        ce,0,se,0,\r\n        0,1,0,0,\r\n        -se,0,ce,0,\r\n        0,0,tsx_uniforms.retinaMV[3].z,1\r\n    );\r\n    var glPosition = tsx_uniforms.retinaP * eyeMat * pureRotationMvMat * vec4(inPos.xyz, 1.0);\r\n    glPosition.x = (glPosition.x) * tsx_uniforms.screenAspect + step(0.0001, abs(tsx_uniforms.eyeCross.y)) * stereoLR * glPosition.w;\r\n    return glPosition;\r\n}\r\n@fragment fn tsxFMain()->@location(0) vec4<f32>{\r\n    return vec4<f32>(1.0,0.0,0.0,1.0);\r\n}`,\r\n        });\r\n        this.pipelinePromise = gpu.device.createRenderPipelineAsync({\r\n            layout: 'auto',\r\n            vertex: {\r\n                module: shaderModule,\r\n                entryPoint: \"tsxVMain\",\r\n                buffers: [\r\n                    {\r\n                        attributes: [\r\n                            {\r\n                                shaderLocation: 0,\r\n                                offset: 0,\r\n                                format: \"float32x4\",\r\n                            }\r\n                        ],\r\n                        arrayStride: 4 * 4,\r\n                    }\r\n                ]\r\n            },\r\n            primitive: {\r\n                topology: \"line-list\"\r\n            },\r\n            fragment: {\r\n                targets: [\r\n                    { format: this.config.enableFloat16Blend ? 'rgba16float' : this.gpu.preferredFormat },\r\n                ],\r\n                module: shaderModule,\r\n                entryPoint: \"tsxFMain\"\r\n            },\r\n            depthStencil: {\r\n                depthWriteEnabled: true,\r\n                depthCompare: 'less',\r\n                format: 'depth24plus',\r\n            }\r\n        });\r\n\r\n    }\r\n    async init() {\r\n        this.pipeline = await this.pipelinePromise;\r\n    }\r\n    render(buffer: GPUBuffer, vertices: number) {\r\n        if (!this.pipeline) return;\r\n        this.bindGroup ??= this.gpu.createBindGroup(this.pipeline, 0, [{\r\n            buffer: this.renderState.sliceBuffers.uniformsBuffer\r\n        }]);\r\n        const renderPassEncoder = this.renderState.commandEncoder.beginRenderPass(this.renderPassDesc);\r\n        renderPassEncoder.setPipeline(this.pipeline);\r\n        renderPassEncoder.setVertexBuffer(0, buffer);\r\n        renderPassEncoder.setBindGroup(0, this.bindGroup);\r\n        // todo: deal with no retina voxel / non stero mode\r\n        renderPassEncoder.draw(vertices, 2);\r\n        renderPassEncoder.end();\r\n    }\r\n}\r\n\r\nclass RenderState {\r\n    commandEncoder: GPUCommandEncoder;\r\n    computePassEncoder: GPUComputePassEncoder;\r\n    pipeline: TetraSlicePipeline;\r\n    tetraSliceBufferMgr: TetraSliceBufferMgr;\r\n    config: InternalSliceRendererConfig;\r\n    // slicePassEncoder: GPURenderPassEncoder;\r\n    sliceIndex: number;\r\n    needClear: boolean;\r\n    tetraBuffers: TetraSliceBufferMgr;\r\n    sliceBuffers: RetinaSliceBufferMgr;\r\n    crossRenderPass: CrossRenderPass;\r\n    frustumRange: Vec4[];\r\n    constructor(gpu: GPU, config: InternalSliceRendererConfig, sliceBuffers: RetinaSliceBufferMgr, tetraBuffers: TetraSliceBufferMgr, crossRenderPass: CrossRenderPass) {\r\n        this.commandEncoder = gpu.device.createCommandEncoder();\r\n        this.tetraBuffers = tetraBuffers;\r\n        this.sliceBuffers = sliceBuffers;\r\n        this.crossRenderPass = crossRenderPass;\r\n        this.config = config;\r\n    }\r\n    /** Set TetraSlicePipeline and prepare GPU resources.\r\n     *  Next calls should be function sliceTetras or setBindGroup.\r\n     */\r\n    beginTetras(pipeline: TetraSlicePipeline) {\r\n        // let { commandEncoder, sliceIndex, needClear } = this.renderState;\r\n        // clear triagle slice vertex output pointer to zero (emitIndex part)\r\n        this.commandEncoder.clearBuffer(this.sliceBuffers.emitIndexSliceBuffer, this.config.maxSlicesNumber << 4, 4 << this.config.sliceGroupSizeBit);\r\n        // clear triagle slice vertex output data to zero\r\n        this.commandEncoder.clearBuffer(pipeline.outputVaryBuffer[0]);\r\n        this.computePassEncoder = this.commandEncoder.beginComputePass();\r\n        this.computePassEncoder.setPipeline(pipeline.computePipeline);\r\n        this.computePassEncoder.setBindGroup(0, pipeline.computeBindGroup0);\r\n        this.pipeline = pipeline;\r\n    }\r\n    // todo 写清楚 setBindGroup、drawTetras(bindGroups的区别\r\n    setBindGroup(index: number, bindGroup: GPUBindGroup) {\r\n        this.computePassEncoder.setBindGroup(index, bindGroup);\r\n    }\r\n    /** Compute slice of given bindgroup attribute data.\r\n     *  beginTetras should be called at first to specify a tetraSlicePipeline\r\n     *  Next calls should be function sliceTetras, setBindGroup or drawTetras.\r\n     */\r\n    sliceTetras(vertexBindGroup: GPUBindGroup, tetraCount: number, instanceCount?: number) {\r\n        if (vertexBindGroup) this.computePassEncoder.setBindGroup(1, vertexBindGroup);\r\n        this.computePassEncoder.dispatchWorkgroups(Math.ceil(tetraCount / 256), instanceCount); // todo: change workgroups\r\n    }\r\n    /** This function draw slices on a internal framebuffer\r\n     *  Every beginTetras call should be end with drawTetras call\r\n     */\r\n    drawTetras(bindGroups?: { group: number, binding: GPUBindGroup }[]) {\r\n        this.computePassEncoder.end();\r\n\r\n        let slicePassEncoder = this.commandEncoder.beginRenderPass(\r\n            this.needClear ? this.crossRenderPass.descClear : this.crossRenderPass.descLoad\r\n        );\r\n        slicePassEncoder.setPipeline(this.pipeline.renderPipeline);\r\n        for (let i = 0; i < this.pipeline.vertexOutNum; i++) {\r\n            slicePassEncoder.setVertexBuffer(i, this.pipeline.outputVaryBuffer[i]);\r\n        }\r\n        if (bindGroups) {\r\n            for (let { group, binding } of bindGroups) {\r\n                slicePassEncoder.setBindGroup(group, binding);\r\n            }\r\n        }\r\n        // bitshift: outputBufferSize / 16 for vertices number, / sliceGroupSize for one stride\r\n        let bitshift = 4 + this.config.sliceGroupSizeBit;\r\n        let verticesStride = this.config.maxCrossSectionBufferSize >> bitshift;\r\n        let offsetVert = 0;\r\n        let sliceJsOffset = (this.sliceIndex << (2 + this.config.sliceGroupSizeBit)) + 3;\r\n        let vpShift = this.config.viewportCompressShift;\r\n        for (let c = 0; c < this.config.sliceGroupSize; c++, offsetVert += verticesStride) {\r\n            let vp = f32_to_u32(this.sliceBuffers.slicesJsBuffer[sliceJsOffset + (c << 2)]);\r\n            slicePassEncoder.setViewport(\r\n                ((vp >> 24) & 0xFF) << vpShift,\r\n                ((vp >> 16) & 0xFF) << vpShift,\r\n                ((vp >> 8) & 0xFF) << vpShift,\r\n                (vp & 0xFF) << vpShift,\r\n                0, 1\r\n            );\r\n            slicePassEncoder.draw(verticesStride, 1, offsetVert);\r\n        }\r\n        slicePassEncoder.end();\r\n        this.needClear = false;\r\n    }\r\n    drawRaytracing(pipeline: RaytracingPipeline, bindGroups?: GPUBindGroup[]) {\r\n        let slicePassEncoder = this.commandEncoder.beginRenderPass(\r\n            this.needClear ? this.crossRenderPass.descClear : this.crossRenderPass.descLoad\r\n        );\r\n        slicePassEncoder.setPipeline(pipeline.pipeline);\r\n        slicePassEncoder.setBindGroup(0, pipeline.bindGroup0);\r\n        if (bindGroups && bindGroups[0]) slicePassEncoder.setBindGroup(1, bindGroups[0]);\r\n        slicePassEncoder.draw(4, this.config.sliceGroupSize);\r\n        slicePassEncoder.end();\r\n        this.needClear = false;\r\n    }\r\n\r\n    testWithFrustumData(obb: AABB, camMat: AffineMat4 | Obj4, modelMat?: AffineMat4 | Obj4): boolean {\r\n        this.frustumRange ??= this.getFrustumRange(camMat);\r\n        if (!this.frustumRange) return true;\r\n        let relP = _vec4.copy((camMat as AffineMat4).vec ?? (camMat as Obj4).position);\r\n        if (modelMat) relP.subs(((modelMat as AffineMat4).vec ?? (modelMat as Obj4).position));\r\n        if (!modelMat) {\r\n            for (let f of this.frustumRange) {\r\n                if (obb.testPlane(new Plane(f, f.dot(relP))) === 1) return false;\r\n            }\r\n        } else if ((modelMat as AffineMat4).mat) {\r\n            for (let f of this.frustumRange) { // todo: .t() to optimise\r\n                if (obb.testPlane(new Plane(_vec42.mulmatvset((modelMat as AffineMat4).mat.t(), f), f.dot(relP))) === 1) return false;\r\n            }\r\n        } else {\r\n            for (let f of this.frustumRange) {\r\n                if (obb.testPlane(new Plane(_vec42.copy(f).rotatesconj((modelMat as Obj4).rotation), f.dot(relP))) === 1) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    getFrustumRange(camMat: AffineMat4 | Obj4, allRange?: boolean) {\r\n        let minslice = this.sliceIndex << this.config.sliceGroupSizeBit;\r\n        let maxslice = minslice + this.config.sliceGroupSize - 1;\r\n        let isRetinaGroup = this.sliceBuffers.slicesJsBuffer[(minslice << 2) + 1];\r\n        let frustum: number[];\r\n        let camProj = 1 / this.sliceBuffers.camProjJsBuffer[1];\r\n        if (allRange) {\r\n            frustum = [-camProj, camProj, -camProj, camProj, -camProj, camProj];\r\n        } else if (isRetinaGroup === 0) {\r\n            minslice = this.sliceBuffers.slicesJsBuffer[minslice << 2] * camProj;\r\n            maxslice = this.sliceBuffers.slicesJsBuffer[maxslice << 2] * camProj;\r\n            switch (this.sliceBuffers.currentRetinaFacing) {\r\n                case RetinaSliceFacing.POSZ:\r\n                    frustum = [-camProj, camProj, -camProj, camProj, minslice, maxslice];\r\n                    break;\r\n                case RetinaSliceFacing.NEGZ:\r\n                    frustum = [-camProj, camProj, -camProj, camProj, -maxslice, -minslice];\r\n                    break;\r\n                case RetinaSliceFacing.POSX:\r\n                    frustum = [minslice, maxslice, -camProj, camProj, -camProj, camProj];\r\n                    break;\r\n                case RetinaSliceFacing.NEGX:\r\n                    frustum = [-maxslice, -minslice, -camProj, camProj, -camProj, camProj];\r\n                    break;\r\n                case RetinaSliceFacing.POSY:\r\n                    frustum = [-camProj, camProj, minslice, maxslice, -camProj, camProj];\r\n                    break;\r\n                case RetinaSliceFacing.NEGY:\r\n                    frustum = [-camProj, camProj, -maxslice, -minslice, -camProj, camProj];\r\n                    break;\r\n            }\r\n            // refacing = SliceFacing[this.currentRetinaFacing];\r\n        } else {\r\n            // isRetinaGroup = new Uint32Array(new Float32Array([isRetinaGroup]).buffer)[0];\r\n            // todo\r\n        }\r\n        if ((camMat as AffineMat4).mat) {\r\n            const m = (camMat as AffineMat4).mat;\r\n            return frustum ? [\r\n                new Vec4(-1, 0, 0, -frustum[0]).mulmatls(m),\r\n                new Vec4(1, 0, 0, frustum[1]).mulmatls(m),\r\n                new Vec4(0, -1, 0, -frustum[2]).mulmatls(m),\r\n                new Vec4(0, 1, 0, frustum[3]).mulmatls(m),\r\n                new Vec4(0, 0, -1, -frustum[4]).mulmatls(m),\r\n                new Vec4(0, 0, 1, frustum[5]).mulmatls(m),\r\n            ] : undefined;\r\n        } else {\r\n            const r = (camMat as Obj4).rotation;\r\n            return frustum ? [\r\n                new Vec4(-1, 0, 0, -frustum[0]).rotates(r),\r\n                new Vec4(1, 0, 0, frustum[1]).rotates(r),\r\n                new Vec4(0, -1, 0, -frustum[2]).rotates(r),\r\n                new Vec4(0, 1, 0, frustum[3]).rotates(r),\r\n                new Vec4(0, 0, -1, -frustum[4]).rotates(r),\r\n                new Vec4(0, 0, 1, frustum[5]).rotates(r),\r\n            ] : undefined;\r\n        }\r\n        // console.log({ isRetinaGroup, frustum,  refacing});\r\n    }\r\n}\r\nconst arrayBuffer = new ArrayBuffer(4);\r\nfunction f32_to_u32(f32: number) {\r\n    const b = new Float32Array(arrayBuffer);\r\n    b[0] = f32;\r\n    return new Uint32Array(b.buffer)[0];\r\n}\r\nfunction u32_to_f32(u32: number) {\r\n    const b = new Uint32Array(arrayBuffer);\r\n    b[0] = u32;\r\n    return new Float32Array(b.buffer)[0];\r\n}","export class GPU {\r\n    adapter: GPUAdapter;\r\n    device: GPUDevice;\r\n    preferredFormat: GPUTextureFormat;\r\n    async init(): Promise<GPU | null> {\r\n        if (!('gpu' in navigator)) {\r\n            console.warn(\"User agent doesn't support WebGPU.\");\r\n            return null;\r\n        }\r\n        const gpuAdapter = await navigator.gpu.requestAdapter({\r\n            powerPreference: 'high-performance'\r\n        });\r\n        if (!gpuAdapter) {\r\n            console.warn('No WebGPU adapters found.');\r\n            return null;\r\n        }\r\n        this.adapter = gpuAdapter;\r\n        this.preferredFormat = navigator.gpu.getPreferredCanvasFormat();\r\n        this.device = await gpuAdapter.requestDevice();\r\n        this.device.lost.then((info) => {\r\n            console.error(`WebGPU device was lost: ${info.message}`);\r\n            this.device = null;\r\n            if (info.reason != 'destroyed') {\r\n                this.init();\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    createBuffer(usage: number, buffer_or_size: (ArrayLike<number> & ArrayBuffer) | number, label?: string) {\r\n        let gpuBuffer = this.device.createBuffer({\r\n            size: (buffer_or_size as ArrayLike<number> & ArrayBuffer)?.byteLength ?? (buffer_or_size as number),\r\n            usage, label,\r\n            mappedAtCreation: typeof buffer_or_size != \"number\"\r\n        });\r\n        if (typeof buffer_or_size != \"number\") {\r\n            let jsBuffer = new (buffer_or_size.constructor as ArrayBufferConstructor)(gpuBuffer.getMappedRange());\r\n            (jsBuffer as Float32Array).set(buffer_or_size);\r\n            gpuBuffer.unmap();\r\n        }\r\n        return gpuBuffer;\r\n    }\r\n    createBindGroup(pipeline: GPUPipelineBase, index: number, entries: Array<GPUBindingResource>, label?: string) {\r\n        let descriptor: GPUBindGroupDescriptor = {\r\n            layout: pipeline.getBindGroupLayout(index),\r\n            entries: entries.map((e, i) => ({ binding: i, resource: e }))\r\n        };\r\n        if (label) descriptor.label = label;\r\n        return this.device.createBindGroup(descriptor);\r\n    }\r\n    getContext(dom: HTMLCanvasElement, config?: GPUContextConfig): GPUCanvasContext {\r\n        let ctxt = dom.getContext('webgpu') as unknown as GPUCanvasContext;\r\n        ctxt.configure({\r\n            device: this.device,\r\n            format: config?.format ?? this.preferredFormat,\r\n            ...config\r\n        });\r\n        return ctxt;\r\n    }\r\n}\r\ninterface ArrayBufferConstructor {\r\n    readonly prototype: ArrayBuffer;\r\n    new(byteLength: number): ArrayBuffer;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): ArrayBuffer;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): ArrayBuffer;\r\n    isView(arg: any): arg is ArrayBufferView;\r\n}\r\ninterface GPUContextConfig {\r\n    format?: GPUTextureFormat;\r\n    alphaMode?: GPUCanvasAlphaMode;\r\n    usage?: GPUTextureUsageFlags;\r\n    viewFormats?: Iterable<GPUTextureFormat>;\r\n    colorSpace?: PredefinedColorSpace;\r\n}","export function toIndexbuffer(srcArr: Float32Array, dstArr: number[], dstIdxArr: number[], stride: number) {\r\n    for (let i = 0, l = srcArr.length; i < l; i += stride) {\r\n        let idx = indexOf(srcArr, i, dstArr, 4);\r\n        if (idx === -1) {\r\n            idx = dstArr.length;\r\n            for (let q = 0; q < stride; q++) {\r\n                dstArr.push(srcArr[i + q]);\r\n            }\r\n        }\r\n        idx >>= 2;\r\n        dstIdxArr.push(idx);\r\n    }\r\n}\r\nexport function indexOf(\r\n    srcArr: Float32Array, srcIdx: number, dstArr: number[], stride: number\r\n) {\r\n    for (let i = 0, j = 0, l = dstArr.length; i < l; i += stride, j++) {\r\n        let same = true;\r\n        for (let q = 0; q < stride; q++) {\r\n            same &&= srcArr[srcIdx + q] === dstArr[i + q];\r\n        }\r\n        if (same) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function toNonIndex(srcArr: Float32Array, idxArr: Uint32Array, dstArr: Float32Array, stride: number) {\r\n    let ptr = 0;\r\n    for (let i = 0, l = idxArr.length; i < l; i++) {\r\n        let idx = idxArr[i] * stride;\r\n        for (let q = 0; q < stride; q++) {\r\n            dstArr[ptr++] = srcArr[idx + q];\r\n        }\r\n    }\r\n}","import { AffineMat4, Obj4 } from \"../../math/algebra/affine.js\";\r\nimport { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { _180, _360, _90 } from \"../../math/const.js\";\r\nimport { toIndexbuffer, toNonIndex } from \"../index.js\";\r\n\r\n/** Tetramesh store 4D mesh as tetrahedral list\r\n *  Each tetrahedral uses four vertices in the position list\r\n */\r\nexport interface TetraMeshData {\r\n    position: Float32Array;\r\n    normal?: Float32Array;\r\n    uvw?: Float32Array;\r\n    count?: number;\r\n}\r\n/** TetraIndexMesh is not supported for tetraslice rendering\r\n *  It is only used in data storage and mesh construction\r\n */\r\nexport interface TetraIndexMeshData {\r\n    position: Float32Array;\r\n    normal?: Float32Array;\r\n    uvw?: Float32Array;\r\n    positionIndex: Uint32Array;\r\n    normalIndex?: Uint32Array;\r\n    uvwIndex?: Uint32Array;\r\n    count?: number;\r\n}\r\nexport class TetraMesh implements TetraMeshData {\r\n    position: Float32Array;\r\n    normal?: Float32Array;\r\n    uvw?: Float32Array;\r\n    count?: number;\r\n    constructor(d: TetraMeshData) {\r\n        this.position = d.position;\r\n        this.normal = d.normal;\r\n        this.uvw = d.uvw;\r\n        this.count = d.count;\r\n    }\r\n    applyAffineMat4(am: AffineMat4) {\r\n        applyAffineMat4(this, am);\r\n        return this;\r\n    }\r\n    applyObj4(obj4: Obj4) {\r\n        applyObj4(this, obj4);\r\n        return this;\r\n    }\r\n    clone(): TetraMesh {\r\n        let ret = new TetraMesh({\r\n            position: this.position.slice(0),\r\n            count: this.count\r\n        });\r\n        if (this.uvw) ret.uvw = this.uvw.slice(0);\r\n        if (this.normal) ret.normal = this.normal.slice(0);\r\n        return ret;\r\n    }\r\n    toIndexMesh() {\r\n        let position = [];\r\n        let normal = [];\r\n        let uvw = [];\r\n        let posIdx = [];\r\n        let normalIdx = [];\r\n        let uvwIdx = [];\r\n        toIndexbuffer(this.position, position, posIdx, 4);\r\n        if (this.normal) toIndexbuffer(this.normal, normal, normalIdx, 4);\r\n        if (this.uvw) toIndexbuffer(this.uvw, uvw, uvwIdx, 4);\r\n\r\n        let out = new TetraIndexMesh({\r\n            position: new Float32Array(position),\r\n            positionIndex: new Uint32Array(posIdx)\r\n        });\r\n        if (this.normal) out.normalIndex = new Uint32Array(normalIdx);\r\n        if (this.uvw) out.uvwIndex = new Uint32Array(uvwIdx);\r\n        if (normal.length) out.normal = new Float32Array(normal);\r\n        if (uvw.length) out.uvw = new Float32Array(uvw);\r\n        return out;\r\n    }\r\n    /// this function will copy data and not modify original data\r\n    concat(mesh2: TetraMesh): TetraMesh {\r\n        let position = new Float32Array(this.position.length + mesh2.position.length);\r\n        position.set(this.position);\r\n        position.set(mesh2.position, this.position.length);\r\n        let ret = new TetraMesh({ position, count: position.length >> 4 });\r\n        if (this.normal && mesh2.normal) {\r\n            let normal = new Float32Array(this.normal.length + mesh2.normal.length);\r\n            normal.set(this.normal);\r\n            normal.set(mesh2.normal, this.normal.length);\r\n            ret.normal = normal;\r\n        }\r\n        if (this.uvw && mesh2.uvw) {\r\n            let uvw = new Float32Array(this.uvw.length + mesh2.uvw.length);\r\n            uvw.set(this.uvw);\r\n            uvw.set(mesh2.uvw, this.uvw.length);\r\n            ret.uvw = uvw;\r\n        }\r\n        return ret;\r\n    }\r\n    /// this function will copy data and not modify original data\r\n    deleteTetras(tetras: number[]): TetraMesh {\r\n        let count = this.count ?? (this.position?.length >> 4);\r\n        let newCount = (count - tetras.length) << 4;\r\n        let p = new Float32Array(newCount);\r\n        let n: Float32Array;\r\n        let u: Float32Array;\r\n        if (this.normal) n = new Float32Array(newCount);\r\n        if (this.uvw) u = new Float32Array(newCount);\r\n        let offset = 0;\r\n        for (let i = 0; i < this.count; i++) {\r\n            if (!tetras.includes(i)) {\r\n                p.set(this.position.subarray(i << 4, (i + 1) << 4), offset);\r\n                if (n) n.set(this.normal.subarray(i << 4, (i + 1) << 4), offset);\r\n                if (u) u.set(this.uvw.subarray(i << 4, (i + 1) << 4), offset);\r\n                offset += 16;\r\n            }\r\n        }\r\n        return new TetraMesh({\r\n            position: p, normal: n, uvw: u, count: newCount >> 4\r\n        });\r\n    }\r\n    generateNormal(splitThreshold?: number): this {\r\n        if (!this.normal) {\r\n            this.normal = new Float32Array(this.count << 4);\r\n            const v1 = new Vec4, v2 = new Vec4, v3 = new Vec4;\r\n            for (let i = 0, offset = 0; i < this.position.length;) {\r\n                const a0 = new Vec4(this.position[i++], this.position[i++], this.position[i++], this.position[i++]);\r\n                const a1 = new Vec4(this.position[i++], this.position[i++], this.position[i++], this.position[i++]);\r\n                const a2 = new Vec4(this.position[i++], this.position[i++], this.position[i++], this.position[i++]);\r\n                const a3 = new Vec4(this.position[i++], this.position[i++], this.position[i++], this.position[i++]);\r\n                const normal = v1.subset(a0, a1).wedge(v2.subset(a0, a2)).wedgev(v3.subset(a0, a3)).norms();\r\n                normal.writeBuffer(this.normal, offset); offset += 4;\r\n                normal.writeBuffer(this.normal, offset); offset += 4;\r\n                normal.writeBuffer(this.normal, offset); offset += 4;\r\n                normal.writeBuffer(this.normal, offset); offset += 4;\r\n            }\r\n        }\r\n        if (!splitThreshold) return this; // shade flat, complete\r\n        // then for shade smooth\r\n        const threshold = Math.cos(splitThreshold);\r\n        let position: number[] = [];\r\n        let posIdx: number[] = [];\r\n        let point2clusterTable: number[][] = [];\r\n        toIndexbuffer(this.position, position, posIdx, 4);\r\n        for (let i = 0; i < posIdx.length; i++) {\r\n            const a0 = posIdx[i];\r\n            point2clusterTable[a0] ??= []; point2clusterTable[a0].push(i);\r\n        }\r\n        const newNormal = new Float32Array(this.count << 4);\r\n        const tempNormal = new Vec4;\r\n        for (let i = 0, i4 = 0; i < posIdx.length; i++, i4 += 4) {\r\n            const a0 = posIdx[i];\r\n            let thisNormal = new Vec4(this.normal[i4], this.normal[i4 + 1], this.normal[i4 + 2], this.normal[i4 + 3]);\r\n            let sum = thisNormal.clone();\r\n            for (const idx of point2clusterTable[a0]) {\r\n                if (i === idx) continue;\r\n                const idx4 = idx << 2;\r\n                tempNormal.set(this.normal[idx4], this.normal[idx4 + 1], this.normal[idx4 + 2], this.normal[idx4 + 3]);\r\n                if (thisNormal.dot(tempNormal) > threshold) {\r\n                    sum.adds(tempNormal);\r\n                }\r\n            }\r\n            sum.norms();\r\n            sum.writeBuffer(newNormal, i << 2);\r\n        }\r\n        this.normal = newNormal;\r\n        return this;\r\n    }\r\n    inverseNormal(): TetraMesh {\r\n        let count = this.count ?? this.position.length >> 4;\r\n        let temp: number;\r\n        for (let i = 0; i < count; i++) {\r\n            let offset = i << 4;\r\n            temp = this.position[offset + 0]; this.position[offset + 0] = this.position[offset + 4]; this.position[offset + 4] = temp;\r\n            temp = this.position[offset + 1]; this.position[offset + 1] = this.position[offset + 5]; this.position[offset + 5] = temp;\r\n            temp = this.position[offset + 2]; this.position[offset + 2] = this.position[offset + 6]; this.position[offset + 6] = temp;\r\n            temp = this.position[offset + 3]; this.position[offset + 3] = this.position[offset + 7]; this.position[offset + 7] = temp;\r\n            if (this.uvw) {\r\n                temp = this.uvw[offset + 0]; this.uvw[offset + 0] = this.uvw[offset + 4]; this.uvw[offset + 4] = temp;\r\n                temp = this.uvw[offset + 1]; this.uvw[offset + 1] = this.uvw[offset + 5]; this.uvw[offset + 5] = temp;\r\n                temp = this.uvw[offset + 2]; this.uvw[offset + 2] = this.uvw[offset + 6]; this.uvw[offset + 6] = temp;\r\n                temp = this.uvw[offset + 3]; this.uvw[offset + 3] = this.uvw[offset + 7]; this.uvw[offset + 7] = temp;\r\n            }\r\n            if (this.normal) {\r\n                temp = this.normal[offset + 0]; this.normal[offset + 0] = this.normal[offset + 4]; this.normal[offset + 4] = temp;\r\n                temp = this.normal[offset + 1]; this.normal[offset + 1] = this.normal[offset + 5]; this.normal[offset + 5] = temp;\r\n                temp = this.normal[offset + 2]; this.normal[offset + 2] = this.normal[offset + 6]; this.normal[offset + 6] = temp;\r\n                temp = this.normal[offset + 3]; this.normal[offset + 3] = this.normal[offset + 7]; this.normal[offset + 7] = temp;\r\n            }\r\n        }\r\n        this.position\r\n        if (this.normal) {\r\n            for (let i = 0, l = this.normal.length; i < l; i++) {\r\n                this.normal[i] = -this.normal[i];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    setUVWAsPosition() {\r\n        if (!this.uvw) this.uvw = this.position.slice(0);\r\n        else {\r\n            this.uvw.set(this.position);\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport class TetraIndexMesh implements TetraIndexMeshData {\r\n    position: Float32Array;\r\n    normal?: Float32Array;\r\n    uvw?: Float32Array;\r\n    positionIndex: Uint32Array;\r\n    normalIndex?: Uint32Array;\r\n    uvwIndex?: Uint32Array;\r\n    count?: number;\r\n    constructor(d: TetraIndexMeshData) {\r\n        this.position = d.position;\r\n        this.normal = d.normal;\r\n        this.uvw = d.uvw;\r\n        this.positionIndex = d.positionIndex;\r\n        this.normalIndex = d.normalIndex;\r\n        this.uvwIndex = d.uvwIndex;\r\n        this.count = d.count;\r\n    }\r\n    applyAffineMat4(am: AffineMat4) {\r\n        applyAffineMat4(this, am);\r\n        return this;\r\n    }\r\n    applyObj4(obj4: Obj4) {\r\n        applyObj4(this, obj4);\r\n        return this;\r\n    }\r\n    toNonIndexMesh() {\r\n        let count = this.position.length << 2;\r\n        let out = new TetraMesh({\r\n            position: new Float32Array(count),\r\n            count: count >> 4\r\n        });\r\n        toNonIndex(this.position, this.positionIndex, out.position, 4);\r\n        if (this.normal) {\r\n            out.normal = new Float32Array(count);\r\n            toNonIndex(this.normal, this.normalIndex, out.normal, 4);\r\n        }\r\n        if (this.uvw) {\r\n            out.uvw = new Float32Array(count);\r\n            toNonIndex(this.uvw, this.uvwIndex, out.uvw, 4);\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\nfunction applyAffineMat4(mesh: TetraMeshData, am: AffineMat4) {\r\n    let vp = new Vec4();\r\n    for (let i = 0; i < mesh.position.length; i += 4) {\r\n        vp.set(\r\n            mesh.position[i],\r\n            mesh.position[i + 1],\r\n            mesh.position[i + 2],\r\n            mesh.position[i + 3],\r\n        ).mulmatls(am.mat).adds(am.vec).writeBuffer(mesh.position, i);\r\n        if (mesh.normal) {\r\n            vp.set(\r\n                mesh.normal[i],\r\n                mesh.normal[i + 1],\r\n                mesh.normal[i + 2],\r\n                mesh.normal[i + 3],\r\n            ).mulmatls(am.mat).writeBuffer(mesh.position, i);\r\n        }\r\n    }\r\n    return mesh;\r\n}\r\nfunction applyObj4(mesh: TetraMeshData, obj: Obj4) {\r\n    let vp = new Vec4();\r\n    let scaleinv: Vec4;\r\n    if (obj.scale && mesh.normal) {\r\n        scaleinv = new Vec4(1 / obj.scale.x, 1 / obj.scale.y, 1 / obj.scale.z, 1 / obj.scale.w);\r\n    }\r\n    for (let i = 0; i < mesh.position.length; i += 4) {\r\n        if (obj.scale) {\r\n            vp.set(\r\n                mesh.position[i] * obj.scale.x,\r\n                mesh.position[i + 1] * obj.scale.y,\r\n                mesh.position[i + 2] * obj.scale.z,\r\n                mesh.position[i + 3] * obj.scale.w,\r\n            ).rotates(obj.rotation).adds(obj.position).writeBuffer(mesh.position, i);\r\n            if (mesh.normal) {\r\n                vp.set(\r\n                    mesh.normal[i] * scaleinv.x,\r\n                    mesh.normal[i + 1] * scaleinv.y,\r\n                    mesh.normal[i + 2] * scaleinv.z,\r\n                    mesh.normal[i + 3] * scaleinv.w,\r\n                ).rotates(obj.rotation).norms().writeBuffer(mesh.normal, i);\r\n            }\r\n        } else {\r\n            vp.set(\r\n                mesh.position[i],\r\n                mesh.position[i + 1],\r\n                mesh.position[i + 2],\r\n                mesh.position[i + 3],\r\n            ).rotates(obj.rotation).adds(obj.position).writeBuffer(mesh.position, i);\r\n            if (mesh.normal) {\r\n                vp.set(\r\n                    mesh.normal[i],\r\n                    mesh.normal[i + 1],\r\n                    mesh.normal[i + 2],\r\n                    mesh.normal[i + 3],\r\n                ).rotates(obj.rotation).writeBuffer(mesh.normal, i);\r\n            }\r\n        }\r\n    }\r\n    return mesh;\r\n}\r\nexport function concat(meshes: TetraMeshData[]): TetraMesh {\r\n    let length = 0;\r\n    let hasNormal = true;\r\n    let hasUvw = true;\r\n    for (let i = 0; i < meshes.length; i++) {\r\n        length += meshes[i].position.length;\r\n        hasUvw = hasUvw && (meshes[i].uvw ? true : false);\r\n        hasNormal = hasNormal && (meshes[i].normal ? true : false);\r\n    }\r\n    let position = new Float32Array(length);\r\n    let ret = new TetraMesh({ position, count: length >> 4 });\r\n    let normal: Float32Array, uvw: Float32Array;\r\n    if (hasNormal) {\r\n        normal = new Float32Array(length);\r\n        ret.normal = normal;\r\n    }\r\n    if (hasUvw) {\r\n        uvw = new Float32Array(length);\r\n        ret.uvw = uvw;\r\n    }\r\n    length = 0;\r\n    for (let i = 0; i < meshes.length; i++) {\r\n        position.set(meshes[i].position, length);\r\n        if (hasNormal) {\r\n            normal.set(meshes[i].normal, length);\r\n        }\r\n        if (hasUvw) {\r\n            uvw.set(meshes[i].uvw, length);\r\n        }\r\n        length += meshes[i].position.length;\r\n    }\r\n    return ret;\r\n}\r\n\r\n","import { toIndexbuffer, toNonIndex } from \"../index.js\";\r\nimport { AffineMat4, Obj4 } from \"../../math/algebra/affine.js\";\r\nimport { Vec4 } from \"../../math/algebra/vec4.js\";\r\n\r\n/** FaceMesh store traditional 2-face mesh as triangle or quad list\r\n *  This mesh is for constructing complex tetrameshes\r\n *  It is not aimed for rendering purpose\r\n */\r\nexport interface FaceMeshData {\r\n    quad?: {\r\n        position: Float32Array;\r\n        normal?: Float32Array;\r\n        uvw?: Float32Array;\r\n        count?: number;\r\n    };\r\n    triangle?: {\r\n        position: Float32Array;\r\n        normal?: Float32Array;\r\n        uvw?: Float32Array;\r\n        count?: number;\r\n    };\r\n}\r\nexport class FaceMesh implements FaceMeshData {\r\n    quad?: {\r\n        position: Float32Array;\r\n        normal?: Float32Array;\r\n        uvw?: Float32Array;\r\n        count?: number;\r\n    };\r\n    triangle?: {\r\n        position: Float32Array;\r\n        normal?: Float32Array;\r\n        uvw?: Float32Array;\r\n        count?: number;\r\n    };\r\n    constructor(d: FaceMeshData) {\r\n        this.quad = d.quad;\r\n        this.triangle = d.triangle;\r\n    }\r\n    applyAffineMat4(am: AffineMat4) {\r\n        applyAffineMat4(this, am);\r\n        return this;\r\n    }\r\n    applyObj4(obj4: Obj4) {\r\n        applyObj4(this, obj4);\r\n        return this;\r\n    }\r\n    toIndexMesh() {\r\n        let position = [];\r\n        let normal = [];\r\n        let uvw = [];\r\n        let posIdx4 = [];\r\n        let normalIdx4 = [];\r\n        let uvwIdx4 = [];\r\n        let posIdx3 = [];\r\n        let normalIdx3 = [];\r\n        let uvwIdx3 = [];\r\n        if (this.quad) {\r\n            toIndexbuffer(this.quad.position, position, posIdx4, 4);\r\n            if (this.quad.normal) toIndexbuffer(this.quad.normal, normal, normalIdx4, 4);\r\n            if (this.quad.uvw) toIndexbuffer(this.quad.uvw, uvw, uvwIdx4, 4);\r\n        }\r\n        if (this.triangle) {\r\n            toIndexbuffer(this.triangle.position, position, posIdx3, 4);\r\n            if (this.triangle.normal) toIndexbuffer(this.triangle.normal, normal, normalIdx3, 4);\r\n            if (this.triangle.uvw) toIndexbuffer(this.triangle.uvw, uvw, uvwIdx3, 4);\r\n        }\r\n        let out = new FaceIndexMesh({\r\n            position: new Float32Array(position)\r\n        });\r\n        if (this.quad) {\r\n            out.quad = {\r\n                position: new Uint32Array(posIdx4)\r\n            }\r\n            if (this.quad.normal) out.quad.normal = new Uint32Array(normalIdx4);\r\n            if (this.quad.uvw) out.quad.uvw = new Uint32Array(uvwIdx4);\r\n        }\r\n        if (this.triangle) {\r\n            out.triangle = {\r\n                position: new Uint32Array(posIdx4)\r\n            }\r\n            if (this.triangle.normal) out.triangle.normal = new Uint32Array(normalIdx4);\r\n            if (this.triangle.uvw) out.triangle.uvw = new Uint32Array(uvwIdx4);\r\n        }\r\n        if (normal.length) out.normal = new Float32Array(normal);\r\n        if (uvw.length) out.uvw = new Float32Array(uvw);\r\n        return out;\r\n    }\r\n    clone(): FaceMesh {\r\n        let ret = new FaceMesh({});\r\n        if (this.quad) {\r\n            ret.quad = {\r\n                position: this.quad.position.slice(0)\r\n            };\r\n            if (this.quad.count) ret.quad.count = this.quad.count;\r\n            if (this.quad.normal) ret.quad.normal = this.quad.normal.slice(0);\r\n            if (this.quad.uvw) ret.quad.uvw = this.quad.uvw.slice(0);\r\n        }\r\n        if (this.triangle) {\r\n            ret.triangle = {\r\n                position: this.triangle.position.slice(0)\r\n            };\r\n            if (this.triangle.count) ret.triangle.count = this.triangle.count;\r\n            if (this.triangle.normal) ret.triangle.normal = this.triangle.normal.slice(0);\r\n            if (this.triangle.uvw) ret.triangle.uvw = this.triangle.uvw.slice(0);\r\n        }\r\n        return ret;\r\n    }\r\n    concat(m2: FaceMesh): FaceMesh {\r\n        let quad_position = new Float32Array(\r\n            (this.quad?.position?.length ?? 0) + (m2.quad?.position?.length ?? 0)\r\n        );\r\n        if (this.quad?.position) quad_position.set(this.quad.position);\r\n        if (m2.quad?.position) quad_position.set(m2.quad.position, this.quad.position?.length ?? 0);\r\n\r\n        let tri_position = new Float32Array(\r\n            (this.triangle?.position?.length ?? 0) + (m2.triangle?.position?.length ?? 0)\r\n        );\r\n        if (this.triangle?.position) tri_position.set(this.triangle.position);\r\n        if (m2.triangle?.position) tri_position.set(m2.triangle.position, this.triangle.position?.length ?? 0);\r\n\r\n        let ret = new FaceMesh({});\r\n        if (quad_position.length) ret.quad = { position: quad_position };\r\n        if (tri_position.length) ret.triangle = { position: tri_position };\r\n        if (this.quad?.normal && m2.quad?.normal) {\r\n            let normal = new Float32Array((this.quad?.normal?.length ?? 0) + (m2.quad?.normal?.length ?? 0));\r\n            if (this.quad?.normal) normal.set(this.quad.normal);\r\n            if (m2.quad?.normal) normal.set(m2.quad.normal, this.quad?.normal?.length ?? 0);\r\n            ret.quad.normal = normal;\r\n        }\r\n        if (this.triangle?.normal && m2.triangle?.normal) {\r\n            let normal = new Float32Array((this.triangle?.normal?.length ?? 0) + (m2.triangle?.normal?.length ?? 0));\r\n            if (this.triangle?.normal) normal.set(this.triangle.normal);\r\n            if (m2.triangle?.normal) normal.set(m2.triangle.normal, this.triangle?.normal?.length ?? 0);\r\n            ret.triangle.normal = normal;\r\n        }\r\n        if (this.quad?.uvw && m2.quad?.uvw) {\r\n            let uvw = new Float32Array((this.quad?.uvw?.length ?? 0) + (m2.quad?.uvw?.length ?? 0));\r\n            if (this.quad?.uvw) uvw.set(this.quad.uvw);\r\n            if (m2.quad?.uvw) uvw.set(m2.quad.uvw, this.quad?.uvw?.length ?? 0);\r\n            ret.quad.uvw = uvw;\r\n        }\r\n        if (this.triangle?.uvw && m2.triangle?.uvw) {\r\n            let uvw = new Float32Array((this.triangle?.uvw?.length ?? 0) + (m2.triangle?.uvw?.length ?? 0));\r\n            if (this.triangle?.uvw) uvw.set(this.triangle.uvw);\r\n            if (m2.triangle?.uvw) uvw.set(m2.triangle.uvw, this.triangle?.uvw?.length ?? 0);\r\n            ret.triangle.uvw = uvw;\r\n        }\r\n        return ret;\r\n    }\r\n    setConstantNormal(n: Vec4) {\r\n        if (this.quad) {\r\n            let len = this.quad.count << 4;\r\n            this.quad.normal ??= new Float32Array(len);\r\n            for (let i = 0; i < len; i += 4) n.writeBuffer(this.quad.normal, i);\r\n        }\r\n        if (this.triangle) {\r\n            let len = this.triangle.count * 12;\r\n            this.triangle.normal ??= new Float32Array(len);\r\n            for (let i = 0; i < len; i += 4) n.writeBuffer(this.triangle.normal, i);\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport interface FaceIndexMeshData {\r\n    position: Float32Array;\r\n    normal?: Float32Array;\r\n    uvw?: Float32Array;\r\n    quad?: {\r\n        position: Uint32Array;\r\n        normal?: Uint32Array;\r\n        uvw?: Uint32Array;\r\n        count?: number;\r\n    };\r\n    triangle?: {\r\n        position: Uint32Array;\r\n        normal?: Uint32Array;\r\n        uvw?: Uint32Array;\r\n        count?: number;\r\n    };\r\n}\r\nexport class FaceIndexMesh implements FaceIndexMeshData {\r\n    position: Float32Array;\r\n    normal?: Float32Array;\r\n    uvw?: Float32Array;\r\n    quad?: {\r\n        position: Uint32Array;\r\n        normal?: Uint32Array;\r\n        uvw?: Uint32Array;\r\n        count?: number;\r\n    };\r\n    triangle?: {\r\n        position: Uint32Array;\r\n        normal?: Uint32Array;\r\n        uvw?: Uint32Array;\r\n        count?: number;\r\n    };\r\n    constructor(d: FaceIndexMeshData) {\r\n        this.quad = d.quad;\r\n        this.triangle = d.triangle;\r\n        this.position = d.position;\r\n        this.normal = d.normal;\r\n        this.uvw = d.uvw;\r\n    }\r\n\r\n    applyAffineMat4(am: AffineMat4) {\r\n        applyAffineMat4(this, am);\r\n        return this;\r\n    }\r\n    applyObj4(obj4: Obj4) {\r\n        applyObj4(this, obj4);\r\n        return this;\r\n    }\r\n    toNonIndexMesh() {\r\n        let out = new FaceMesh({});\r\n        if (this.quad) {\r\n            let count = this.quad.position.length << 2;\r\n            out.quad = {\r\n                position: new Float32Array(count),\r\n                count: count >> 4\r\n            };\r\n            toNonIndex(this.position, this.quad.position, out.quad.position, 4);\r\n            if (this.normal) {\r\n                out.quad.normal = new Float32Array(count);\r\n                toNonIndex(this.normal, this.quad.normal, out.quad.normal, 4);\r\n            }\r\n            if (this.uvw) {\r\n                out.quad.uvw = new Float32Array(count);\r\n                toNonIndex(this.uvw, this.quad.uvw, out.quad.uvw, 4);\r\n            }\r\n        }\r\n        if (this.triangle) {\r\n            let count = this.triangle.position.length << 2;\r\n            out.triangle = {\r\n                position: new Float32Array(count),\r\n                count: count / 12\r\n            };\r\n            toNonIndex(this.position, this.triangle.position, out.triangle.position, 4);\r\n            if (this.normal) {\r\n                out.triangle.normal = new Float32Array(count);\r\n                toNonIndex(this.normal, this.triangle.normal, out.triangle.normal, 4);\r\n            }\r\n            if (this.uvw) {\r\n                out.triangle.uvw = new Float32Array(count);\r\n                toNonIndex(this.uvw, this.triangle.uvw, out.triangle.uvw, 4);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n    clone(): FaceIndexMesh {\r\n        let ret = new FaceIndexMesh({ position: this.position.slice(0) });\r\n        if (this.uvw) ret.uvw = this.uvw.slice(0);\r\n        if (this.normal) ret.normal = this.normal.slice(0);\r\n        if (this.quad) {\r\n            ret.quad = {\r\n                position: this.quad.position.slice(0)\r\n            };\r\n            if (this.quad.count) ret.quad.count = this.quad.count;\r\n            if (this.quad.normal) ret.quad.normal = this.quad.normal.slice(0);\r\n            if (this.quad.uvw) ret.quad.uvw = this.quad.uvw.slice(0);\r\n        }\r\n        if (this.triangle) {\r\n            ret.triangle = {\r\n                position: this.triangle.position.slice(0)\r\n            };\r\n            if (this.triangle.count) ret.triangle.count = this.triangle.count;\r\n            if (this.triangle.normal) ret.triangle.normal = this.triangle.normal.slice(0);\r\n            if (this.triangle.uvw) ret.triangle.uvw = this.triangle.uvw.slice(0);\r\n        }\r\n        return ret;\r\n    }\r\n    setConstantNormal(n: Vec4) {\r\n        this.normal = new Float32Array([n.x, n.y, n.z, n.w]);\r\n        if (this.quad) {\r\n            this.quad.normal ??= new Uint32Array(this.quad.count << 2);\r\n            this.quad.normal.fill(0);\r\n        }\r\n        if (this.triangle) {\r\n            this.triangle.normal ??= new Uint32Array(this.triangle.count * 3);\r\n            this.triangle.normal.fill(0);\r\n        }\r\n        return this;\r\n    }\r\n    concat(m2: FaceIndexMesh): FaceIndexMesh {\r\n        let position = new Float32Array(this.position.length + m2.position.length);\r\n        position.set(this.position);\r\n        position.set(m2.position, this.position.length);\r\n        let ret = new FaceIndexMesh({ position });\r\n        if (this.normal && m2.normal) {\r\n            let normal = new Float32Array(this.normal.length + m2.normal.length);\r\n            normal.set(this.normal);\r\n            normal.set(m2.normal, this.normal.length);\r\n            ret.normal = normal;\r\n        }\r\n        if (this.uvw && m2.uvw) {\r\n            let uvw = new Float32Array(this.uvw.length + m2.uvw.length);\r\n            uvw.set(this.uvw);\r\n            uvw.set(m2.uvw, this.uvw.length);\r\n            ret.uvw = uvw;\r\n        }\r\n        // index array concat\r\n        if (this.quad || m2.quad) {\r\n            let quadCount1 = (this.quad?.count << 2) || (this.quad?.position?.length ?? 0);\r\n            let quadCount2 = (this.quad?.count << 2) || (this.quad?.position?.length ?? 0);\r\n            let quadCount = quadCount1 + quadCount2;\r\n            let qp = new Uint32Array(quadCount);\r\n            let hasN = !((this.quad && !this.quad.normal) || (m2.quad && !m2.quad.normal));\r\n            let hasU = !((this.quad && !this.quad.uvw) || (m2.quad && !m2.quad.uvw));\r\n            let qn = hasN ? new Uint32Array(quadCount) : null;\r\n            let qu = hasU ? new Uint32Array(quadCount) : null;\r\n            ret.quad = { position: qp, count: quadCount >> 2 };\r\n            if (this.quad?.position) {\r\n                qp.set(this.quad.position.subarray(0, quadCount1));\r\n                if (hasN) { qn.set(this.quad.normal.subarray(0, quadCount1)); ret.quad.normal = qn; }\r\n                if (hasU) { qu.set(this.quad.uvw.subarray(0, quadCount1)); ret.quad.uvw = qu; }\r\n            }\r\n            if (m2.quad?.position) {\r\n                qp.set(m2.quad.position.subarray(0, quadCount2), quadCount1);\r\n                if (hasN) qn.set(m2.quad.normal.subarray(0, quadCount2), quadCount1);\r\n                if (hasU) qu.set(m2.quad.uvw.subarray(0, quadCount2), quadCount1);\r\n                if (quadCount1) {\r\n                    for (let i = quadCount1; i < quadCount; i++) {\r\n                        qp[i] += this.position.length >> 2;\r\n                        if (hasN) qn[i] += this.normal.length >> 2;\r\n                        if (hasU) qu[i] += this.uvw.length >> 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.triangle || m2.triangle) {\r\n            let triangleCount1 = (this.triangle?.count * 3) || (this.triangle?.position?.length ?? 0);\r\n            let triangleCount2 = (this.triangle?.count * 3) || (this.triangle?.position?.length ?? 0);\r\n            let triangleCount = triangleCount1 + triangleCount2;\r\n            let qp = new Uint32Array(triangleCount);\r\n            let hasN = !((this.triangle && !this.triangle.normal) || (m2.triangle && !m2.triangle.normal));\r\n            let hasU = !((this.triangle && !this.triangle.uvw) || (m2.triangle && !m2.triangle.uvw));\r\n            let qn = hasN ? new Uint32Array(triangleCount) : null;\r\n            let qu = hasU ? new Uint32Array(triangleCount) : null;\r\n            ret.triangle = { position: qp, count: Math.round(triangleCount / 3) };\r\n            if (this.triangle?.position) {\r\n                qp.set(this.triangle.position.subarray(0, triangleCount1));\r\n                if (hasN) { qn.set(this.triangle.normal.subarray(0, triangleCount1)); ret.triangle.normal = qn; }\r\n                if (hasU) { qu.set(this.triangle.uvw.subarray(0, triangleCount1)); ret.triangle.uvw = qu; }\r\n            }\r\n            if (m2.triangle?.position) {\r\n                qp.set(m2.triangle.position.subarray(0, triangleCount2), triangleCount1);\r\n                if (hasN) qn.set(m2.triangle.normal.subarray(0, triangleCount2), triangleCount1);\r\n                if (hasU) qu.set(m2.triangle.uvw.subarray(0, triangleCount2), triangleCount1);\r\n                if (triangleCount1) {\r\n                    for (let i = triangleCount1; i < triangleCount; i++) {\r\n                        qp[i] += this.position.length >> 2;\r\n                        if (hasN) qn[i] += this.normal.length >> 2;\r\n                        if (hasU) qu[i] += this.uvw.length >> 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n}\r\nfunction applyAffineMat4(m: FaceIndexMeshData | FaceMeshData, am: AffineMat4) {\r\n    let vp = new Vec4();\r\n    if ((m as FaceIndexMesh).position) {\r\n        const mesh = m as FaceIndexMesh;\r\n        for (let i = 0; i < mesh.position.length; i += 4) {\r\n            vp.set(\r\n                mesh.position[i],\r\n                mesh.position[i + 1],\r\n                mesh.position[i + 2],\r\n                mesh.position[i + 3],\r\n            ).mulmatls(am.mat).adds(am.vec).writeBuffer(mesh.position, i);\r\n            if (mesh.normal) {\r\n                vp.set(\r\n                    mesh.normal[i],\r\n                    mesh.normal[i + 1],\r\n                    mesh.normal[i + 2],\r\n                    mesh.normal[i + 3],\r\n                ).mulmatls(am.mat).writeBuffer(mesh.position, i);\r\n            }\r\n        }\r\n        return mesh;\r\n    } else {\r\n        const mesh = m as FaceMesh;\r\n        let position = mesh.triangle?.position;\r\n        for (let i = 0; i < position?.length; i += 4) {\r\n            vp.set(\r\n                position[i],\r\n                position[i + 1],\r\n                position[i + 2],\r\n                position[i + 3],\r\n            ).mulmatls(am.mat).adds(am.vec).writeBuffer(position, i);\r\n            let normal = mesh.triangle?.normal;\r\n            if (normal) {\r\n                vp.set(\r\n                    normal[i],\r\n                    normal[i + 1],\r\n                    normal[i + 2],\r\n                    normal[i + 3],\r\n                ).mulmatls(am.mat).writeBuffer(normal, i);\r\n            }\r\n        }\r\n        position = mesh.quad?.position;\r\n        for (let i = 0; i < position?.length; i += 4) {\r\n            vp.set(\r\n                position[i],\r\n                position[i + 1],\r\n                position[i + 2],\r\n                position[i + 3],\r\n            ).mulmatls(am.mat).adds(am.vec).writeBuffer(position, i);\r\n            let normal = mesh.quad?.normal;\r\n            if (normal) {\r\n                vp.set(\r\n                    normal[i],\r\n                    normal[i + 1],\r\n                    normal[i + 2],\r\n                    normal[i + 3],\r\n                ).mulmatls(am.mat).writeBuffer(normal, i);\r\n            }\r\n        }\r\n        return mesh;\r\n    }\r\n}\r\nfunction applyObj4(mesh: FaceIndexMeshData | FaceMeshData, obj: Obj4) {\r\n    let vp = new Vec4();\r\n    let scaleinv: Vec4;\r\n    if (obj.scale && ((mesh as FaceIndexMesh).normal || mesh.quad?.normal || mesh.triangle?.normal)) {\r\n        scaleinv = new Vec4(1 / obj.scale.x, 1 / obj.scale.y, 1 / obj.scale.z, 1 / obj.scale.w);\r\n    }\r\n    if ((mesh as FaceIndexMesh).position) {\r\n        const m = mesh as FaceIndexMesh;\r\n        for (let i = 0; i < m.position.length; i += 4) {\r\n            if (obj.scale) {\r\n                vp.set(\r\n                    m.position[i] * obj.scale.x,\r\n                    m.position[i + 1] * obj.scale.y,\r\n                    m.position[i + 2] * obj.scale.z,\r\n                    m.position[i + 3] * obj.scale.w,\r\n                ).rotates(obj.rotation).adds(obj.position).writeBuffer(m.position, i);\r\n                if (m.normal) {\r\n                    vp.set(\r\n                        m.normal[i] * scaleinv.x,\r\n                        m.normal[i + 1] * scaleinv.y,\r\n                        m.normal[i + 2] * scaleinv.z,\r\n                        m.normal[i + 3] * scaleinv.w,\r\n                    ).rotates(obj.rotation).norms().writeBuffer(m.normal, i);\r\n                }\r\n            } else {\r\n                vp.set(\r\n                    m.position[i],\r\n                    m.position[i + 1],\r\n                    m.position[i + 2],\r\n                    m.position[i + 3],\r\n                ).rotates(obj.rotation).adds(obj.position).writeBuffer(m.position, i);\r\n                if (m.normal) {\r\n                    vp.set(\r\n                        m.normal[i],\r\n                        m.normal[i + 1],\r\n                        m.normal[i + 2],\r\n                        m.normal[i + 3],\r\n                    ).rotates(obj.rotation).writeBuffer(m.normal, i);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 0; i < mesh.quad?.position.length; i += 4) {\r\n            if (obj.scale) {\r\n                vp.set(\r\n                    mesh.quad.position[i] * obj.scale.x,\r\n                    mesh.quad.position[i + 1] * obj.scale.y,\r\n                    mesh.quad.position[i + 2] * obj.scale.z,\r\n                    mesh.quad.position[i + 3] * obj.scale.w,\r\n                ).rotates(obj.rotation).adds(obj.position).writeBuffer(mesh.quad.position as Float32Array, i);\r\n                if (mesh.quad.normal) {\r\n                    vp.set(\r\n                        mesh.quad.normal[i] * scaleinv.x,\r\n                        mesh.quad.normal[i + 1] * scaleinv.y,\r\n                        mesh.quad.normal[i + 2] * scaleinv.z,\r\n                        mesh.quad.normal[i + 3] * scaleinv.w,\r\n                    ).rotates(obj.rotation).norms().writeBuffer(mesh.quad.normal as Float32Array, i);\r\n                }\r\n            } else {\r\n                vp.set(\r\n                    mesh.quad.position[i],\r\n                    mesh.quad.position[i + 1],\r\n                    mesh.quad.position[i + 2],\r\n                    mesh.quad.position[i + 3],\r\n                ).rotates(obj.rotation).adds(obj.position).writeBuffer(mesh.quad.position as Float32Array, i);\r\n                if (mesh.quad.normal) {\r\n                    vp.set(\r\n                        mesh.quad.normal[i],\r\n                        mesh.quad.normal[i + 1],\r\n                        mesh.quad.normal[i + 2],\r\n                        mesh.quad.normal[i + 3],\r\n                    ).rotates(obj.rotation).writeBuffer(mesh.quad.normal as Float32Array, i);\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < mesh.triangle?.position.length; i += 4) {\r\n            if (obj.scale) {\r\n                vp.set(\r\n                    mesh.triangle.position[i] * obj.scale.x,\r\n                    mesh.triangle.position[i + 1] * obj.scale.y,\r\n                    mesh.triangle.position[i + 2] * obj.scale.z,\r\n                    mesh.triangle.position[i + 3] * obj.scale.w,\r\n                ).rotates(obj.rotation).adds(obj.position).writeBuffer(mesh.triangle.position as Float32Array, i);\r\n                if (mesh.triangle.normal) {\r\n                    vp.set(\r\n                        mesh.triangle.normal[i] * scaleinv.x,\r\n                        mesh.triangle.normal[i + 1] * scaleinv.y,\r\n                        mesh.triangle.normal[i + 2] * scaleinv.z,\r\n                        mesh.triangle.normal[i + 3] * scaleinv.w,\r\n                    ).rotates(obj.rotation).norms().writeBuffer(mesh.triangle.normal as Float32Array, i);\r\n                }\r\n            } else {\r\n                vp.set(\r\n                    mesh.triangle.position[i],\r\n                    mesh.triangle.position[i + 1],\r\n                    mesh.triangle.position[i + 2],\r\n                    mesh.triangle.position[i + 3],\r\n                ).rotates(obj.rotation).adds(obj.position).writeBuffer(mesh.triangle.position as Float32Array, i);\r\n                if (mesh.triangle.normal) {\r\n                    vp.set(\r\n                        mesh.triangle.normal[i],\r\n                        mesh.triangle.normal[i + 1],\r\n                        mesh.triangle.normal[i + 2],\r\n                        mesh.triangle.normal[i + 3],\r\n                    ).rotates(obj.rotation).writeBuffer(mesh.triangle.normal as Float32Array, i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return mesh;\r\n}\r\n// todo\r\n// export function concat(meshes: (FaceMesh | FaceIndexMesh)[]): FaceMesh | FaceIndexMesh {\r\n//     let hasPosition = false;\r\n//     for (let i = 0; i < meshes.length; i++) {\r\n//         let cur = typeof (meshes[i] as FaceIndexMesh).position !== \"undefined\";\r\n//         if (i) {\r\n//             if (hasPosition !== cur) {\r\n//                 console.error(\"Meshes must all be indexed or non-indexed.\");\r\n//                 return {};\r\n//             }\r\n//         }\r\n//         hasPosition = cur;\r\n//     }\r\n//     if (!meshes.length) return {};\r\n//     if ((meshes[0] as FaceIndexMesh).position) {\r\n//         let length = 0;\r\n//         let hasNormal = true;\r\n//         let hasUvw = true;\r\n//         const ms = meshes as FaceIndexMesh[];\r\n//         for (let i = 0; i < ms.length; i++) {\r\n//             length += ms[i].position.length;\r\n//             hasUvw = hasUvw && (ms[i].uvw ? true : false);\r\n//             hasNormal = hasNormal && (ms[i].normal ? true : false);\r\n//         }\r\n//         let position = new Float32Array(length);\r\n//         let ret: FaceIndexMesh = { position };\r\n//         let normal: Float32Array, uvw: Float32Array;\r\n//         if (hasNormal) {\r\n//             normal = new Float32Array(length);\r\n//             ret.normal = normal;\r\n//         }\r\n//         if (hasUvw) {\r\n//             uvw = new Float32Array(length);\r\n//             ret.uvw = uvw;\r\n//         }\r\n//         length = 0;\r\n//         for (let i = 0; i < meshes.length; i++) {\r\n//             position.set(meshes[i].position, length);\r\n//             if (hasNormal) {\r\n//                 normal.set(meshes[i].normal, length);\r\n//             }\r\n//             if (hasUvw) {\r\n//                 uvw.set(meshes[i].uvw, length);\r\n//             }\r\n//             length += meshes[i].position.length;\r\n//         }\r\n//         return ret;\r\n//     }\r\n\r\n// }","import { Vec2 } from \"../../math/algebra/vec2.js\";\r\nimport { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { Bivec } from \"../../math/algebra/bivec.js\";\r\nimport { Rotor } from \"../../math/algebra/rotor.js\";\r\nimport { Obj4 } from \"../../math/algebra/affine.js\";\r\nimport { _180, _360, _90 } from \"../../math/const.js\";\r\nimport { FaceIndexMesh, FaceIndexMeshData, FaceMesh } from \"./facemesh.js\";\r\nexport let square = new FaceMesh({\r\n    quad: {\r\n        normal: new Float32Array([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]),\r\n        position: new Float32Array([-1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0]),\r\n        uvw: new Float32Array([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0]),\r\n    }\r\n});\r\nexport function cube() {\r\n    let rotor = new Rotor();\r\n    let biv = new Bivec();\r\n    let yface = square.clone().applyObj4(new Obj4(Vec4.y, rotor.expset(biv.set(0, _90))));\r\n    let meshes = [\r\n        biv.set(_90).exp(),\r\n        biv.set(-_90).exp(),\r\n        biv.set(0, 0, 0, _90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(0, 0, 0, -_90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(_180).exp(),\r\n    ].map(r => yface.clone().applyObj4(new Obj4(new Vec4(), r)));\r\n    for (const m of meshes) yface = yface.concat(m);\r\n    let m = yface;\r\n    // for (let i = 0; i < 6; i++) {\r\n    //     for (let j = 0; j < 8; j++) {\r\n    //         m.uvw[i * 80 + j * 4 + 2] = i;\r\n    //     }\r\n    // }\r\n    return m;\r\n}\r\nexport function sphere(radius: number, u: number, v: number, uAngle: number = _360, vAngle: number = _180) {\r\n    if (u < 3) u = 3;\r\n    if (v < 3) v = 3;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n        let u = uvw.x * uAngle;\r\n        let v = uvw.y * vAngle;\r\n        let sv = Math.sin(v);\r\n        let cv = Math.cos(v);\r\n        norm.set(\r\n            sv * Math.cos(u), sv * Math.sin(u), cv, 0\r\n        );\r\n        sv *= radius;\r\n        pos.set(\r\n            sv * Math.cos(u), sv * Math.sin(u), cv * radius, 0\r\n        );\r\n    }, u, v);\r\n}\r\nexport function polygon(points: Vec4[]): FaceIndexMesh {\r\n    //todo: concave polygon\r\n    const len = points.length;\r\n    if (len < 3) console.error(`Polygon must have at least 3 points, ${len} points found`);\r\n    const ret = new FaceIndexMesh({\r\n        position: new Float32Array(len << 2),\r\n        uvw: new Float32Array(len << 2),\r\n        triangle: {\r\n            position: new Uint32Array(len * 3 - 6),\r\n            uvw: new Uint32Array(len * 3 - 6),\r\n            count: len - 2\r\n        }\r\n    });\r\n    let offset = 0;\r\n    for (let i = 0; i < len; i++) {\r\n        points[i].writeBuffer(ret.position, i << 2);\r\n        points[i].writeBuffer(ret.uvw, i << 2);\r\n        if (i > 1) {\r\n            ret.triangle.position[offset++] = 0;\r\n            ret.triangle.position[offset++] = i;\r\n            ret.triangle.position[offset++] = i - 1;\r\n            offset -= 3;\r\n            ret.triangle.uvw[offset++] = 0;\r\n            ret.triangle.uvw[offset++] = i;\r\n            ret.triangle.uvw[offset++] = i - 1;\r\n        }\r\n    }\r\n    // ret.position\r\n    return ret;\r\n}\r\nexport function circle(radius: number, segment: number) {\r\n    return polygon(new Array(segment).fill(0).map((_, i) =>\r\n        new Vec4(\r\n            Math.cos(i / segment * _360) * radius,\r\n            Math.sin(i / segment * _360) * radius,\r\n        )\r\n    ));\r\n}\r\nexport function parametricSurface(\r\n    fn: (inputuvw: Vec2, outputPosition: Vec4, outputNormal: Vec4) => void,\r\n    uSegment: number, vSegment: number\r\n) {\r\n    if (uSegment < 1) uSegment = 1;\r\n    if (vSegment < 1) vSegment = 1;\r\n    let arraySize = vSegment * vSegment << 4;\r\n    uSegment++; vSegment++;\r\n    let uvw_seg = uSegment * uSegment;\r\n    let positions = new Float32Array((uvw_seg) << 2);\r\n    let normals = new Float32Array((uvw_seg) << 2);\r\n    let uvws = new Float32Array((uvw_seg) << 2);\r\n    let position = new Float32Array(arraySize);\r\n    let normal = new Float32Array(arraySize);\r\n    let uvw = new Float32Array(arraySize);\r\n    let inputuvw = new Vec2;\r\n    let outputVertex = new Vec4;\r\n    let outputNormal = new Vec4;\r\n    let ptr = 0;\r\n    let idxPtr = 0;\r\n    function pushIdx(i: number) {\r\n        position[idxPtr++] = positions[i];\r\n        position[idxPtr++] = positions[i + 1];\r\n        position[idxPtr++] = positions[i + 2];\r\n        position[idxPtr++] = positions[i + 3];\r\n        idxPtr -= 4;\r\n        normal[idxPtr++] = normals[i];\r\n        normal[idxPtr++] = normals[i + 1];\r\n        normal[idxPtr++] = normals[i + 2];\r\n        normal[idxPtr++] = normals[i + 3];\r\n        idxPtr -= 4;\r\n        uvw[idxPtr++] = uvws[i];\r\n        uvw[idxPtr++] = uvws[i + 1];\r\n        uvw[idxPtr++] = uvws[i + 2];\r\n        uvw[idxPtr++] = uvws[i + 3];\r\n    }\r\n    for (let u_index = 0; u_index < uSegment; u_index++) {\r\n        inputuvw.x = u_index / (uSegment - 1);\r\n        let offset = vSegment * u_index;\r\n        for (let v_index = 0; v_index < vSegment; v_index++, offset++) {\r\n            inputuvw.y = v_index / (vSegment - 1);\r\n            fn(inputuvw, outputVertex, outputNormal);\r\n            positions[ptr++] = outputVertex.x;\r\n            positions[ptr++] = outputVertex.y;\r\n            positions[ptr++] = outputVertex.z;\r\n            positions[ptr++] = outputVertex.w;\r\n            ptr -= 4;\r\n            normals[ptr++] = outputNormal.x;\r\n            normals[ptr++] = outputNormal.y;\r\n            normals[ptr++] = outputNormal.z;\r\n            normals[ptr++] = outputNormal.w;\r\n            ptr -= 4;\r\n            uvws[ptr++] = inputuvw.x;\r\n            uvws[ptr++] = inputuvw.y;\r\n            uvws[ptr++] = 0;\r\n            uvws[ptr++] = 0;\r\n            if (u_index && v_index) {\r\n                // todo: if same -> no push or push to triangle\r\n                pushIdx(offset << 2);\r\n                pushIdx(offset - 1 << 2);\r\n                pushIdx(offset - vSegment << 2);\r\n                pushIdx(offset - vSegment - 1 << 2);\r\n            }\r\n        }\r\n    }\r\n    return new FaceMesh({\r\n        quad: { position, normal, uvw }\r\n    });\r\n}\r\n/** m must be a manifold or manifold with border */\r\nexport function findBorder(m: FaceIndexMeshData) {\r\n    if (!m.position) console.error(\"findBorder can onnly apply to FaceIndexMesh.\");\r\n    let borders = [];\r\n    for (let i = 0, l = m.quad?.position?.length; i < l!; i += 4) {\r\n        let p = m.quad!.position;\r\n        pushBorder(p[i], p[i + 1]);\r\n        pushBorder(p[i + 1], p[i + 2]);\r\n        pushBorder(p[i + 2], p[i + 3]);\r\n        pushBorder(p[i + 3], p[i]);\r\n    }\r\n    for (let i = 0, l = m.triangle?.position?.length; i < l!; i += 3) {\r\n        let p = m.triangle!.position;\r\n        pushBorder(p[i], p[i + 1]);\r\n        pushBorder(p[i + 1], p[i + 2]);\r\n        pushBorder(p[i + 2], p[i]);\r\n    }\r\n    function pushBorder(a: number, b: number) {\r\n        let count = 0;\r\n        let found = false;\r\n        for (let [j, k] of borders) {\r\n            if (j === b && k === a) {\r\n                found = true;\r\n                break;\r\n            }\r\n            if (j === a && k === b) {\r\n                found = true;\r\n                console.warn(\"findBorder: Non manifold mesh found.\");\r\n                break;\r\n            }\r\n            count++;\r\n        }\r\n        if (found) {\r\n            borders.splice(count, 1);\r\n        } else {\r\n            borders.push([a, b]);\r\n        }\r\n    }\r\n    return borders;\r\n}","import { Obj4 } from \"../../math/algebra/affine.js\";\r\nimport { Bivec } from \"../../math/algebra/bivec.js\";\r\nimport { Mat4 } from \"../../math/algebra/mat4.js\";\r\nimport { Rotor } from \"../../math/algebra/rotor.js\";\r\nimport { Vec3 } from \"../../math/algebra/vec3.js\";\r\nimport { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { _180, _360, _90 } from \"../../math/const.js\";\r\nimport { Spline } from \"../../math/geometry/spline.js\";\r\nimport * as face from \"../../mesh/face\";\r\nimport { CWMesh } from \"../cwmesh/cwmesh.js\";\r\nimport { concat, TetraMesh } from \"./tetramesh.js\";\r\n\r\nexport let cube = new TetraMesh({\r\n    position: new Float32Array([\r\n        1, 0, -1, -1,\r\n        1, 0, 1, 1,\r\n        -1, 0, -1, 1,\r\n        -1, 0, 1, -1,\r\n\r\n        -1, 0, -1, -1,\r\n        1, 0, -1, -1,\r\n        -1, 0, -1, 1,\r\n        -1, 0, 1, -1,\r\n\r\n        1, 0, 1, 1,\r\n        -1, 0, 1, 1,\r\n        -1, 0, -1, 1,\r\n        -1, 0, 1, -1,\r\n\r\n        1, 0, 1, 1,\r\n        1, 0, -1, -1,\r\n        1, 0, 1, -1,\r\n        -1, 0, 1, -1,\r\n\r\n        1, 0, 1, 1,\r\n        1, 0, -1, -1,\r\n        -1, 0, -1, 1,\r\n        1, 0, -1, 1,\r\n    ]),\r\n    normal: new Float32Array([\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n    ]),\r\n    uvw: new Float32Array([\r\n        1, -1, -1, 0,\r\n        1, 1, 1, 0,\r\n        -1, -1, 1, 0,\r\n        -1, 1, -1, 0,\r\n        -1, -1, -1, 0,\r\n        1, -1, -1, 0,\r\n        -1, -1, 1, 0,\r\n        -1, 1, -1, 0,\r\n        1, 1, 1, 0,\r\n        -1, 1, 1, 0,\r\n        -1, -1, 1, 0,\r\n        -1, 1, -1, 0,\r\n        1, 1, 1, 0,\r\n        1, -1, -1, 0,\r\n        1, 1, -1, 0,\r\n        -1, 1, -1, 0,\r\n        1, 1, 1, 0,\r\n        1, -1, -1, 0,\r\n        -1, -1, 1, 0,\r\n        1, -1, 1, 0,\r\n    ]),\r\n    count: 5\r\n});\r\n\r\nexport function tesseract(): TetraMesh {\r\n    let rotor = new Rotor();\r\n    let biv = new Bivec();\r\n    let yface = cube.clone().applyObj4(new Obj4(Vec4.y, rotor.expset(biv.set(0, _90))));\r\n    let meshes = [\r\n        biv.set(_90).exp(),\r\n        biv.set(-_90).exp().mulsl(rotor.expset(biv.set(0, 0, 0, 0, _180))),\r\n        biv.set(0, 0, 0, _90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(0, 0, 0, -_90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(0, 0, 0, 0, _90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(0, 0, 0, 0, -_90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(_180).exp(),\r\n    ].map(r => yface.clone().applyObj4(new Obj4(new Vec4(), r)));\r\n    meshes.push(yface);\r\n    let m = concat(meshes);\r\n    for (let i = 0; i < 8; i++) {\r\n        for (let j = 0; j < 20; j++) {\r\n            m.uvw[i * 80 + j * 4 + 3] = i;\r\n        }\r\n    }\r\n    return m;\r\n}\r\nexport let hexadecachoron = new TetraMesh({\r\n    position: new Float32Array([\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n        0, 1, 0, 0,\r\n        1, 0, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, -1,\r\n        0, 1, 0, 0,\r\n        1, 0, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, 1,\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, -1,\r\n\r\n        0, -1, 0, 0,\r\n        1, 0, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n        1, 0, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, -1,\r\n        1, 0, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, 1,\r\n        0, -1, 0, 0,\r\n        1, 0, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, -1,\r\n\r\n\r\n        0, 1, 0, 0,\r\n        -1, 0, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n        -1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, -1,\r\n        -1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, 1,\r\n        0, 1, 0, 0,\r\n        -1, 0, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, -1,\r\n\r\n        -1, 0, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n        0, -1, 0, 0,\r\n        -1, 0, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, -1,\r\n        0, -1, 0, 0,\r\n        -1, 0, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, 1,\r\n        -1, 0, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, 0, -1,\r\n\r\n    ]),\r\n    normal: new Float32Array([\r\n        0.5, 0.5, 0.5, 0.5,\r\n        0.5, 0.5, 0.5, 0.5,\r\n        0.5, 0.5, 0.5, 0.5,\r\n        0.5, 0.5, 0.5, 0.5,\r\n        0.5, 0.5, 0.5, -0.5,\r\n        0.5, 0.5, 0.5, -0.5,\r\n        0.5, 0.5, 0.5, -0.5,\r\n        0.5, 0.5, 0.5, -0.5,\r\n        0.5, 0.5, -0.5, 0.5,\r\n        0.5, 0.5, -0.5, 0.5,\r\n        0.5, 0.5, -0.5, 0.5,\r\n        0.5, 0.5, -0.5, 0.5,\r\n        0.5, 0.5, -0.5, -0.5,\r\n        0.5, 0.5, -0.5, -0.5,\r\n        0.5, 0.5, -0.5, -0.5,\r\n        0.5, 0.5, -0.5, -0.5,\r\n\r\n        0.5, -0.5, 0.5, 0.5,\r\n        0.5, -0.5, 0.5, 0.5,\r\n        0.5, -0.5, 0.5, 0.5,\r\n        0.5, -0.5, 0.5, 0.5,\r\n        0.5, -0.5, 0.5, -0.5,\r\n        0.5, -0.5, 0.5, -0.5,\r\n        0.5, -0.5, 0.5, -0.5,\r\n        0.5, -0.5, 0.5, -0.5,\r\n        0.5, -0.5, -0.5, 0.5,\r\n        0.5, -0.5, -0.5, 0.5,\r\n        0.5, -0.5, -0.5, 0.5,\r\n        0.5, -0.5, -0.5, 0.5,\r\n        0.5, -0.5, -0.5, -0.5,\r\n        0.5, -0.5, -0.5, -0.5,\r\n        0.5, -0.5, -0.5, -0.5,\r\n        0.5, -0.5, -0.5, -0.5,\r\n\r\n\r\n        -0.5, 0.5, 0.5, 0.5,\r\n        -0.5, 0.5, 0.5, 0.5,\r\n        -0.5, 0.5, 0.5, 0.5,\r\n        -0.5, 0.5, 0.5, 0.5,\r\n        -0.5, 0.5, 0.5, -0.5,\r\n        -0.5, 0.5, 0.5, -0.5,\r\n        -0.5, 0.5, 0.5, -0.5,\r\n        -0.5, 0.5, 0.5, -0.5,\r\n        -0.5, 0.5, -0.5, 0.5,\r\n        -0.5, 0.5, -0.5, 0.5,\r\n        -0.5, 0.5, -0.5, 0.5,\r\n        -0.5, 0.5, -0.5, 0.5,\r\n        -0.5, 0.5, -0.5, -0.5,\r\n        -0.5, 0.5, -0.5, -0.5,\r\n        -0.5, 0.5, -0.5, -0.5,\r\n        -0.5, 0.5, -0.5, -0.5,\r\n\r\n        -0.5, -0.5, 0.5, 0.5,\r\n        -0.5, -0.5, 0.5, 0.5,\r\n        -0.5, -0.5, 0.5, 0.5,\r\n        -0.5, -0.5, 0.5, 0.5,\r\n        -0.5, -0.5, 0.5, -0.5,\r\n        -0.5, -0.5, 0.5, -0.5,\r\n        -0.5, -0.5, 0.5, -0.5,\r\n        -0.5, -0.5, 0.5, -0.5,\r\n        -0.5, -0.5, -0.5, 0.5,\r\n        -0.5, -0.5, -0.5, 0.5,\r\n        -0.5, -0.5, -0.5, 0.5,\r\n        -0.5, -0.5, -0.5, 0.5,\r\n        -0.5, -0.5, -0.5, -0.5,\r\n        -0.5, -0.5, -0.5, -0.5,\r\n        -0.5, -0.5, -0.5, -0.5,\r\n        -0.5, -0.5, -0.5, -0.5,\r\n    ]),\r\n    uvw: new Float32Array([\r\n        0, 0, 0, 0,\r\n        1, 1, 0, 0,\r\n        1, 0, 1, 0,\r\n        0, 1, 1, 0,\r\n        0, 0, 0, 1,\r\n        1, 1, 0, 1,\r\n        1, 0, 1, 1,\r\n        0, 1, 1, 1,\r\n        0, 0, 0, 2,\r\n        1, 1, 0, 2,\r\n        1, 0, 1, 2,\r\n        0, 1, 1, 2,\r\n        0, 0, 0, 3,\r\n        1, 1, 0, 3,\r\n        1, 0, 1, 3,\r\n        0, 1, 1, 3,\r\n        0, 0, 0, 4,\r\n        1, 1, 0, 4,\r\n        1, 0, 1, 4,\r\n        0, 1, 1, 4,\r\n        0, 0, 0, 5,\r\n        1, 1, 0, 5,\r\n        1, 0, 1, 5,\r\n        0, 1, 1, 5,\r\n        0, 0, 0, 6,\r\n        1, 1, 0, 6,\r\n        1, 0, 1, 6,\r\n        0, 1, 1, 6,\r\n        0, 0, 0, 7,\r\n        1, 1, 0, 7,\r\n        1, 0, 1, 7,\r\n        0, 1, 1, 7,\r\n        0, 0, 0, 8,\r\n        1, 1, 0, 8,\r\n        1, 0, 1, 8,\r\n        0, 1, 1, 8,\r\n        0, 0, 0, 9,\r\n        1, 1, 0, 9,\r\n        1, 0, 1, 9,\r\n        0, 1, 1, 9,\r\n        0, 0, 0, 10,\r\n        1, 1, 0, 10,\r\n        1, 0, 1, 10,\r\n        0, 1, 1, 10,\r\n        0, 0, 0, 11,\r\n        1, 1, 0, 11,\r\n        1, 0, 1, 11,\r\n        0, 1, 1, 11,\r\n        0, 0, 0, 12,\r\n        1, 1, 0, 12,\r\n        1, 0, 1, 12,\r\n        0, 1, 1, 12,\r\n        0, 0, 0, 13,\r\n        1, 1, 0, 13,\r\n        1, 0, 1, 13,\r\n        0, 1, 1, 13,\r\n        0, 0, 0, 14,\r\n        1, 1, 0, 14,\r\n        1, 0, 1, 14,\r\n        0, 1, 1, 14,\r\n        0, 0, 0, 15,\r\n        1, 1, 0, 15,\r\n        1, 0, 1, 15,\r\n        0, 1, 1, 15,\r\n    ]),\r\n    count: 16\r\n});\r\nexport function glome(radius: number, xySegment: number, zwSegment: number, latitudeSegment: number) {\r\n    if (xySegment < 3) xySegment = 3;\r\n    if (zwSegment < 3) zwSegment = 3;\r\n    if (latitudeSegment < 1) latitudeSegment = 1;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n        let u = uvw.x * _360;\r\n        let v = uvw.y * _360;\r\n        let w = uvw.z * _90;\r\n        let cos = Math.cos(w) * radius;\r\n        let sin = Math.sin(w) * radius;\r\n        pos.set(-Math.cos(u) * cos, Math.sin(u) * cos, Math.cos(v) * sin, Math.sin(v) * sin);\r\n        norm.copy(pos);\r\n    }, xySegment, zwSegment, latitudeSegment);\r\n}\r\n\r\nexport function spheritorus(\r\n    sphereRadius: number, longitudeSegment: number, latitudeSegment: number,\r\n    circleRadius: number, circleSegment: number\r\n) {\r\n    if (longitudeSegment < 3) longitudeSegment = 3;\r\n    if (latitudeSegment < 3) latitudeSegment = 3;\r\n    if (circleSegment < 3) circleSegment = 3;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n        let u = uvw.x * _360;\r\n        let v = uvw.y * _180;\r\n        let w = uvw.z * _360;\r\n        let sv = Math.sin(v);\r\n        let radius = circleRadius + sv * Math.cos(u) * sphereRadius;\r\n        let sw = Math.sin(w) * radius;\r\n        let cw = Math.cos(w) * radius;\r\n        pos.set(\r\n            -cw, sv * Math.sin(u) * sphereRadius, Math.cos(v) * sphereRadius, sw\r\n        );\r\n        norm.set(\r\n            -sv * Math.cos(u) * Math.cos(w),\r\n            sv * Math.sin(u),\r\n            Math.cos(v),\r\n            sv * Math.cos(u) * Math.sin(w),\r\n        );\r\n    }, longitudeSegment, latitudeSegment, circleSegment);\r\n}\r\nexport function torisphere(\r\n    circleRadius: number, circleSegment: number,\r\n    sphereRadius: number, longitudeSegment: number, latitudeSegment: number\r\n) {\r\n    if (longitudeSegment < 3) longitudeSegment = 3;\r\n    if (latitudeSegment < 3) latitudeSegment = 3;\r\n    if (circleSegment < 3) circleSegment = 3;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n        let u = -uvw.x * _360;\r\n        let v = uvw.y * _180;\r\n        let w = uvw.z * _360;\r\n        let sv = Math.sin(v);\r\n        let cw = Math.cos(w);\r\n        let radius = circleRadius * cw + sphereRadius;\r\n        pos.set(\r\n            sv * Math.cos(u) * radius,\r\n            circleRadius * Math.sin(w),\r\n            sv * Math.sin(u) * radius,\r\n            Math.cos(v) * radius,\r\n        );\r\n        norm.set(\r\n            sv * Math.cos(u) * cw,\r\n            Math.sin(w),\r\n            sv * Math.sin(u) * cw,\r\n            Math.cos(v) * cw,\r\n        );\r\n    }, longitudeSegment, latitudeSegment, circleSegment);\r\n}\r\nexport function spherinderSide(radius1: number, radius2: number, longitudeSegment: number, latitudeSegment: number, height: number, heightSegment: number = 1) {\r\n    if (longitudeSegment < 3) longitudeSegment = 3;\r\n    if (latitudeSegment < 3) latitudeSegment = 3;\r\n    if (heightSegment < 1) heightSegment = 1;\r\n    const avgRadius = (radius1 + radius2) * 0.5;\r\n    const len = 1 / Math.hypot(radius2 - radius1, height);\r\n    // const slope = (radius2 - radius1) / height;\r\n    const sinS = (radius2 - radius1) * len;\r\n    const cosS = height * len;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n        let u = uvw.x * _180;\r\n        let v = uvw.y * _360;\r\n        let w = uvw.z - 0.5;\r\n        let radius = avgRadius + (radius2 - radius1) * w;\r\n        let su = Math.sin(u);\r\n        let cu = Math.cos(u);\r\n        pos.set(Math.sin(v) * su * radius, Math.cos(v) * su * radius, -cu * radius, w * height);\r\n        su *= cosS;\r\n        // norm.set(Math.sin(v) * cu, Math.cos(v) * cu, su, 0);\r\n        norm.set(Math.sin(v) * su, Math.cos(v) * su, -cosS * cu, -sinS);\r\n    }, longitudeSegment, latitudeSegment, heightSegment);\r\n}\r\nexport function sphere(radius: number, u: number, v: number) {\r\n    return rotatoid(Bivec.yz, face.polygon(new Array(u).fill(0).map((_, i) =>\r\n        new Vec4(\r\n            Math.cos(i / (u - 1) * _180) * radius,\r\n            Math.sin(i / (u - 1) * _180) * radius,\r\n        )\r\n    )).toNonIndexMesh().setConstantNormal(Vec4.w), v);\r\n}\r\nexport function tiger(xyRadius: number, xySegment: number, zwRadius: number, zwSegment: number, secondaryRadius: number, secondarySegment: number) {\r\n    if (xySegment < 3) xySegment = 3;\r\n    if (zwSegment < 3) zwSegment = 3;\r\n    if (secondarySegment < 3) secondarySegment = 3;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n\r\n        let u = uvw.x * _360;\r\n        let v = uvw.y * _360;\r\n        let w = uvw.z * _360;\r\n        let su = Math.sin(w);\r\n        let cu = Math.cos(w);\r\n\r\n        pos.set(\r\n            (su * secondaryRadius + xyRadius) * Math.sin(u),\r\n            (su * secondaryRadius + xyRadius) * Math.cos(u),\r\n            (cu * secondaryRadius + zwRadius) * Math.sin(v),\r\n            (cu * secondaryRadius + zwRadius) * Math.cos(v),\r\n        );\r\n        norm.set(\r\n            su * Math.sin(u),\r\n            su * Math.cos(u),\r\n            cu * Math.sin(v),\r\n            cu * Math.cos(v),\r\n        );\r\n    }, xySegment, zwSegment, secondarySegment);\r\n}\r\n\r\nexport function ditorus(majorRadius: number, majorSegment: number, middleRadius: number, middleSegment: number, minorRadius: number, minorSegment: number) {\r\n    if (majorSegment < 3) majorSegment = 3;\r\n    if (middleSegment < 3) middleSegment = 3;\r\n    if (minorSegment < 3) minorSegment = 3;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n\r\n        let u = uvw.x * _360;\r\n        let v = uvw.y * _360;\r\n        let w = uvw.z * _360;\r\n        let cw = Math.cos(w);\r\n        const R2 = middleRadius + minorRadius * cw;\r\n        const R1 = majorRadius + R2 * Math.cos(v);\r\n        pos.set(\r\n            R1 * Math.cos(u),\r\n            R1 * Math.sin(u),\r\n            R2 * Math.sin(v),\r\n            minorRadius * Math.sin(w),\r\n        );\r\n        norm.set(\r\n            cw * Math.cos(v) * Math.cos(u),\r\n            cw * Math.cos(v) * Math.sin(u),\r\n            cw * Math.sin(v),\r\n            Math.sin(w),\r\n        );\r\n    }, majorSegment, middleSegment, minorSegment);\r\n}\r\n\r\nexport function parametricSurface(\r\n    fn: (inputUVW: Vec3, outputPosition: Vec4, outputNormal: Vec4) => void,\r\n    uSegment: number, vSegment: number, wSegment: number\r\n): TetraMesh {\r\n    if (uSegment < 1) uSegment = 1;\r\n    if (vSegment < 1) vSegment = 1;\r\n    if (wSegment < 1) wSegment = 1;\r\n    let count = uSegment * vSegment * wSegment * 5;\r\n    let arraySize = count << 4;\r\n    uSegment++; vSegment++; wSegment++;\r\n    let vw_seg = vSegment * wSegment;\r\n    let uvw_seg = uSegment * vw_seg;\r\n    let positions = new Float32Array((uvw_seg) << 2);\r\n    let normals = new Float32Array((uvw_seg) << 2);\r\n    let uvws = new Float32Array((uvw_seg) << 2);\r\n    let position = new Float32Array(arraySize);\r\n    let normal = new Float32Array(arraySize);\r\n    let uvw = new Float32Array(arraySize);\r\n    let inputUVW = new Vec3;\r\n    let idxbuffer = new Uint32Array(8);\r\n    let outputVertex = new Vec4;\r\n    let outputNormal = new Vec4;\r\n    let ptr = 0;\r\n    let idxPtr = 0;\r\n    function pushIdx(i: number) {\r\n        position[idxPtr++] = positions[i];\r\n        position[idxPtr++] = positions[i + 1];\r\n        position[idxPtr++] = positions[i + 2];\r\n        position[idxPtr++] = positions[i + 3];\r\n        idxPtr -= 4;\r\n        normal[idxPtr++] = normals[i];\r\n        normal[idxPtr++] = normals[i + 1];\r\n        normal[idxPtr++] = normals[i + 2];\r\n        normal[idxPtr++] = normals[i + 3];\r\n        idxPtr -= 4;\r\n        uvw[idxPtr++] = uvws[i];\r\n        uvw[idxPtr++] = uvws[i + 1];\r\n        uvw[idxPtr++] = uvws[i + 2];\r\n        uvw[idxPtr++] = uvws[i + 3];\r\n    }\r\n    function pushTetra(a: number, b: number, c: number, d: number) {\r\n        a = idxbuffer[a];\r\n        b = idxbuffer[b];\r\n        c = idxbuffer[c];\r\n        d = idxbuffer[d];\r\n        function same(offset1: number, offset2: number) {\r\n            return positions[offset1] === positions[offset2] &&\r\n                positions[offset1 + 1] === positions[offset2 + 1] &&\r\n                positions[offset1 + 2] === positions[offset2 + 2] &&\r\n                positions[offset1 + 3] === positions[offset2 + 3];\r\n        }\r\n        if (!(same(a, b) || same(a, c) || same(a, d) || same(b, c) || same(b, d))) {\r\n            pushIdx(a); pushIdx(b); pushIdx(c); pushIdx(d);\r\n        }\r\n    }\r\n    for (let u_index = 0; u_index < uSegment; u_index++) {\r\n        inputUVW.x = u_index / (uSegment - 1);\r\n        let u_offset = vSegment * u_index;\r\n        for (let v_index = 0; v_index < vSegment; v_index++) {\r\n            inputUVW.y = v_index / (vSegment - 1);\r\n            let v_offset = wSegment * (v_index + u_offset);\r\n            for (let w_index = 0; w_index < wSegment; w_index++) {\r\n                inputUVW.z = w_index / (wSegment - 1);\r\n                fn(inputUVW, outputVertex, outputNormal);\r\n                positions[ptr++] = outputVertex.x;\r\n                positions[ptr++] = outputVertex.y;\r\n                positions[ptr++] = outputVertex.z;\r\n                positions[ptr++] = outputVertex.w;\r\n                ptr -= 4;\r\n                normals[ptr++] = outputNormal.x;\r\n                normals[ptr++] = outputNormal.y;\r\n                normals[ptr++] = outputNormal.z;\r\n                normals[ptr++] = outputNormal.w;\r\n                ptr -= 4;\r\n                uvws[ptr++] = inputUVW.x;\r\n                uvws[ptr++] = inputUVW.y;\r\n                uvws[ptr++] = inputUVW.z;\r\n                uvws[ptr++] = 0;\r\n                if (u_index && v_index && w_index) {\r\n                    let offset = w_index + v_offset;\r\n                    idxbuffer[0] = offset << 2;\r\n                    idxbuffer[1] = offset - 1 << 2;\r\n                    idxbuffer[2] = offset - wSegment << 2;\r\n                    idxbuffer[3] = offset - wSegment - 1 << 2;\r\n                    idxbuffer[4] = offset - vw_seg << 2;\r\n                    idxbuffer[5] = offset - vw_seg - 1 << 2;\r\n                    idxbuffer[6] = offset - vw_seg - wSegment << 2;\r\n                    idxbuffer[7] = offset - vw_seg - wSegment - 1 << 2;\r\n                    pushTetra(0, 1, 2, 4);\r\n                    pushTetra(1, 5, 7, 4);\r\n                    pushTetra(1, 2, 7, 3);\r\n                    pushTetra(4, 6, 7, 2);\r\n                    pushTetra(1, 2, 4, 7);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new TetraMesh({ position, normal, uvw, count });\r\n}\r\nexport function convexhull(points: Vec4[]) {\r\n    // todo: fix a random dead loop bug\r\n    if (points.length < 5) return;\r\n    points.sort((a, b) => Math.random() - 0.5);\r\n    let _vec41 = new Vec4();\r\n    let _vec42 = new Vec4();\r\n    let _vec43 = new Vec4();\r\n    let _vec44 = new Vec4();\r\n    // let _vec45 = new Vec4();\r\n    let _mat4 = new Mat4();\r\n    let determinant = 0;\r\n    let nobreak = true;\r\n    let a = 0, b = 1, c = 2, d = 3, e = 4;\r\n    let epsilon = 1e-10;\r\n    for (a = 0; a < points.length && nobreak; a++) {\r\n        for (b = a + 1; b < points.length && nobreak; b++) {\r\n            for (c = b + 1; c < points.length && nobreak; c++) {\r\n                for (d = c + 1; d < points.length && nobreak; d++) {\r\n                    for (e = d + 1; e < points.length; e++) {\r\n                        determinant = det(a, b, c, d, e);\r\n                        if (Math.abs(determinant) > epsilon) {\r\n                            nobreak = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (determinant === 0) return;\r\n    let temp: Vec4; b--; c--; d--; a--;\r\n    temp = points[0]; points[0] = points[a]; points[a] = temp;\r\n    if (b === 0) b = a; if (c === 0) c = a; if (d === 0) d = a; if (e === 0) e = a;\r\n    temp = points[1]; points[1] = points[b]; points[b] = temp;\r\n    if (c === 1) c = b; if (d === 1) d = b; if (e === 1) e = b;\r\n    temp = points[2]; points[2] = points[c]; points[c] = temp;\r\n    if (d === 2) d = c; if (e === 2) e = c;\r\n    temp = points[3]; points[3] = points[d]; points[d] = temp;\r\n    if (e === 3) e = d;\r\n    temp = points[4]; points[4] = points[e]; points[e] = temp;\r\n    let count = 5; // indices.length === count * 4 always is true\r\n    console.log(determinant);\r\n    console.log(det(0, 1, 2, 3, 4));\r\n    let indices = det(0, 1, 2, 3, 4) > 0 ?\r\n        [1, 2, 3, 4, 2, 0, 3, 4, 0, 1, 3, 4, 1, 0, 2, 4, 0, 1, 2, 3]\r\n        :\r\n        [2, 1, 3, 4, 0, 2, 3, 4, 1, 0, 3, 4, 0, 1, 2, 4, 1, 0, 2, 3];\r\n    function det(a: number, b: number, c: number, d: number, e: number) {\r\n        let p = points[e];\r\n        return _mat4.augVec4set(\r\n            _vec41.subset(p, points[a]),\r\n            _vec42.subset(p, points[b]),\r\n            _vec43.subset(p, points[c]),\r\n            _vec44.subset(p, points[d]),\r\n        ).det();\r\n    }\r\n    for (let cursor = 5; cursor < points.length; cursor++) {\r\n        let newIndices = [];\r\n        // borderformat [v1,v2,v3,flag], v1>v2>v3, \r\n        // flag: 1 orientation +, 0 orientation -, 2 duplicate remove\r\n        let border: number[][] = [];\r\n        function checkBorder(a: number, b: number, c: number) {\r\n            let item = a > b ? b > c ? [a, b, c, 1] : a > c ? [a, c, b, 0] : [c, a, b, 1] :\r\n                a > c ? [b, a, c, 0] : b > c ? [b, c, a, 1] : [c, b, a, 0];\r\n            let found = false;\r\n            for (let i of border) {\r\n                if (i[0] === item[0] && i[1] === item[1] && i[2] === item[2]) {\r\n                    i[3] = 2;\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                border.push(item);\r\n            }\r\n        }\r\n        for (let cell = 0; cell < count; cell++) {\r\n            let a = indices[cell << 2];\r\n            let b = indices[(cell << 2) + 1];\r\n            let c = indices[(cell << 2) + 2];\r\n            let d = indices[(cell << 2) + 3];\r\n            let determinant = det(a, b, c, d, cursor);\r\n            if (determinant < epsilon) {\r\n                checkBorder(b, c, d);\r\n                checkBorder(c, a, d);\r\n                checkBorder(a, b, d);\r\n                checkBorder(b, a, c);\r\n            } else {\r\n                newIndices.push(a, b, c, d);\r\n            }\r\n        }\r\n        for (let b of border) {\r\n            if (b[3] === 2) continue;\r\n            else if (b[3] === 0) newIndices.push(b[0], b[1], b[2], cursor);\r\n            else if (b[3] === 1) newIndices.push(b[0], b[2], b[1], cursor);\r\n        }\r\n        indices = newIndices;\r\n        count = indices.length >> 2;\r\n    }\r\n    let position = new Float32Array(count << 4);\r\n    let countPtr = 0;\r\n    for (let p = 0; p < count; p++) {\r\n        points[indices[(p << 2)]].writeBuffer(position, countPtr); countPtr += 4;\r\n        points[indices[(p << 2) + 1]].writeBuffer(position, countPtr); countPtr += 4;\r\n        points[indices[(p << 2) + 2]].writeBuffer(position, countPtr); countPtr += 4;\r\n        points[indices[(p << 2) + 3]].writeBuffer(position, countPtr); countPtr += 4;\r\n    }\r\n    return new TetraMesh({\r\n        position,\r\n        count\r\n    });\r\n}\r\n\r\nexport function duocylinder(xyRadius: number, xySegment: number, zwRadius: number, zwSegment: number) {\r\n    let dp = directProduct(face.circle(xyRadius, xySegment), face.circle(zwRadius, zwSegment));\r\n    for (let i = 0; i < dp.uvw.length; i += 4) {\r\n        dp.uvw[i + 2] = dp.uvw[i + 3] < 0.5 ? Math.atan2(dp.position[i + 3], dp.position[i + 2]) : Math.atan2(dp.position[i + 1], dp.position[i]);\r\n    }\r\n    return dp;\r\n}\r\nexport function loft(sp: Spline, section: face.FaceMeshData, step: number): TetraMesh {\r\n    let { points, rotors, curveLength } = sp.generate(step);\r\n    let quadcount = section.quad ? section.quad.position.length >> 4 : 0;\r\n    let count4 = quadcount * (points.length - 1) * 5;\r\n    let tricount = section.triangle ? section.triangle.position.length / 12 : 0;\r\n    let count3 = tricount * (points.length - 1) * 3;\r\n    let arraySize = count4 + count3 << 4;\r\n    let pslen4 = quadcount * points.length << 4;\r\n    let pslen3 = tricount * points.length * 12;\r\n    let pslen = Math.max(pslen4, pslen3);\r\n    let positions = new Float32Array(pslen);\r\n    let uvws = new Float32Array(pslen);\r\n    let normals = new Float32Array(pslen);\r\n    let position = new Float32Array(arraySize);\r\n    let uvw = new Float32Array(arraySize);\r\n    let normal = new Float32Array(arraySize);\r\n    let _vec4 = new Vec4(); // cache\r\n    let offset = 0;\r\n    let idxPtr = 0;\r\n    if (section.quad) {\r\n        let pos = section.quad.position;\r\n        let norm = section.quad.normal;\r\n        let uv = section.quad.uvw;\r\n        for (let ptr = 0; ptr < (quadcount << 4); ptr += 16) {\r\n            for (let j = 0; j < rotors.length; j++) {\r\n                let r = rotors[j];\r\n                let p = points[j];\r\n                for (let i = 0; i < 4; i++, ptr += 4) {\r\n                    _vec4.set(pos[ptr], pos[ptr + 1], pos[ptr + 2], pos[ptr + 3]);\r\n                    _vec4.rotates(r).adds(p);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(norm[ptr], norm[ptr + 1], norm[ptr + 2], norm[ptr + 3]);\r\n                    _vec4.rotates(r);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[ptr], uv[ptr + 1], uv[ptr + 2], curveLength[j]);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 16;\r\n                if (j) {\r\n                    let doffset = offset - 32;\r\n                    pushTetra(doffset, 0, 1, 3, 4);\r\n                    pushTetra(doffset, 1, 5, 6, 4);\r\n                    pushTetra(doffset, 1, 3, 6, 2);\r\n                    pushTetra(doffset, 4, 7, 6, 3);\r\n                    pushTetra(doffset, 1, 3, 4, 6);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (section.triangle) {\r\n        offset = 0;\r\n        let pos = section.triangle.position;\r\n        let norm = section.triangle.normal;\r\n        let uv = section.triangle.uvw;\r\n        for (let ptr = 0, l = tricount * 12; ptr < l; ptr += 12) {\r\n            for (let j = 0; j < rotors.length; j++) {\r\n                let r = rotors[j];\r\n                let p = points[j];\r\n                for (let i = 0; i < 3; i++, ptr += 4) {\r\n                    _vec4.set(pos[ptr], pos[ptr + 1], pos[ptr + 2], pos[ptr + 3]);\r\n                    _vec4.rotates(r).adds(p);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(norm[ptr], norm[ptr + 1], norm[ptr + 2], norm[ptr + 3]);\r\n                    _vec4.rotates(r);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[ptr], uv[ptr + 1], uv[ptr + 2], curveLength[j]);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 12;\r\n                if (j) {\r\n                    let doffset = offset - 24;\r\n                    pushTetra(doffset, 0, 1, 2, 3);\r\n                    pushTetra(doffset, 1, 2, 3, 5);\r\n                    pushTetra(doffset, 3, 4, 1, 5);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function pushTetra(offset: number, a: number, b: number, c: number, d: number) {\r\n        a = offset + (a << 2);\r\n        b = offset + (b << 2);\r\n        c = offset + (c << 2);\r\n        d = offset + (d << 2);\r\n        pushIdx(a); pushIdx(b); pushIdx(c); pushIdx(d);\r\n    }\r\n    function pushIdx(i: number) {\r\n        position[idxPtr++] = positions[i];\r\n        position[idxPtr++] = positions[i + 1];\r\n        position[idxPtr++] = positions[i + 2];\r\n        position[idxPtr++] = positions[i + 3];\r\n        idxPtr -= 4;\r\n        normal[idxPtr++] = normals[i];\r\n        normal[idxPtr++] = normals[i + 1];\r\n        normal[idxPtr++] = normals[i + 2];\r\n        normal[idxPtr++] = normals[i + 3];\r\n        idxPtr -= 4;\r\n        uvw[idxPtr++] = uvws[i];\r\n        uvw[idxPtr++] = uvws[i + 1];\r\n        uvw[idxPtr++] = uvws[i + 2];\r\n        uvw[idxPtr++] = uvws[i + 3];\r\n    }\r\n    return new TetraMesh({ position, uvw, normal, count: count3 + count4 });\r\n}\r\n// bv is rotate plane (not axis plane), it must be simple and normalized\r\nexport function rotatoid(bv: Bivec, section: face.FaceMeshData, step: number, angle: number = _360): TetraMesh {\r\n    let coeffAngle = angle / (step - 1);\r\n    let rotors = new Array(step).fill(0).map((_, i) => bv.mulf(coeffAngle * i).exp());\r\n    let quadcount = section.quad ? section.quad.position.length >> 4 : 0;\r\n    let count4 = quadcount * (rotors.length) * 5;\r\n    let tricount = section.triangle ? section.triangle.position.length / 12 : 0;\r\n    let count3 = tricount * (rotors.length) * 3;\r\n    let arraySize = count4 + count3 << 4;\r\n    let pslen4 = quadcount * rotors.length << 4;\r\n    let pslen3 = tricount * rotors.length * 12;\r\n    let pslen = Math.max(pslen4, pslen3);\r\n    let positions = new Float32Array(pslen);\r\n    let uvws = new Float32Array(pslen);\r\n    let normals = new Float32Array(pslen);\r\n    let position = new Float32Array(arraySize);\r\n    let uvw = new Float32Array(arraySize);\r\n    let normal = new Float32Array(arraySize);\r\n    let _vec4 = new Vec4(); // cache\r\n    let offset = 0;\r\n    let idxPtr = 0;\r\n    if (section.quad) {\r\n        let pos = section.quad.position;\r\n        let norm = section.quad.normal;\r\n        let uv = section.quad.uvw;\r\n        for (let ptr = 0; ptr < (quadcount << 4); ptr += 16) {\r\n            for (let j = 0; j < rotors.length; j++) {\r\n                let r = rotors[j];\r\n                for (let i = 0; i < 4; i++, ptr += 4) {\r\n                    _vec4.set(pos[ptr], pos[ptr + 1], pos[ptr + 2], pos[ptr + 3]);\r\n                    _vec4.rotates(r);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    if (norm) {\r\n                        _vec4.set(norm[ptr], norm[ptr + 1], norm[ptr + 2], norm[ptr + 3]);\r\n                    } else { _vec4.set(); }\r\n                    _vec4.rotates(r);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[ptr], uv[ptr + 1], uv[ptr + 2], coeffAngle * j);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 16;\r\n                let doffset = offset - 32;\r\n                if (j) {\r\n                    pushTetra(doffset, 0, 1, 3, 4);\r\n                    pushTetra(doffset, 1, 5, 6, 4);\r\n                    pushTetra(doffset, 1, 3, 6, 2);\r\n                    pushTetra(doffset, 4, 7, 6, 3);\r\n                    pushTetra(doffset, 1, 3, 4, 6);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (section.triangle) {\r\n        offset = 0;\r\n        let pos = section.triangle.position;\r\n        let norm = section.triangle.normal;\r\n        let uv = section.triangle.uvw;\r\n        for (let ptr = 0, l = tricount * 12; ptr < l; ptr += 12) {\r\n            for (let j = 0; j < rotors.length; j++) {\r\n                let r = rotors[j];\r\n                for (let i = 0; i < 3; i++, ptr += 4) {\r\n                    _vec4.set(pos[ptr], pos[ptr + 1], pos[ptr + 2], pos[ptr + 3]);\r\n                    _vec4.rotates(r);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    if (norm) {\r\n                        _vec4.set(norm[ptr], norm[ptr + 1], norm[ptr + 2], norm[ptr + 3]);\r\n                    } else { _vec4.set(); }\r\n                    _vec4.rotates(r);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[ptr], uv[ptr + 1], uv[ptr + 2], coeffAngle * j);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 12;\r\n                let doffset = offset - 24;\r\n                if (j) {\r\n                    pushTetra(doffset, 0, 1, 2, 3);\r\n                    pushTetra(doffset, 1, 2, 3, 5);\r\n                    pushTetra(doffset, 3, 4, 1, 5);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function pushTetra(offset: number, a: number, b: number, c: number, d: number) {\r\n        a = offset + (a << 2);\r\n        b = offset + (b << 2);\r\n        c = offset + (c << 2);\r\n        d = offset + (d << 2);\r\n        pushIdx(a); pushIdx(b); pushIdx(c); pushIdx(d);\r\n    }\r\n    function pushIdx(i: number) {\r\n        position[idxPtr++] = positions[i];\r\n        position[idxPtr++] = positions[i + 1];\r\n        position[idxPtr++] = positions[i + 2];\r\n        position[idxPtr++] = positions[i + 3];\r\n        idxPtr -= 4;\r\n        normal[idxPtr++] = normals[i];\r\n        normal[idxPtr++] = normals[i + 1];\r\n        normal[idxPtr++] = normals[i + 2];\r\n        normal[idxPtr++] = normals[i + 3];\r\n        idxPtr -= 4;\r\n        uvw[idxPtr++] = uvws[i];\r\n        uvw[idxPtr++] = uvws[i + 1];\r\n        uvw[idxPtr++] = uvws[i + 2];\r\n        uvw[idxPtr++] = uvws[i + 3];\r\n    }\r\n    return new TetraMesh({ position, uvw, normal, count: count3 + count4 });\r\n}\r\nexport function directProduct(shape1: face.FaceIndexMeshData, shape2: face.FaceIndexMeshData) {\r\n    /** border(A x B) = border(A) x B + A x border(B) */\r\n    let edge1 = face.findBorder(shape1);\r\n    let edge2 = face.findBorder(shape2);\r\n    // A x border(B)\r\n    let quadcount1 = shape1.quad ? shape1.quad.position.length >> 2 : 0;\r\n    let count14 = quadcount1 * edge2.length * 5;\r\n    let tricount1 = shape1.triangle ? shape1.triangle.position.length / 3 : 0;\r\n    let count13 = tricount1 * edge2.length * 3;\r\n    let pslen1 = Math.max(quadcount1 * edge2.length << 5, tricount1 * edge2.length * 24);\r\n\r\n    // border(A) x B \r\n    let quadcount2 = shape2.quad ? shape2.quad.position.length >> 2 : 0;\r\n    let count24 = quadcount2 * edge1.length * 5;\r\n    let tricount2 = shape2.triangle ? shape2.triangle.position.length / 3 : 0;\r\n    let count23 = tricount2 * edge1.length * 3;\r\n    let pslen2 = Math.max(quadcount2 * edge1.length << 5, tricount2 * edge1.length * 24);\r\n\r\n    let arraySize = count14 + count13 + count23 + count24 << 4;\r\n    let pslen = Math.max(pslen1, pslen2);\r\n    let positions = new Float32Array(pslen);\r\n    let uvws = new Float32Array(pslen);\r\n    let normals = new Float32Array(pslen);\r\n    let position = new Float32Array(arraySize);\r\n    let uvw = new Float32Array(arraySize);\r\n    let normal = new Float32Array(arraySize);\r\n    let _vec4 = new Vec4(); // cache\r\n    let _vec4p = new Vec4(); // cache\r\n    let _vec4q = new Vec4(); // cache\r\n    let _vec4n = new Vec4(); // cache\r\n    let offset = 0;\r\n    let idxPtr = 0;\r\n    if (shape1.quad) {\r\n        let posIdx = shape1.quad.position;\r\n        let uvIdx = shape1.quad.uvw;\r\n        let pos = shape1.position;\r\n        let uv = shape1.uvw;\r\n        for (let ptr = 0, l = posIdx.length; ptr < l; ptr += 4) {\r\n            for (let j of edge2) {\r\n                let ie = j[0] << 2;\r\n                // pq is border segment\r\n                let p = _vec4p.set(\r\n                    shape2.position[ie + 2], shape2.position[ie + 3],\r\n                    shape2.position[ie], shape2.position[ie + 1],\r\n                );\r\n                ie = j[1] << 2;\r\n                let q = _vec4q.set(\r\n                    shape2.position[ie + 2], shape2.position[ie + 3],\r\n                    shape2.position[ie], shape2.position[ie + 1],\r\n                );\r\n                let normal = _vec4n.subset(q, p).norms();\r\n                [normal.z, normal.w] = [-normal.w, normal.z];\r\n                for (let i = 0; i < 4; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos], pos[ipos + 1], pos[ipos + 2], pos[ipos + 3]);\r\n                    _vec4.adds(p);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(0, 0, normal.z, normal.w);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 0);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 4;\r\n                for (let i = 0; i < 4; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos], pos[ipos + 1], pos[ipos + 2], pos[ipos + 3]);\r\n                    _vec4.adds(q);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(0, 0, normal.z, normal.w);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 0);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 4;\r\n                let doffset = offset - 32;\r\n                pushTetra(doffset, 0, 1, 3, 4);\r\n                pushTetra(doffset, 1, 5, 6, 4);\r\n                pushTetra(doffset, 1, 3, 6, 2);\r\n                pushTetra(doffset, 4, 7, 6, 3);\r\n                pushTetra(doffset, 1, 3, 4, 6);\r\n            }\r\n        }\r\n    }\r\n    offset = 0;\r\n    if (shape1.triangle) {\r\n        let posIdx = shape1.triangle.position;\r\n        let uvIdx = shape1.triangle.uvw;\r\n        let pos = shape1.position;\r\n        let uv = shape1.uvw;\r\n        for (let ptr = 0, l = posIdx.length; ptr < l; ptr += 3) {\r\n            for (let j of edge2) {\r\n                let ie = j[0] << 2;\r\n                // pq is border segment\r\n                let p = _vec4p.set(\r\n                    shape2.position[ie + 2], shape2.position[ie + 3],\r\n                    shape2.position[ie], shape2.position[ie + 1],\r\n                );\r\n                ie = j[1] << 2;\r\n                let q = _vec4q.set(\r\n                    shape2.position[ie + 2], shape2.position[ie + 3],\r\n                    shape2.position[ie], shape2.position[ie + 1],\r\n                );\r\n                let normal = _vec4n.subset(q, p).norms();\r\n                [normal.z, normal.w] = [-normal.w, normal.z];\r\n                for (let i = 0; i < 3; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos], pos[ipos + 1], pos[ipos + 2], pos[ipos + 3]);\r\n                    _vec4.adds(p);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(0, 0, normal.z, normal.w);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 0);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 3;\r\n                for (let i = 0; i < 3; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos], pos[ipos + 1], pos[ipos + 2], pos[ipos + 3]);\r\n                    _vec4.adds(q);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(0, 0, normal.z, normal.w);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 0);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 3;\r\n                let doffset = offset - 24;\r\n                pushTetra(doffset, 0, 1, 2, 3);\r\n                pushTetra(doffset, 1, 2, 3, 5);\r\n                pushTetra(doffset, 3, 4, 1, 5);\r\n            }\r\n        }\r\n    }\r\n    offset = 0;\r\n    if (shape2.quad) {\r\n        let posIdx = shape2.quad.position;\r\n        let uvIdx = shape2.quad.uvw;\r\n        let pos = shape2.position;\r\n        let uv = shape2.uvw;\r\n        for (let ptr = 0, l = posIdx.length; ptr < l; ptr += 4) {\r\n            for (let j of edge1) {\r\n                let ie = j[0] << 2;\r\n                // pq is border segment\r\n                let p = _vec4p.set(\r\n                    shape1.position[ie], shape1.position[ie + 1],\r\n                    shape1.position[ie + 2], shape1.position[ie + 3],\r\n                );\r\n                ie = j[1] << 2;\r\n                let q = _vec4q.set(\r\n                    shape1.position[ie], shape1.position[ie + 1],\r\n                    shape1.position[ie + 2], shape1.position[ie + 3],\r\n                );\r\n                let normal = _vec4n.subset(q, p).norms();\r\n                [normal.x, normal.y] = [-normal.y, normal.x];\r\n                for (let i = 0; i < 4; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos + 2], pos[ipos + 3], pos[ipos], pos[ipos + 1]);\r\n                    _vec4.adds(p);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(normal.x, normal.y);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 1);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 4;\r\n                for (let i = 0; i < 4; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos + 2], pos[ipos + 3], pos[ipos], pos[ipos + 1]);\r\n                    _vec4.adds(q);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(normal.x, normal.y);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 1);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 4;\r\n                let doffset = offset - 32;\r\n                pushTetra(doffset, 0, 1, 3, 4);\r\n                pushTetra(doffset, 1, 5, 6, 4);\r\n                pushTetra(doffset, 1, 3, 6, 2);\r\n                pushTetra(doffset, 4, 7, 6, 3);\r\n                pushTetra(doffset, 1, 3, 4, 6);\r\n            }\r\n        }\r\n    }\r\n    offset = 0;\r\n    if (shape2.triangle) {\r\n        let posIdx = shape2.triangle.position;\r\n        let uvIdx = shape2.triangle.uvw;\r\n        let pos = shape2.position;\r\n        let uv = shape2.uvw;\r\n        for (let ptr = 0, l = posIdx.length; ptr < l; ptr += 3) {\r\n            for (let j of edge1) {\r\n                let ie = j[0] << 2;\r\n                // pq is border segment\r\n                let p = _vec4p.set(\r\n                    shape1.position[ie], shape1.position[ie + 1],\r\n                    shape1.position[ie + 2], shape1.position[ie + 3],\r\n                );\r\n                ie = j[1] << 2;\r\n                let q = _vec4q.set(\r\n                    shape1.position[ie], shape1.position[ie + 1],\r\n                    shape1.position[ie + 2], shape1.position[ie + 3],\r\n                );\r\n                let normal = _vec4n.subset(q, p).norms();\r\n                [normal.x, normal.y] = [-normal.y, normal.x];\r\n                for (let i = 0; i < 3; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos + 2], pos[ipos + 3], pos[ipos], pos[ipos + 1]);\r\n                    _vec4.adds(p);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(normal.x, normal.y);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 1);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 3;\r\n                for (let i = 0; i < 3; i++, ptr++) {\r\n                    let ipos = posIdx[ptr] << 2;\r\n                    let iuv = uvIdx[ptr] << 2;\r\n                    _vec4.set(pos[ipos + 2], pos[ipos + 3], pos[ipos], pos[ipos + 1]);\r\n                    _vec4.adds(q);\r\n                    _vec4.writeBuffer(positions, offset);\r\n                    _vec4.set(normal.x, normal.y);\r\n                    _vec4.writeBuffer(normals, offset);\r\n                    _vec4.set(uv[iuv], uv[iuv + 1], uv[iuv + 2], 1);\r\n                    _vec4.writeBuffer(uvws, offset);\r\n                    offset += 4;\r\n                }\r\n                ptr -= 3;\r\n                let doffset = offset - 24;\r\n                pushTetra(doffset, 0, 1, 2, 3);\r\n                pushTetra(doffset, 1, 2, 3, 5);\r\n                pushTetra(doffset, 3, 4, 1, 5);\r\n            }\r\n        }\r\n    }\r\n    function pushTetra(offset: number, a: number, b: number, c: number, d: number) {\r\n        a = offset + (a << 2);\r\n        b = offset + (b << 2);\r\n        c = offset + (c << 2);\r\n        d = offset + (d << 2);\r\n        pushIdx(a); pushIdx(b); pushIdx(c); pushIdx(d);\r\n    }\r\n    function pushIdx(i: number) {\r\n        position[idxPtr++] = positions[i];\r\n        position[idxPtr++] = positions[i + 1];\r\n        position[idxPtr++] = positions[i + 2];\r\n        position[idxPtr++] = positions[i + 3];\r\n        idxPtr -= 4;\r\n        normal[idxPtr++] = normals[i];\r\n        normal[idxPtr++] = normals[i + 1];\r\n        normal[idxPtr++] = normals[i + 2];\r\n        normal[idxPtr++] = normals[i + 3];\r\n        idxPtr -= 4;\r\n        uvw[idxPtr++] = uvws[i];\r\n        uvw[idxPtr++] = uvws[i + 1];\r\n        uvw[idxPtr++] = uvws[i + 2];\r\n        uvw[idxPtr++] = uvws[i + 3];\r\n    }\r\n    return new TetraMesh({ position, normal, uvw, count: position.length >> 4 });\r\n}\r\nexport function cwmesh(cwmesh: CWMesh, notClosed?: boolean) {\r\n    let simplexes: number[][];\r\n    const borders = cwmesh.findBorder(4);\r\n    if (!borders) notClosed = true;\r\n    if (!notClosed) {\r\n        // closed 4d object's surface\r\n        const cells = [];\r\n        const cellsO = [];\r\n        for (const [cellId, border] of borders.entries()) {\r\n            if (border !== 1 && border !== -1) continue;\r\n            cells.push(cellId);\r\n            cellsO.push(border === 1);\r\n        }\r\n        simplexes = cwmesh.triangulate(3, cells, cellsO).flat();\r\n    } else {\r\n        simplexes = cwmesh.triangulate(3, cwmesh.data[3].map((_, idx) => idx)).flat();\r\n    }\r\n    const arrLen = simplexes.length << 4;\r\n    const tetramesh = new TetraMesh({\r\n        position: new Float32Array(arrLen),\r\n        normal: new Float32Array(arrLen),\r\n        count: simplexes.length\r\n    });\r\n    let offset = 0;\r\n    const vertices = cwmesh.data[0] as Vec4[];\r\n    const v1 = new Vec4, v2 = new Vec4, v3 = new Vec4;\r\n    for (const s of simplexes) {\r\n\r\n        const a0 = vertices[s[0]];\r\n        const a1 = vertices[s[1]];\r\n        const a2 = vertices[s[2]];\r\n        const a3 = vertices[s[3]];\r\n\r\n        const normal = v1.subset(a0, a1).wedge(v2.subset(a0, a2)).wedgev(v3.subset(a0, a3)).norms();\r\n\r\n        a0.writeBuffer(tetramesh.position, offset);\r\n        normal.writeBuffer(tetramesh.normal, offset); offset += 4;\r\n        a1.writeBuffer(tetramesh.position, offset);\r\n        normal.writeBuffer(tetramesh.normal, offset); offset += 4;\r\n        a2.writeBuffer(tetramesh.position, offset);\r\n        normal.writeBuffer(tetramesh.normal, offset); offset += 4;\r\n        a3.writeBuffer(tetramesh.position, offset);\r\n        normal.writeBuffer(tetramesh.normal, offset); offset += 4;\r\n    }\r\n    return tetramesh;\r\n}","import { AffineMat4, Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { OrthographicCamera as IOrthographicCamera, PerspectiveCamera as IPerspectiveCamera } from \"../math/geometry/camera.js\";\r\nimport { AABB } from \"../math/geometry/primitive.js\";\r\nimport { TetraMesh, TetraMeshData } from \"../mesh/tetra.js\";\r\nimport { RaytracingPipeline, RaytracingPipelineDescriptor } from \"../render/slice/slice.js\";\r\nimport { Material } from \"./material.js\";\r\nimport { Renderer } from \"./renderer.js\";\r\nimport { WireFrameScene } from \"./wireframe.js\";\r\n\r\nexport class Scene {\r\n    child: Object[] = [];\r\n    backGroundColor: GPUColor;\r\n    skyBox?: SkyBox;\r\n    wireframe?: WireFrameScene;\r\n    add(...obj: Object[]) {\r\n        this.child.push(...obj);\r\n    }\r\n    removeChild(obj: Object) {\r\n        let index = this.child.indexOf(obj);\r\n        if (index !== -1) {\r\n            this.child.splice(index, 1);\r\n        } else {\r\n            console.warn(\"Cannot remove a non-existed child\");\r\n        }\r\n    }\r\n    setBackgroudColor(color: GPUColor) {\r\n        this.backGroundColor = color;\r\n    }\r\n}\r\nexport class Object extends Obj4 {\r\n    child: Object[] = [];\r\n    worldCoord: AffineMat4;\r\n    needsUpdateCoord = true;\r\n    alwaysUpdateCoord = false;\r\n    visible = true;\r\n    constructor() {\r\n        super();\r\n        this.worldCoord = new AffineMat4();\r\n    }\r\n    updateCoord() {\r\n        this.needsUpdateCoord = true;\r\n        return this;\r\n    }\r\n    add(...obj: Object[]) {\r\n        this.child.push(...obj);\r\n    }\r\n    removeChild(obj: Object) {\r\n        let index = this.child.indexOf(obj);\r\n        if (index !== -1) {\r\n            this.child.splice(index, 1);\r\n        } else {\r\n            console.warn(\"Cannot remove a non-existed child\");\r\n        }\r\n    }\r\n}\r\nexport class PerspectiveCamera extends Object implements IPerspectiveCamera {\r\n    fov: number = 90;\r\n    near: number = 0.1;\r\n    far: number = 100;\r\n    alwaysUpdateCoord = true;\r\n    needsUpdate = true;\r\n}\r\n\r\nexport class OrthographicCamera extends Object implements IOrthographicCamera {\r\n    size: number;\r\n    near: number;\r\n    far: number;\r\n    alwaysUpdateCoord = true;\r\n    needsUpdate = true;\r\n}\r\nexport type Camera = PerspectiveCamera | OrthographicCamera;\r\nexport class Mesh extends Object {\r\n    geometry: Geometry;\r\n    material: Material;\r\n    uObjMatBuffer: GPUBuffer;\r\n    bindGroup: GPUBindGroup;\r\n    constructor(geometry: Geometry, material: Material) {\r\n        super();\r\n        this.geometry = geometry;\r\n        this.material = material;\r\n    }\r\n}\r\nexport class Geometry {\r\n    jsBuffer: TetraMesh;\r\n    gpuBuffer: { [name: string]: GPUBuffer };\r\n    needsUpdate = true;\r\n    dynamic: boolean = false;\r\n    obb = new AABB;\r\n    constructor(data: TetraMeshData) {\r\n        this.jsBuffer = data instanceof TetraMesh ? data : new TetraMesh(data);\r\n    }\r\n    updateOBB() {\r\n        let obb = this.obb;\r\n        let pos = this.jsBuffer.position;\r\n        obb.min.set(Infinity, Infinity, Infinity, Infinity);\r\n        obb.max.set(-Infinity, -Infinity, -Infinity, -Infinity);\r\n        for (let i = 0, l = this.jsBuffer.count << 4; i < l; i += 4) {\r\n            obb.min.x = Math.min(obb.min.x, pos[i]);\r\n            obb.min.y = Math.min(obb.min.y, pos[i + 1]);\r\n            obb.min.z = Math.min(obb.min.z, pos[i + 2]);\r\n            obb.min.w = Math.min(obb.min.w, pos[i + 3]);\r\n            obb.max.x = Math.max(obb.max.x, pos[i]);\r\n            obb.max.y = Math.max(obb.max.y, pos[i + 1]);\r\n            obb.max.z = Math.max(obb.max.z, pos[i + 2]);\r\n            obb.max.w = Math.max(obb.max.w, pos[i + 3]);\r\n        }\r\n    }\r\n}\r\nexport abstract class SkyBox {\r\n    pipeline: RaytracingPipeline;\r\n    uBuffer: GPUBuffer;\r\n    jsBuffer: Float32Array;\r\n    compiling = false;\r\n    compiled = false;\r\n    needsUpdate = true;\r\n    bindGroups: GPUBindGroup[];\r\n    readonly bufferSize: number;\r\n    uuid: string;\r\n    static readonly commonCode: string = `\r\n    struct rayOut{\r\n        @location(0) outO: vec4<f32>,\r\n        @location(1) outR: vec4<f32>,\r\n        @location(2) coord: vec3<f32>\r\n    }\r\n    @ray fn mainRay(\r\n        @builtin(ray_origin) ro: vec4<f32>,\r\n        @builtin(ray_direction) rd: vec4<f32>,\r\n        @builtin(voxel_coord) coord: vec3<f32>,\r\n        @builtin(aspect_matrix) aspect: mat3x3<f32>\r\n    ) -> rayOut {\r\n        return rayOut(\r\n            transpose(camMat.matrix)*(ro-camMat.vector),\r\n            transpose(camMat.matrix)*rd,\r\n            aspect * coord\r\n        );\r\n    }\r\n    struct fOut{\r\n        @location(0) color: vec4<f32>,\r\n        @builtin(frag_depth) depth: f32\r\n    }\r\n    \r\n    // converted to 4D from shadertoy 3D: https://www.shadertoy.com/view/WtBXWw\r\n    fn ACESFilm(x: vec3<f32>)->vec3<f32>\r\n    {\r\n        let tA = 2.51;\r\n        let tB = vec3<f32>(0.03);\r\n        let tC = 2.43;\r\n        let tD = vec3<f32>(0.59);\r\n        let tE = vec3<f32>(0.14);\r\n        return clamp((x*(tA*x+tB))/(x*(tC*x+tD)+tE),vec3<f32>(0.0),vec3<f32>(1.0));\r\n    }\r\n    `;\r\n    async compile(r: Renderer) {\r\n        if (this.compiling || this.compiled) return;\r\n        this.compiling = true;\r\n        this.pipeline = await r.core.createRaytracingPipeline(this.getShaderCode());\r\n        this.compiling = false;\r\n        this.compiled = true;\r\n    }\r\n    abstract getShaderCode(): RaytracingPipelineDescriptor;\r\n    constructor() {\r\n    }\r\n    getBindgroups(r: Renderer) {\r\n        this.uBuffer = r.gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, this.bufferSize << 2, \"uSimpleSky\");\r\n        this.bindGroups = [\r\n            r.core.createVertexShaderBindGroup(this.pipeline, 1, [\r\n                r.uCamMatBuffer,\r\n                this.uBuffer\r\n            ], \"SimpleSkyBindgroup\")\r\n        ];\r\n    }\r\n    update(r: Renderer) {\r\n        this.needsUpdate = false;\r\n        r.gpu.device.queue.writeBuffer(this.uBuffer, 0, this.jsBuffer);\r\n    }\r\n}\r\nexport class SimpleSkyBox extends SkyBox {\r\n    readonly bufferSize = 8;\r\n    constructor() {\r\n        super();\r\n        this.jsBuffer = new Float32Array(this.bufferSize);\r\n        this.setSunPosition(new Vec4(0.2, 0.9, 0.1, 0.3).norms());\r\n        this.setOpacity(0.2);\r\n    }\r\n    setSunPosition(pos: Vec4) {\r\n        this.needsUpdate = true;\r\n        pos.writeBuffer(this.jsBuffer);\r\n    }\r\n    setOpacity(o: number) {\r\n        this.needsUpdate = true;\r\n        this.jsBuffer[4] = o;\r\n    }\r\n    getOpacity() {\r\n        return this.jsBuffer[4];\r\n    }\r\n    getSunPosition() {\r\n        return new Vec4(this.jsBuffer[0], this.jsBuffer[1], this.jsBuffer[2], this.jsBuffer[3]);\r\n    }\r\n    getShaderCode(): RaytracingPipelineDescriptor {\r\n        return {\r\n            code: `\r\n        struct UIn{\r\n            sunDir: vec4<f32>,\r\n            opacity: f32\r\n        }\r\n        @group(1) @binding(0) var<uniform> camMat: tsxAffineMat;\r\n        @group(1) @binding(1) var<uniform> uIn: UIn;\r\n        ${SkyBox.commonCode}\r\n        const betaR = vec3<f32>(1.95e-2, 1.1e-1, 2.94e-1); \r\n        const betaM = vec3<f32>(4e-2, 4e-2, 4e-2);\r\n        const Rayleigh = 1.0;\r\n        const Mie = 1.0;\r\n        const RayleighAtt = 1.0;\r\n        const MieAtt = 1.2;\r\n        const g = -0.9;\r\n        fn sky (rd: vec4<f32>)->vec3<f32>{\r\n            let D = normalize(rd);\r\n            let t = max(0.001, D.y)*0.92+0.08;\r\n\r\n            // optical depth -> zenithAngle\r\n            let sR = RayleighAtt / t ;\r\n            let sM = MieAtt / t ;\r\n            let cosine = clamp(dot(D,normalize(uIn.sunDir)),0.0,1.0);\r\n            let cosine2 =dot(D,normalize(uIn.sunDir))+1.0;\r\n            let extinction = exp(-(betaR * sR + betaM * sM));\r\n\r\n            // scattering phase\r\n            let g2 = g * g;\r\n            let fcos2 = cosine * cosine;\r\n            let miePhase = Mie * pow(1.0 + g2 + 2.0 * g * cosine, -1.5) * (1.0 - g2) / (2.0 + g2);\r\n            \r\n            let rayleighPhase = Rayleigh;\r\n\r\n            let inScatter = (1.0 + fcos2) * vec3<f32>(rayleighPhase + betaM / betaR * miePhase);\r\n\r\n            var color = inScatter*(1.0-extinction) * 1.4;\r\n            // sun\r\n            color += 0.47*vec3<f32>(1.8,1.4,0.3)*pow( cosine, 350.0 ) * extinction;\r\n            // sun haze\r\n            color += 0.4*vec3<f32>(0.8,0.9,0.1)*pow( cosine2 *0.5, 2.0 )* extinction;\r\n            color *= vec3<f32>(1.4,1.7,1.2);\r\n            return ACESFilm(color);\r\n        }\r\n        @fragment fn mainFragment(@location(0) ro: vec4<f32>, @location(1) rd: vec4<f32>, @location(2) coord: vec3<f32>)->fOut{            \r\n            return fOut(vec4<f32>(sky(rd),uIn.opacity),0.999999);\r\n        }`,\r\n            rayEntryPoint: \"mainRay\",\r\n            fragmentEntryPoint: \"mainFragment\"\r\n        }\r\n    }\r\n}\r\n\r\n","import { Vec3 } from \"../math/algebra/vec3.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { _DEG2RAD } from \"../math/const.js\";\r\nimport { Renderer, RendererConfig } from \"./renderer.js\";\r\nimport { Object } from \"./scene.js\";\r\n\r\ntype LightDensity = { r: number, g: number, b: number } | Vec3 | number[] | number;\r\nexport class Light extends Object {\r\n    density: Vec3;\r\n    constructor(density: LightDensity) {\r\n        super();\r\n        this.density = color2Vec3(density);\r\n    }\r\n}\r\nfunction color2Vec3(density: LightDensity) {\r\n    if (density instanceof Vec3) return density;\r\n    if ((density as { r: number, g: number, b: number }).r) {\r\n        return new Vec3(\r\n            (density as { r: number, g: number, b: number }).r,\r\n            (density as { r: number, g: number, b: number }).g,\r\n            (density as { r: number, g: number, b: number }).b\r\n        );\r\n    }\r\n    if (typeof density === \"number\") {\r\n        return new Vec3(density, density, density);\r\n    }\r\n    if ((density as number[]).length === 3) {\r\n        return new Vec3((density as number[])[0], (density as number[])[1], (density as number[])[2]);\r\n    }\r\n}\r\nexport class AmbientLight extends Light {\r\n    needsUpdateCoord = false;\r\n    constructor(density: LightDensity) {\r\n        super(density);\r\n    }\r\n}\r\nexport class DirectionalLight extends Light {\r\n    worldDirection = new Vec4;\r\n    direction: Vec4;\r\n    constructor(density: LightDensity, direction?: Vec4) {\r\n        super(density ?? 1.0);\r\n        this.direction = direction ?? Vec4.y.clone();\r\n    }\r\n}\r\nexport class SpotLight extends Light {\r\n    worldDirection = new Vec4;\r\n    direction: Vec4;\r\n    angle: number;\r\n    penumbra: number;\r\n    decayPower: number = 3;\r\n    constructor(density: LightDensity, angle: number, penumbra: number, direction?: Vec4) {\r\n        super(density ?? 1.0);\r\n        this.direction = direction ?? Vec4.y.clone();\r\n        this.angle = angle;\r\n        this.penumbra = penumbra;\r\n\r\n    }\r\n}\r\nexport class PointLight extends Light {\r\n    decayPower: number = 3;\r\n    constructor(density: LightDensity) {\r\n        super(density);\r\n    }\r\n}\r\n\r\nconst ambientLightSize = 4 * 4;\r\nconst structPosDirLightSize = 8 * 4;\r\nconst structSpotLightLightSize = 16 * 4;\r\nlet spotLightOffset: number;\r\nlet uWorldLightBufferSize: number;\r\nexport function _initLightShader(config?: RendererConfig) {\r\n    const posdirLightsNumber = config?.posdirLightsNumber ?? 8;\r\n    const spotLightsNumber = config?.spotLightsNumber ?? 4;\r\n    spotLightOffset = ambientLightSize + posdirLightsNumber * structPosDirLightSize;\r\n    uWorldLightBufferSize = spotLightOffset + spotLightsNumber * structSpotLightLightSize;\r\n    const lightCode = `\r\nstruct PosDirLight{\r\n    density: vec4<f32>,\r\n    pos_dir: vec4<f32>,\r\n}\r\nstruct SpotLight{\r\n    density: vec4<f32>,\r\n    pos: vec4<f32>,\r\n    dir: vec4<f32>,\r\n    params: vec4<f32>\r\n}\r\nconst blackColor = vec3<f32>(0.02);\r\nstruct WorldLight{\r\n    ambientLightDensity: vec4<f32>,\r\n    posdirLights: array<PosDirLight,${posdirLightsNumber}>,\r\n    spotLights: array<SpotLight,${spotLightsNumber}>,\r\n}\r\nfn acesFilm(x: vec3<f32>)-> vec3<f32> {\r\n    const a: f32 = 2.51;\r\n    const b: f32 = 0.03;\r\n    const c: f32 = 2.43;\r\n    const d: f32 = 0.59;\r\n    const e: f32 = 0.14;\r\n    return clamp((x * (a * x + b)) / (x * (c * x + d ) + e), vec3<f32>(0.0), vec3<f32>(1.0));\r\n}\r\n@group(1) @binding(0) var<uniform> uWorldLight: WorldLight;\r\n`;\r\n    return { posdirLightsNumber, spotLightsNumber, lightCode, uWorldLightBufferSize };\r\n}\r\nexport function _updateWorldLight(r: Renderer) {\r\n    let offset = 0;\r\n    r.jsBuffer.fill(0);\r\n    r.ambientLightDensity.writeBuffer(r.jsBuffer); offset += 4;\r\n    for (let dir of r.directionalLights) {\r\n        dir.density.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n        r.jsBuffer[offset - 1] = -1.0; // marker for directional light ( < -0.5 in shader )\r\n        dir.worldDirection.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n    }\r\n    for (let pt of r.pointLights) {\r\n        pt.density.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n        r.jsBuffer[offset - 1] = Math.abs(pt.decayPower) + 1; // decay power and also marker for point light ( > 0.5 in shader )\r\n        pt.worldCoord.vec.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n    }\r\n    offset = spotLightOffset >> 2;\r\n    for (let spt of r.spotLights) {\r\n        spt.density.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n        r.jsBuffer[offset - 1] = 1.0; // marker for spotLight\r\n        spt.worldCoord.vec.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n        spt.worldDirection.writeBuffer(r.jsBuffer, offset); offset += 4;\r\n        let cosineinv = 1 / (1 - Math.cos(spt.angle * _DEG2RAD * 0.5));\r\n        r.jsBuffer[offset] = cosineinv;\r\n        r.jsBuffer[offset + 1] = 1 - cosineinv;\r\n        r.jsBuffer[offset + 2] = spt.penumbra;\r\n        r.jsBuffer[offset + 3] = Math.abs(spt.decayPower) + 1;\r\n        offset += 4;\r\n    }\r\n    r.gpu.device.queue.writeBuffer(r.uWorldLightBuffer, 0, r.jsBuffer, 0, uWorldLightBufferSize >> 2);\r\n}","import { SliceRenderer, TetraSlicePipeline } from \"../render/slice/slice.js\";\r\nimport { GPU } from \"../render/gpu.js\";\r\nimport { AmbientLight, DirectionalLight, PointLight, SpotLight, _initLightShader, _updateWorldLight } from \"./light.js\";\r\nimport { Camera, Mesh, Object, Scene } from \"./scene.js\";\r\nimport { Material } from \"./material.js\";\r\nimport { Vec3 } from \"../math/algebra/vec3.js\";\r\nexport interface RendererConfig {\r\n    posdirLightsNumber?: number;\r\n    spotLightsNumber?: number;\r\n}\r\n/** threejs like 4D lib */\r\nexport class Renderer {\r\n    core: SliceRenderer;\r\n    gpu: GPU;\r\n    canvas: HTMLCanvasElement;\r\n    pipelines: { [label: string]: TetraSlicePipeline | \"compiling\" } = {};\r\n    jsBuffer = new Float32Array(1024);\r\n    uCamMatBuffer: GPUBuffer; // contain inv and uninv affineMat\r\n    uWorldLightBuffer: GPUBuffer;\r\n    lightShaderInfomation = _initLightShader();\r\n    autoSetSizeHandler: () => void;\r\n    private cameraInScene: boolean;\r\n    private safeTetraNumInOnePass: number;\r\n    private tetraNumOccupancyRatio: number = 0.08;\r\n    private maxTetraNumInOnePass: number;\r\n    private context: GPUCanvasContext;\r\n    constructor(canvas: HTMLCanvasElement, config?: RendererConfig) {\r\n        this.canvas = canvas;\r\n        this.lightShaderInfomation = _initLightShader(config);\r\n    }\r\n    setBackgroudColor(color: GPUColor) {\r\n        this.core.setDisplayConfig({ screenBackgroundColor: color });\r\n    }\r\n    async init() {\r\n        this.gpu = await new GPU().init();\r\n        if (!this.gpu) {\r\n            throw \"No availiable GPU device found. Please check whether WebGPU is enabled on your browser.\";\r\n            return null;\r\n        }\r\n        this.context = this.gpu.getContext(this.canvas);\r\n        this.core = new SliceRenderer(this.gpu);\r\n        this.uCamMatBuffer = this.gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, (4 * 5 * 2) * 4, \"uCamMat\");\r\n        this.uWorldLightBuffer = this.gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, this.lightShaderInfomation.uWorldLightBufferSize, \"uWorldLight\");\r\n        this.core.setDisplayConfig({ canvasSize: { width: this.canvas.width * devicePixelRatio, height: this.canvas.height * devicePixelRatio } });\r\n        this.safeTetraNumInOnePass = this.core.getSafeTetraNumInOnePass();\r\n\r\n        await this.core.init();\r\n        return this;\r\n    }\r\n    // todo: add computePipeLinePool\r\n    fetchPipelineName(identifier: string): string {\r\n        return identifier;\r\n    }\r\n    fetchPipeline(identifier: string): TetraSlicePipeline | \"compiling\" {\r\n        return this.pipelines[this.fetchPipelineName(identifier)];\r\n    }\r\n    pullPipeline(identifier: string, pipeline: TetraSlicePipeline | \"compiling\") {\r\n        if (this.pipelines[identifier] && this.pipelines[identifier] !== \"compiling\")\r\n            throw \"FOUR Renderer: Repetitive material pipeline creation occured.\";\r\n        this.pipelines[identifier] = pipeline;\r\n    }\r\n    updateObject(o: Object) {\r\n        for (let c of o.child) {\r\n            if (c.alwaysUpdateCoord) {\r\n                c.needsUpdateCoord = true;\r\n            }\r\n            if (c.needsUpdateCoord || o.needsUpdateCoord) {\r\n                c.worldCoord.setFromObj4(c).mulsl(o.worldCoord);\r\n\r\n                c.needsUpdateCoord = true;\r\n            }\r\n            if (c.visible) {\r\n                this.updateObject(c);\r\n                c.needsUpdateCoord = false;\r\n            }\r\n        }\r\n        if (o instanceof Mesh) {\r\n            this.updateMesh(o);\r\n        } else if (o instanceof AmbientLight && o.visible) {\r\n            this.ambientLightDensity.adds(o.density);\r\n        } else if (o instanceof PointLight && o.visible) {\r\n            this.pointLights.push(o);\r\n        } else if (o instanceof SpotLight && o.visible) {\r\n            if (o.needsUpdateCoord) {\r\n                o.worldDirection.mulmatvset(o.worldCoord.mat, o.direction);\r\n            }\r\n            this.spotLights.push(o);\r\n        } else if (o instanceof DirectionalLight && o.visible) {\r\n            if (o.needsUpdateCoord) {\r\n                o.worldDirection.mulmatvset(o.worldCoord.mat, o.direction);\r\n            }\r\n            this.directionalLights.push(o);\r\n        } else if (o.needsUpdateCoord && o === this.activeCamera) {\r\n            this.cameraInScene = true;\r\n            o.worldCoord.inv().writeBuffer(this.jsBuffer);\r\n            o.worldCoord.writeBuffer(this.jsBuffer, 20);\r\n            this.gpu.device.queue.writeBuffer(this.uCamMatBuffer, 0, this.jsBuffer, 0, 40);\r\n        }\r\n    }\r\n    // this may fail to add to drawlist if pipeline creation is not finished yet\r\n    addToDrawList(m: Mesh) {\r\n        let pipeline = this.fetchPipeline(m.material.identifier);\r\n        // attention: this is an async function, rendering will be in the future tick\r\n        if (!pipeline) { m.material.bindGroup = null; m.bindGroup = null; m.material.compile(this); return; }\r\n        if (pipeline === \"compiling\") return;\r\n        // if this material can use other's pipeline, it hasn't compiled but also need some initiations\r\n        if (!m.material.compiled) { m.material.init(this); }\r\n        let groupName = m.material.uuid;\r\n        let group = m.material.declUniformLocation ? 1 : 0;\r\n        if (!this.drawList[groupName]) {\r\n            let bindGroup = this.core.createFragmentShaderBindGroup(pipeline, group, [this.uWorldLightBuffer], \"WorldLightGroup\");\r\n            this.drawList[groupName] = {\r\n                pipeline: pipeline, meshes: [],\r\n                bindGroup: { group, binding: bindGroup }, tetraCount: 0\r\n            };\r\n        }\r\n        let list = this.drawList[groupName];\r\n        // while (list.next) {\r\n        //     list = this.drawList[list.next]; //go to the end of chain table\r\n        // }\r\n        // list.tetraCount += m.geometry.jsBuffer.tetraCount;\r\n        list.meshes.push(m);\r\n        // if (list.tetraCount > this.maxTetraNumInOnePass) {\r\n        //     // append a new node to chain, wait for accept new objects next time\r\n        //     groupName = list.next = math.generateUUID();\r\n        //     this.drawList[groupName] = {\r\n        //         pipeline: pipeline, meshes: [],\r\n        //         bindGroup: list.bindGroup, tetraCount: 0\r\n        //     };\r\n        // }\r\n        if (!m.bindGroup) {\r\n            let buffers = [\r\n                ...m.material.fetchBuffer(m.geometry),\r\n                m.uObjMatBuffer,\r\n                this.uCamMatBuffer\r\n            ];\r\n            m.bindGroup = this.core.createVertexShaderBindGroup(pipeline, 1, buffers, m.material.identifier);\r\n        }\r\n        if (!m.material.bindGroup) {\r\n            m.material.createBindGroup(this, pipeline);\r\n        }\r\n        m.material.update(this);\r\n    }\r\n\r\n    async compileMaterials(mats: Iterable<Material> | Scene) {\r\n        let promises = [];\r\n        if (mats instanceof Scene) {\r\n            addMaterialInObject(this, promises, mats.child);\r\n        } else {\r\n            for (let m of mats) {\r\n                promises.push(m.compile(this));\r\n            }\r\n        }\r\n        await Promise.all(promises);\r\n        function addMaterialInObject(self: Renderer, promises: Promise<void>[], child: Object[]) {\r\n            for (let m of child) {\r\n                if (m instanceof Mesh) {\r\n                    let pipeline = self.fetchPipeline(m.material.identifier);\r\n                    if (!pipeline) {\r\n                        m.material.bindGroup = null; m.bindGroup = null;\r\n                        promises.push(m.material.compile(self));\r\n                    }\r\n                    if (!m.material.compiled) { m.material.init(self); }\r\n                }\r\n                addMaterialInObject(self, promises, m.child);\r\n            }\r\n        }\r\n    }\r\n    updateMesh(m: Mesh) {\r\n        if (m.needsUpdateCoord) {\r\n            m.worldCoord.writeBuffer(this.jsBuffer, 0);\r\n            m.worldCoord.mat.inv().ts().writeBuffer(this.jsBuffer, 20);\r\n            if (!m.uObjMatBuffer) {\r\n                m.uObjMatBuffer = this.gpu.createBuffer(\r\n                    GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, (20 + 16) * 4, \"uObjMatBuffer\"\r\n                );\r\n            }\r\n            this.gpu.device.queue.writeBuffer(m.uObjMatBuffer, 0, this.jsBuffer, 0, 20 + 16);\r\n        }\r\n        if (m.geometry.needsUpdate) {\r\n            let g = m.geometry;\r\n            g.needsUpdate = false;\r\n            g.updateOBB();\r\n            if (!g.gpuBuffer) {\r\n                g.gpuBuffer = {};\r\n                let dyn = g.dynamic ? GPUBufferUsage.COPY_DST : 0;\r\n                for (let [label, value] of globalThis.Object.entries(g.jsBuffer)) {\r\n                    if (value instanceof Float32Array) {\r\n                        g.gpuBuffer[label] = this.gpu.createBuffer(\r\n                            GPUBufferUsage.STORAGE | dyn, value, \"AttributeBuffer.\" + label\r\n                        );\r\n                    }\r\n                }\r\n            } else if (g.dynamic) {\r\n                for (let [label, buffer] of globalThis.Object.entries(g.gpuBuffer)) {\r\n                    this.gpu.device.queue.writeBuffer(buffer, 0, g.jsBuffer[label]);\r\n                }\r\n            }\r\n        }\r\n        if (m.visible) this.addToDrawList(m);\r\n    }\r\n    updateScene(scene: Scene) {\r\n        this.core.setDisplayConfig({ retinaClearColor: scene.backGroundColor });\r\n        this.cameraInScene = false;\r\n        this.maxTetraNumInOnePass = this.safeTetraNumInOnePass / this.tetraNumOccupancyRatio;\r\n        for (let c of scene.child) {\r\n            if (c.alwaysUpdateCoord) {\r\n                c.needsUpdateCoord = true;\r\n            }\r\n            if (c.visible) {\r\n                if (c.needsUpdateCoord) {\r\n                    c.worldCoord.setFromObj4(c);\r\n                }\r\n                this.updateObject(c);\r\n                c.needsUpdateCoord = false;\r\n            }\r\n        }\r\n        if (this.cameraInScene === false) console.error(\"Target camera is not in the scene. Forget to add it?\");\r\n        _updateWorldLight(this);\r\n        this.updateSkyBox(scene);\r\n    }\r\n    updateSkyBox(scene: Scene) {\r\n        const skyBox = scene.skyBox;\r\n        if (!skyBox) return;\r\n        if (!skyBox.compiled) {\r\n            if (!skyBox.compiling) {\r\n                skyBox.compile(this);\r\n            }\r\n            return;\r\n        }\r\n        if (!skyBox.bindGroups) {\r\n            skyBox.getBindgroups(this);\r\n        }\r\n        skyBox.update(this);\r\n    }\r\n    ambientLightDensity = new Vec3;\r\n    directionalLights: DirectionalLight[];\r\n    spotLights: SpotLight[];\r\n    pointLights: PointLight[];\r\n\r\n    drawList: DrawList;\r\n    activeCamera: Camera;\r\n    setCamera(camera: Camera) {\r\n        if (camera.needsUpdate) {\r\n            this.core.setDisplayConfig({ camera4D: camera });\r\n            camera.needsUpdate = false;\r\n        }\r\n        this.activeCamera = camera;\r\n    }\r\n    render(scene: Scene, camera: Camera) {\r\n        this.clearState();\r\n        this.setCamera(camera);\r\n        scene.wireframe?.camera?.copyObj4(camera);\r\n        this.updateScene(scene);\r\n        this.core.render(this.context, (renderState) => {\r\n            for (let { pipeline, meshes, bindGroup } of globalThis.Object.values(this.drawList)) {\r\n                if (!meshes.length) continue; // skip empty (may caused by safe tetranum check)\r\n                let tetraState = false;\r\n                let tetraCount = 0;\r\n                let binding = [\r\n                    ...meshes[0].material.bindGroup.map((bg, binding) => ({ group: binding, binding: bg })),\r\n                    bindGroup\r\n                ];\r\n                for (let mesh of meshes) {\r\n                    if (!renderState.testWithFrustumData(mesh.geometry.obb, this.activeCamera.worldCoord, mesh.worldCoord)) continue;\r\n                    if (tetraState === false) {\r\n                        renderState.beginTetras(pipeline);\r\n                        tetraCount = 0;\r\n                        tetraState = true;\r\n                    }\r\n                    renderState.sliceTetras(mesh.bindGroup, mesh.geometry.jsBuffer.count);\r\n                    tetraCount += mesh.geometry.jsBuffer.count;\r\n                    if (tetraCount > this.maxTetraNumInOnePass) {\r\n                        renderState.drawTetras(binding);\r\n                        tetraState = false;\r\n                        tetraCount = 0;\r\n                    }\r\n                }\r\n                if (tetraState === true) {\r\n                    renderState.drawTetras(binding);\r\n                }\r\n            }\r\n            if (scene.skyBox?.bindGroups) {\r\n                renderState.drawRaytracing(scene.skyBox.pipeline, scene.skyBox.bindGroups);\r\n            }\r\n        }, scene.wireframe ? rs => scene.wireframe.render(rs) : undefined);\r\n    }\r\n    setSize(size: GPUExtent3DStrict) {\r\n        if ((size as GPUExtent3DDict).height) {\r\n            this.canvas.width = (size as GPUExtent3DDict).width;\r\n            this.canvas.height = (size as GPUExtent3DDict).height;\r\n        } else {\r\n            this.canvas.width = size[0];\r\n            this.canvas.height = size[1];\r\n        }\r\n        this.core.setDisplayConfig({ canvasSize: size });\r\n    }\r\n    private clearState() {\r\n        this.ambientLightDensity.set();\r\n        this.directionalLights = [];\r\n        this.spotLights = [];\r\n        this.pointLights = [];\r\n        this.drawList = {};\r\n    }\r\n}\r\ninterface DrawList {\r\n    [group: string]: {\r\n        pipeline: TetraSlicePipeline,\r\n        meshes: Mesh[],\r\n        bindGroup: { group: number, binding: GPUBindGroup },\r\n        tetraCount: number\r\n        next?: string // if too many objs in drawlist, split into a list table\r\n    }\r\n}","//  tetra vertex shaders\r\nlet commonHeader = `\r\nstruct tsxAffineMat{\r\n    matrix: mat4x4<f32>,\r\n    vector: vec4<f32>,\r\n}\r\nstruct UObjMats{\r\n    pos: tsxAffineMat,\r\n    normal: mat4x4<f32>,\r\n}\r\nstruct fourInputType{\r\n    @location(0) pos: mat4x4<f32>,{fourInputType}\r\n}\r\nstruct fourOutputType{\r\n    @builtin(position) position: mat4x4<f32>,\r\n    {fourOutputType}\r\n}\r\n@group(1) @binding({0}) var<uniform> uObjMat: UObjMats;\r\n@group(1) @binding({1}) var<uniform> uCamMat: tsxAffineMat;\r\nfn apply(afmat: tsxAffineMat, points: mat4x4<f32>) -> mat4x4<f32>{\r\n    let biais = mat4x4<f32>(afmat.vector, afmat.vector, afmat.vector, afmat.vector);\r\n    return afmat.matrix * points + biais;\r\n}\r\nfn normalizeVec4s(vec4s: mat4x4<f32>) -> mat4x4<f32>{\r\n    return mat4x4<f32>(\r\n        normalize(vec4s[0]), normalize(vec4s[1]), normalize(vec4s[2]), normalize(vec4s[3]),\r\n    );\r\n}\r\n@tetra fn main(input : fourInputType, @builtin(instance_index) index: u32) -> fourOutputType{\r\n    let worldPos = apply(uObjMat.pos,input.pos);\r\n    return fourOutputType({fourOutputReturn});\r\n}\r\n`;\r\nconst outputReturn = {\r\n    position: `apply(uCamMat,worldPos)`,\r\n    uvw: `input.uvw`,\r\n    normal: `normalizeVec4s(uObjMat.normal * input.normal)`,\r\n    pos: `worldPos`\r\n};\r\nexport function _generateVertShader(inputs: string[], outputs: string[]) {\r\n    const bindingOffset = inputs.length + 1;\r\n    let header = commonHeader;\r\n    let fourInputType = \"\";\r\n    let fourOutputType = \"\";\r\n    let fourOutputReturn = outputReturn.position;\r\n    for (let i = 0, l = inputs.length; i < l; i++) {\r\n        fourInputType += `\r\n        @location(${i + 1}) ${inputs[i]}: mat4x4<f32>,`;\r\n    }\r\n    if (outputs.length === 1) {\r\n        fourOutputType = `\r\n        @location(0) ${outputs[0]}: mat4x4<f32>,`;\r\n        fourOutputReturn += \",\" + outputReturn[outputs[0]];\r\n    } else if (outputs.length === 2) {\r\n        fourOutputType = `\r\n        @location(0) ${outputs[0]}: mat4x4<f32>,\r\n        @location(1) ${outputs[1]}: mat4x4<f32>`;\r\n        fourOutputReturn += \",\" + outputReturn[outputs[0]] + \",\" + outputReturn[outputs[1]];\r\n    } else if (outputs.length === 3) {\r\n        fourOutputType = `\r\n        @location(0) ${outputs[0]}_${outputs[1]}: array<mat4x4<f32>,2>,\r\n        @location(1) ${outputs[2]}: mat4x4<f32>`;\r\n        fourOutputReturn += \", array<mat4x4<f32>,2>(\" + outputReturn[outputs[0]] + \",\" +\r\n            outputReturn[outputs[1]] + \"),\" + outputReturn[outputs[2]];\r\n    }\r\n    for (let i = 0; i < 32; i++) {\r\n        header = header.replace(`@binding({${i}})`, `@binding(${i + bindingOffset})`);\r\n    }\r\n    return header.replace(\"{fourOutputReturn}\", fourOutputReturn).replace(\"{fourOutputType}\", fourOutputType).replace(\"{fourInputType}\", fourInputType);\r\n}","import { AffineMat4, Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { generateUUID } from \"../math/random.js\";\r\nimport { TetraSlicePipeline } from \"../render/slice/slice.js\";\r\nimport { Renderer } from \"./renderer.js\";\r\nimport { Geometry } from \"./scene.js\";\r\nimport { _generateVertShader } from \"./vertexshader.js\";\r\n\r\nexport type ColorOutputNode = MaterialNode & { output: \"color\" };\r\nexport type Vec4OutputNode = MaterialNode & { output: \"vec4\" };\r\nexport type FloatOutputNode = MaterialNode & { output: \"f32\" };\r\nexport type TransformOutputNode = MaterialNode & { output: \"affineMat4\" };\r\n\r\n/** An iterative structure for Material */\r\nexport class MaterialNode {\r\n    identifier: string;\r\n    input: { [name: string]: MaterialNode } = {};\r\n    output: string;\r\n    static constFractionDigits = 4;\r\n    getCode(r: Renderer, root: Material, outputToken: string): string { return \"\"; }\r\n    getInputCode(r: Renderer, root: Material, token: string) {\r\n        let out: { [name: string]: string } = {};\r\n        let code = \"\";\r\n        for (let [name, node] of globalThis.Object.entries(this.input)) {\r\n            let inputToken = token + \"_\" + name;\r\n            out[name] = inputToken;\r\n            code += node.getCode(r, root, inputToken) + \"\\n\";\r\n        };\r\n        return { token: out, code };\r\n    }\r\n    update(r: Renderer) {\r\n        for (let node of globalThis.Object.values(this.input)) {\r\n            node.update(r);\r\n        }\r\n    }\r\n    constructor(identifier: string) { this.identifier = identifier; }\r\n}\r\n/** Material is the top node of MaterialNode */\r\nexport class Material extends MaterialNode {\r\n    cullMode: GPUCullMode = \"front\";\r\n    compiling = false;\r\n    compiled = false;\r\n    needsUpdate = true;\r\n    output = \"shader\";\r\n    pipeline: TetraSlicePipeline;\r\n    uuid: string;\r\n    bindGroup: GPUBindGroup[];\r\n    bindGroupBuffers: GPUBuffer[] = [];\r\n    fetchBuffers: string[] = [];\r\n    declUniforms: { [name: string]: { location: number, type: string, buffer: GPUBuffer } } = {};\r\n    declUniformLocation = 0;\r\n    declVarys: string[] = [];\r\n    declHeaders: { [name: string]: string };\r\n    createBindGroup(r: Renderer, p: TetraSlicePipeline) {\r\n        this.bindGroup = this.bindGroupBuffers.length ? [r.core.createFragmentShaderBindGroup(p, 0, this.bindGroupBuffers)] : [];\r\n    }\r\n    init(r: Renderer) {\r\n        this.getShaderCode(r); // scan code to get binding infomations\r\n        this.compiling = false;\r\n        this.compiled = true;\r\n    }\r\n    async compile(r: Renderer) {\r\n        this.compiling = true;\r\n        r.pullPipeline(this.identifier, \"compiling\");\r\n        let { vs, fs } = this.getShaderCode(r);\r\n        this.pipeline = await r.core.createTetraSlicePipeline({\r\n            vertex: { code: vs, entryPoint: \"main\" },\r\n            fragment: { code: fs, entryPoint: \"main\" },\r\n            cullMode: this.cullMode\r\n        });\r\n        r.pullPipeline(this.identifier, this.pipeline);\r\n        this.compiling = false;\r\n        this.compiled = true;\r\n    }\r\n    // when a subnode uses vary input, call this function to check attribute buffer and construct input structure\r\n    addVary(a: string) {\r\n        if (!this.declVarys.includes(a)) {\r\n            this.declVarys.push(a);\r\n        }\r\n        if (a == \"pos\") return;\r\n        if (!this.fetchBuffers.includes(a)) {\r\n            this.fetchBuffers.push(a);\r\n        }\r\n    }\r\n    // when a subnode uses header, call this function to check whether headers are already included\r\n    addHeader(key: string, value: string) {\r\n        if (!this.declHeaders[key]) {\r\n            this.declHeaders[key] = value;\r\n        } else if (this.declHeaders[key] !== value) {\r\n            console.warn(`Found multiple definition of header \"${key}\".`);\r\n        }\r\n    }\r\n    // when a subnode uses uniform, call this function to add uniform globally\r\n    addUniform(type: string, u: string, buffer: GPUBuffer) {\r\n        if (!this.declUniforms[u]) {\r\n            this.declUniforms[u] = { location: this.declUniformLocation++, type, buffer };\r\n            this.bindGroupBuffers.push(buffer);\r\n        }\r\n    }\r\n    fetchBuffer(g: Geometry): GPUBuffer[] {\r\n        //sort buffer fetchBuffers\r\n        return [g.gpuBuffer[\"position\"], ...this.fetchBuffers.map(b => g.gpuBuffer[b])];\r\n    }\r\n    getShaderCode(r: Renderer): { vs: string, fs: string } {\r\n        // what we need in jsData except for position buffer\r\n        this.fetchBuffers = [];\r\n        // renderPipeline's uniform variables except for world light (in another group)\r\n        this.declUniforms = {};\r\n        // output of computeShader, also input for fragment shader\r\n        this.declVarys = [];\r\n        this.bindGroupBuffers = [];\r\n        // renderPipeline's uniform bindgroup's location number\r\n        this.declUniformLocation = 0;\r\n        this.declHeaders = {};\r\n        // iteratively generate code\r\n        let code = this.getCode(r, this, \"\");\r\n        // deal no need for vary input\r\n        let fsIn = this.declVarys.length ? 'vary: fourInputType' : \"\";\r\n        let lightCode = r.lightShaderInfomation.lightCode;\r\n        let headers = globalThis.Object.values(this.declHeaders).join(\"\\n\");\r\n        // if no uniform at group0, then bind lights on 0, or 1\r\n        if (this.declUniformLocation === 0) { lightCode = lightCode.replace(\"@group(1)\", \"@group(0)\") }\r\n        let header = headers + lightCode + `\r\n    struct tsxAffineMat{\r\n        matrix: mat4x4<f32>,\r\n        vector: vec4<f32>,\r\n    }\r\n    @fragment fn main(${fsIn}) -> @location(0) vec4<f32> {\r\n        let ambientLightDensity = uWorldLight.ambientLightDensity.xyz;`; // avoid basic material doesn't call this uniform at all\r\n        // if frag shader has input, we need to construct a struct fourInputType\r\n        if (fsIn) {\r\n            let struct = `    struct fourInputType{\\n`;\r\n            for (let i = 0, l = this.declVarys.length; i < l; i++) {\r\n                struct += `        @location(${i}) ${this.declVarys[i]}: vec4<f32>,\\n`;\r\n            }\r\n            struct += \"    }\\n\";\r\n            header = struct + header;\r\n        }\r\n        for (let [u, { location, type }] of globalThis.Object.entries(this.declUniforms)) {\r\n            header = `   @group(0) @binding(${location}) var<uniform> ${u}:${type};\\n` + header;\r\n        }\r\n        // we use the result from getCode to generate needed vertex variables\r\n        return { vs: _generateVertShader(this.fetchBuffers, this.declVarys), fs: header + code + `\\n   }` };\r\n    }\r\n\r\n    constructor(identifiers: string) {\r\n        super(identifiers);\r\n        this.uuid = generateUUID();\r\n    }\r\n    gpuUniformBuffer: { [name: string]: GPUBuffer };\r\n}\r\n/** ConstValue will be hardcoded in shader */\r\nclass ConstValue extends MaterialNode {\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        return `\r\n                const ${outputToken} = ${this.identifier};`;\r\n    }\r\n    constructor(identifier: string) {\r\n        super(identifier);\r\n    }\r\n}\r\nclass ColorConstValue extends ConstValue {\r\n    declare output: \"color\";\r\n    constructor(color: GPUColor) {\r\n        let r: number = (color as GPUColorDict)?.r ?? color[0] ?? 0;\r\n        let g: number = (color as GPUColorDict)?.g ?? color[1] ?? 0;\r\n        let b: number = (color as GPUColorDict)?.b ?? color[2] ?? 0;\r\n        let a: number = (color as GPUColorDict)?.a ?? color[3] ?? 1;\r\n        super(`vec4<f32>(${r.toFixed(MaterialNode.constFractionDigits)},${g.toFixed(MaterialNode.constFractionDigits)},${b.toFixed(MaterialNode.constFractionDigits)},${a.toFixed(MaterialNode.constFractionDigits)})`);\r\n    }\r\n}\r\nclass Vec4ConstValue extends ConstValue {\r\n    declare output: \"vec4\";\r\n    constructor(vec: Vec4) {\r\n        super(`vec4<f32>(${vec.flat().map(n => n.toFixed(MaterialNode.constFractionDigits)).join(\",\")})`);\r\n    }\r\n}\r\nclass FloatConstValue extends ConstValue {\r\n    declare output: \"f32\";\r\n    constructor(f: number) {\r\n        super(f.toFixed(MaterialNode.constFractionDigits));\r\n    }\r\n}\r\nclass TransformConstValue extends ConstValue {\r\n    declare output: \"affineMat4\";\r\n    constructor(v: Obj4) {\r\n        let afmat = v.getAffineMat4();\r\n        let matEntries = afmat.mat.ts().elem.map(n => n.toFixed(MaterialNode.constFractionDigits)).join(\",\");\r\n        let vecEntries = afmat.vec.flat().map(n => n.toFixed(MaterialNode.constFractionDigits)).join(\",\");\r\n        super(`tsxAffineMat(mat4x4<f32>(${matEntries}),vec4<f32>(${vecEntries}))`);\r\n    }\r\n}\r\n\r\n/** the same UniformValue instance will share one uniform buffer */\r\nclass UniformValue extends MaterialNode {\r\n    gpuBuffer: GPUBuffer;\r\n    gpuBufferSize: number;\r\n    jsBufferSize: number;\r\n    type: string;\r\n    needsUpdate = true;\r\n    constructor() {\r\n        super(\"u\" + generateUUID().replace(/\\-/g, \"\").slice(16));\r\n    }\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        if (!this.gpuBuffer) {\r\n            this.createBuffer(r);\r\n        }\r\n        root.addUniform(this.type, this.identifier, this.gpuBuffer);\r\n        return `\r\n                let ${outputToken} = ${this.identifier};`;\r\n    }\r\n    createBuffer(r: Renderer) {\r\n        this.gpuBuffer = r.gpu.createBuffer(GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM, this.gpuBufferSize, \"uConstValueBuffer\");\r\n        this.jsBufferSize = this.gpuBufferSize >> 2;\r\n    }\r\n    _update(r: Renderer) { }\r\n    update(r: Renderer) {\r\n        if (!this.needsUpdate) return;\r\n        this._update(r);\r\n        r.gpu.device.queue.writeBuffer(this.gpuBuffer, 0, r.jsBuffer, 0, this.jsBufferSize);\r\n        this.needsUpdate = false;\r\n    }\r\n}\r\nexport class ColorUniformValue extends UniformValue {\r\n    declare output: \"color\";\r\n    type = \"vec4<f32>\";\r\n    gpuBufferSize = 4 * 4;\r\n    value: GPUColor;\r\n    _update(r: Renderer) {\r\n        r.jsBuffer[0] = (this.value as GPUColorDict)?.r ?? this.value[0] ?? 0;\r\n        r.jsBuffer[1] = (this.value as GPUColorDict)?.g ?? this.value[1] ?? 0;\r\n        r.jsBuffer[2] = (this.value as GPUColorDict)?.b ?? this.value[2] ?? 0;\r\n        r.jsBuffer[3] = (this.value as GPUColorDict)?.a ?? this.value[3] ?? 1;\r\n    }\r\n    write(value: GPUColor) {\r\n        this.value = value;\r\n        this.needsUpdate = true;\r\n    }\r\n}\r\nexport class Vec4UniformValue extends UniformValue {\r\n    declare output: \"vec4\";\r\n    type = \"vec4<f32>\";\r\n    gpuBufferSize = 4 * 4;\r\n    value: Vec4;\r\n    _update(r: Renderer) {\r\n        this.value.writeBuffer(r.jsBuffer);\r\n    }\r\n    write(value: Vec4) {\r\n        this.value = value;\r\n        this.needsUpdate = true;\r\n    }\r\n}\r\nexport class FloatUniformValue extends UniformValue {\r\n    declare output: \"f32\";\r\n    type = \"f32\";\r\n    gpuBufferSize = 4;\r\n    value: number;\r\n    _update(r: Renderer) {\r\n        r.jsBuffer[0] = this.value;\r\n    }\r\n    write(value: number) {\r\n        this.value = value;\r\n        this.needsUpdate = true;\r\n    }\r\n}\r\nexport class TransformUniformValue extends UniformValue {\r\n    declare output: \"affineMat4\";\r\n    type = \"tsxAffineMat\";\r\n    gpuBufferSize = 20 * 4;\r\n    value: Obj4;\r\n    private affineMatValue = new AffineMat4();\r\n    _update(r: Renderer) {\r\n        this.affineMatValue.setFromObj4(this.value).writeBuffer(r.jsBuffer);\r\n    }\r\n    write(value: Obj4) {\r\n        this.value = value;\r\n        this.needsUpdate = true;\r\n    }\r\n}\r\n\r\n\r\nexport type Color = GPUColor | ColorOutputNode;\r\n/** A shortcut path for writing a constant color */\r\nfunction makeColorOutput(color: Color) {\r\n    if (!(color instanceof MaterialNode)) color = new ColorConstValue(color as GPUColor);\r\n    return color;\r\n}\r\nexport type Float = number | FloatOutputNode;\r\n/** A shortcut path for writing a constant color */\r\nfunction makeFloatOutput(f: Float) {\r\n    if (!(f instanceof MaterialNode)) f = new FloatConstValue(f as number);\r\n    return f;\r\n}\r\n/** Basic material just return color node's output color  */\r\nexport class BasicMaterial extends Material {\r\n    declare input: {\r\n        color: ColorOutputNode;\r\n    };\r\n    constructor(color: Color) {\r\n        color = makeColorOutput(color);\r\n        super(\"Basic(\" + color.identifier + \")\");\r\n        this.input = { color };\r\n    }\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        let color = this.input.color.getCode(r, root, \"color\");\r\n        return color + `\r\n                return color;`;\r\n    }\r\n}\r\nexport class LambertMaterial extends Material {\r\n    declare input: {\r\n        color: ColorOutputNode;\r\n    };\r\n\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        root.addVary(\"normal\");\r\n        root.addVary(\"pos\");\r\n        let color = this.input.color.getCode(r, root, \"color\");\r\n        return color + `\r\n                var radiance = ambientLightDensity;\r\n                for(var i=0;i<${r.lightShaderInfomation.posdirLightsNumber};i++){\r\n                    var N = vec4<f32>(0.0);\r\n                    if(uWorldLight.posdirLights[i].density.w<-0.5){\r\n                        N = uWorldLight.posdirLights[i].pos_dir;\r\n                    }else if(uWorldLight.posdirLights[i].density.w>0.5){\r\n                        N = uWorldLight.posdirLights[i].pos_dir - vary.pos;\r\n                        N *= pow(length(N),-uWorldLight.posdirLights[i].density.w); // decay by distance\r\n                    }\r\n                    radiance += uWorldLight.posdirLights[i].density.rgb * max(0.0,dot(vary.normal,N));\r\n                }\r\n                for(var i=0;i<${r.lightShaderInfomation.spotLightsNumber};i++){\r\n                    if(uWorldLight.spotLights[i].density.w>0.5){\r\n                        var N = uWorldLight.spotLights[i].pos - vary.pos;\r\n                        let len = length(N);\r\n                        let penumbra = max(0.0,dot(N / len,uWorldLight.spotLights[i].dir)*uWorldLight.spotLights[i].params.x + uWorldLight.spotLights[i].params.y);\r\n                        N *= pow(len,-uWorldLight.spotLights[i].params.w) * pow(penumbra, uWorldLight.spotLights[i].params.z);\r\n                        radiance += uWorldLight.spotLights[i].density.rgb * max(0.0,dot(vary.normal,N));\r\n                    }\r\n                }\r\n                return vec4<f32>(acesFilm((color.rgb + blackColor) * radiance), color.a);`;\r\n    }\r\n    constructor(color: Color) {\r\n        color = makeColorOutput(color);\r\n        super(\"Lambert(\" + color.identifier + \")\");\r\n        this.input = { color };\r\n    }\r\n}\r\n/** Blinn Phong */\r\nexport class PhongMaterial extends Material {\r\n    declare input: {\r\n        color: ColorOutputNode;\r\n        specular: ColorOutputNode;\r\n        shininess: FloatOutputNode;\r\n    };\r\n\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        root.addVary(\"normal\");\r\n        root.addVary(\"pos\");\r\n        root.addUniform(\"array<tsxAffineMat,2>\", \"uCamMat\", r.uCamMatBuffer);\r\n        let { code } = this.getInputCode(r, root, outputToken);\r\n        return code + `\r\n                var radiance = ambientLightDensity;\r\n                var specularRadiance = vec3<f32>(0.0);\r\n                let viewRay = -normalize(vary.pos - uCamMat[1].vector);\r\n                for(var i=0;i<${r.lightShaderInfomation.posdirLightsNumber};i++){\r\n                    var N = vec4<f32>(0.0);\r\n                    var D = 0.0;\r\n                    if(uWorldLight.posdirLights[i].density.w<-0.5){\r\n                        D = 1.0;\r\n                        N = uWorldLight.posdirLights[i].pos_dir;\r\n                    }else if(uWorldLight.posdirLights[i].density.w>0.5){\r\n                        N = uWorldLight.posdirLights[i].pos_dir - vary.pos;\r\n                        let len = length(N);\r\n                        D = pow(len,1.0 - uWorldLight.posdirLights[i].density.w); // decay by distance\r\n                        N /= len;\r\n                    }else{\r\n                        continue;\r\n                    }\r\n                    let halfvec = normalize(N + viewRay);\r\n                    radiance += uWorldLight.posdirLights[i].density.rgb *  D * max(0.0,dot(vary.normal,N));\r\n                    specularRadiance += uWorldLight.posdirLights[i].density.rgb *  D * max(0.0,pow(dot(vary.normal,halfvec),_shininess) ) ;\r\n                }\r\n                for(var i=0;i<${r.lightShaderInfomation.spotLightsNumber};i++){\r\n                    if(uWorldLight.spotLights[i].density.w>0.5){\r\n                        \r\n                        var N = uWorldLight.spotLights[i].pos - vary.pos;\r\n                        let len = length(N);\r\n                        N /= len;\r\n                        let penumbra = max(0.0,dot(N,uWorldLight.spotLights[i].dir)*uWorldLight.spotLights[i].params.x + uWorldLight.spotLights[i].params.y);\r\n                        let D = pow(len,1.0-uWorldLight.spotLights[i].params.w) * pow(penumbra, uWorldLight.spotLights[i].params.z);\r\n                        let halfvec = normalize(N + viewRay);\r\n                        \r\n                        radiance += uWorldLight.spotLights[i].density.rgb *  D * max(0.0,dot(vary.normal,N));\r\n                        specularRadiance += uWorldLight.spotLights[i].density.rgb *  D * max(0.0,pow(dot(vary.normal,halfvec),_shininess) ) ;\r\n                    }\r\n                }\r\n                return vec4<f32>(acesFilm((_color.rgb+blackColor) * radiance + _specular.rgb * specularRadiance), _color.a);`;\r\n    }\r\n    constructor(color: Color, shininess?: Float, specular?: Color) {\r\n        color = makeColorOutput(color);\r\n        specular = makeColorOutput(specular ?? [1, 1, 1]);\r\n        shininess = makeFloatOutput(shininess ?? 20.0);\r\n        super(\"Phong(\" + color.identifier + \",\" + specular.identifier + \",\" + shininess.identifier + \")\");\r\n        this.input = { color, shininess, specular };\r\n    }\r\n}\r\nexport class CheckerTexture extends MaterialNode {\r\n    declare output: \"color\";\r\n    declare input: {\r\n        color1: ColorOutputNode;\r\n        color2: ColorOutputNode;\r\n        uvw: Vec4OutputNode;\r\n    }\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        // Tell root material that CheckerTexture needs deal dependency of vary input uvw\r\n        let { token, code } = this.getInputCode(r, root, outputToken);\r\n        return code + `\r\n                let ${outputToken}_checker = fract(${token.uvw}+vec4<f32>(0.001)) - vec4<f32>(0.5);\r\n                let ${outputToken} = mix(${token.color1},${token.color2},step( ${outputToken}_checker.x * ${outputToken}_checker.y * ${outputToken}_checker.z * ${outputToken}_checker.w, 0.0));\r\n                `;\r\n    }\r\n    constructor(color1: Color, color2: Color, uvw?: Vec4OutputNode) {\r\n        color1 = makeColorOutput(color1);\r\n        color2 = makeColorOutput(color2);\r\n        uvw ??= new UVWVec4Input();\r\n        super(`Checker(${color1.identifier},${color2.identifier},${uvw.identifier})`);\r\n        this.input = { color1, color2, uvw };\r\n    }\r\n}\r\nexport class WgslTexture extends MaterialNode {\r\n    declare output: \"color\";\r\n    declare input: {\r\n        uvw: Vec4OutputNode;\r\n    }\r\n    private wgslCode: string;\r\n    private entryPoint: string;\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        root.addHeader(this.entryPoint, this.wgslCode);\r\n        let { token, code } = this.getInputCode(r, root, outputToken);\r\n        return code + `\r\n                let ${outputToken} = ${this.entryPoint}(${token.uvw});\r\n                `;\r\n    }\r\n    constructor(wgslCode: string, entryPoint: string, uvw?: Vec4OutputNode) {\r\n        uvw ??= new UVWVec4Input();\r\n        super(`Wgsl(${wgslCode},${uvw.identifier})`);\r\n        this.wgslCode = wgslCode.replace(new RegExp(\"\\b\" + entryPoint + \"\\b\", \"g\"), \"##\");\r\n        this.input = { uvw };\r\n        this.entryPoint = entryPoint;\r\n    }\r\n}\r\nexport class GridTexture extends MaterialNode {\r\n    declare output: \"color\";\r\n    declare input: {\r\n        color1: ColorOutputNode;\r\n        color2: ColorOutputNode;\r\n        gridWidth: Vec4OutputNode;\r\n        uvw: Vec4OutputNode;\r\n    }\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        // Tell root material that CheckerTexture needs deal dependency of vary input uvw\r\n        let { token, code } = this.getInputCode(r, root, outputToken);\r\n        return code + `\r\n                let ${outputToken}_grid = step(${token.gridWidth}, fract(${token.uvw}));\r\n                let ${outputToken} = mix(${token.color1},${token.color2},${outputToken}_grid.x*${outputToken}_grid.y*${outputToken}_grid.z);\r\n                `;\r\n    }\r\n    constructor(color1: Color, color2: Color, gridWidth: number | Vec4 | Vec4OutputNode, uvw?: Vec4OutputNode) {\r\n        color1 = makeColorOutput(color1);\r\n        color2 = makeColorOutput(color2);\r\n        gridWidth = !(gridWidth instanceof MaterialNode) ? new Vec4ConstValue(\r\n            (gridWidth instanceof Vec4) ? gridWidth : new Vec4(gridWidth, gridWidth, gridWidth, gridWidth)\r\n        ) : gridWidth;\r\n        uvw ??= new UVWVec4Input();\r\n        super(`Grid(${color1.identifier},${color2.identifier}),${gridWidth.identifier},${uvw.identifier}`);\r\n        this.input = { color1, color2, gridWidth, uvw };\r\n    }\r\n}\r\nexport class UVWVec4Input extends MaterialNode {\r\n    declare output: \"vec4\";\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        root.addVary(\"uvw\");\r\n        return `\r\n                let ${outputToken} = vary.uvw;`;\r\n    }\r\n    constructor() {\r\n        super(\"vary.uvw\");\r\n    }\r\n}\r\nexport class WorldCoordVec4Input extends MaterialNode {\r\n    declare output: \"vec4\";\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        root.addVary(\"pos\");\r\n        return `\r\n                let ${outputToken} = vary.pos;`;\r\n    }\r\n    constructor() {\r\n        super(\"vary.pos\");\r\n    }\r\n}\r\nexport class Vec4TransformNode extends MaterialNode {\r\n    declare output: \"vec4\";\r\n    declare input: {\r\n        vec4: Vec4OutputNode;\r\n        transform: TransformOutputNode;\r\n    }\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        let input = this.getInputCode(r, root, outputToken);\r\n        let affine = input.token.transform;\r\n        return input.code + `\r\n                let ${outputToken} = ${affine}.matrix * ${input.token.vec4} + ${affine}.vector;`;\r\n    }\r\n    constructor(vec4: Vec4OutputNode, transform: Obj4 | TransformOutputNode) {\r\n        transform = (!(transform instanceof MaterialNode)) ? new TransformConstValue(transform) : transform;\r\n        super(\"vec4tr(\" + vec4.identifier + \",\" + transform.identifier + \")\");\r\n        this.input = { vec4, transform };\r\n    }\r\n}\r\n/** simplex 3D noise */\r\nexport const NoiseWGSLHeader = `\r\n        fn mod289v3(x:vec3<f32>)->vec3<f32> {\r\n            return x - floor(x * (1.0 / 289.0)) * 289.0; \r\n        }\r\n        fn mod289v4(x:vec4<f32>)->vec4<f32> {\r\n            return x - floor(x * (1.0 / 289.0)) * 289.0; \r\n        }\r\n        fn mod289f(x:f32)->f32 {\r\n            return x - floor(x * (1.0 / 289.0)) * 289.0; \r\n        }\r\n        fn permutev4(x:vec4<f32>)->vec4<f32> {\r\n            return mod289v4(((x * 34.0) + 1.0) * x);\r\n        }\r\n        fn permutef(x:f32)-> f32 {\r\n            return mod289f(((x * 34.0) + 1.0) * x);\r\n        }\r\n        fn taylorInvSqrtv4(r:vec4<f32>)->vec4<f32> {\r\n            return vec4(1.79284291400159) - 0.85373472095314 * r;\r\n        }\r\n        fn taylorInvSqrtf(r:f32)->f32{\r\n            return 1.79284291400159 - 0.85373472095314 * r;\r\n        }\r\n        \r\n        fn snoise(v1:vec3<f32>)->f32{\r\n            let v = v1 + vec3(0.00001,0.00002,0.00003);\r\n            const C = vec2(1.0/6.0, 1.0/3.0);\r\n            const D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n            // First corner\r\n            var i  = floor(v + dot(v, vec3(C.y)) );\r\n            let x0 =   v - i + dot(i, vec3(C.x)) ;\r\n\r\n            // Other corners\r\n            let g = step(x0.yzx, x0.xyz);\r\n            let l = 1.0 - g;\r\n            let i1 = min( g.xyz, l.zxy );\r\n            let i2 = max( g.xyz, l.zxy );\r\n\r\n            let x1 = x0 - i1 + vec3(C.x);\r\n            let x2 = x0 - i2 + vec3(C.y); // 2.0*C.x = 1/3 = C.y\r\n            let x3 = x0 - vec3(D.y);      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n            // Permutations\r\n            i = mod289v3(i);\r\n            let p = permutev4( permutev4( permutev4(\r\n                        vec4(i.z) + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n                    + vec4(i.y) + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n                    + vec4(i.x) + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n            // Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n            // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n            const n_ = 0.142857142857; // 1.0/7.0\r\n            let  ns = n_ * D.wyz - D.xzx;\r\n\r\n            let j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n            let x_ = floor(j * ns.z);\r\n            let y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n            let x = x_ *ns.x + vec4(ns.y);\r\n            let y = y_ *ns.x + vec4(ns.y);\r\n            let h = 1.0 - abs(x) - abs(y);\r\n\r\n            let b0 = vec4( x.xy, y.xy );\r\n            let b1 = vec4( x.zw, y.zw );\r\n\r\n            //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n            //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n            let s0 = floor(b0)*2.0 + 1.0;\r\n            let s1 = floor(b1)*2.0 + 1.0;\r\n            let sh = -step(h, vec4(0.0));\r\n\r\n            let a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n            let a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n            var p0 = vec3(a0.xy,h.x);\r\n            var p1 = vec3(a0.zw,h.y);\r\n            var p2 = vec3(a1.xy,h.z);\r\n            var p3 = vec3(a1.zw,h.w);\r\n\r\n            //Normalise gradients\r\n            let norm = taylorInvSqrtv4(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n            p0 *= norm.x;\r\n            p1 *= norm.y;\r\n            p2 *= norm.z;\r\n            p3 *= norm.w;\r\n\r\n            // Mix final noise value\r\n            var m = max(vec4(0.6) - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), vec4(0.0));\r\n            m = m * m;\r\n            return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\r\n        }\r\n        `;\r\n\r\nexport class NoiseTexture extends MaterialNode {\r\n    declare output: \"f32\";\r\n    declare input: {\r\n        uvw: Vec4OutputNode;\r\n    }\r\n    getCode(r: Renderer, root: Material, outputToken: string) {\r\n        root.addHeader(\"NoiseWGSLHeader\", NoiseWGSLHeader);\r\n        let { token, code } = this.getInputCode(r, root, outputToken);\r\n        return code + `\r\n                let ${outputToken} = snoise(${token.uvw});\r\n                `;\r\n    }\r\n    constructor(uvw?: Vec4OutputNode) {\r\n        uvw ??= new UVWVec4Input();\r\n        super(`Noise(${uvw.identifier})`);\r\n        this.input = { uvw };\r\n    }\r\n}","import { FaceIndexMesh, FaceIndexMeshData } from \"./face/facemesh.js\";\r\nimport { TetraIndexMesh } from \"./tetra/tetramesh.js\";\r\n\r\ninterface IndexMesh extends FaceIndexMeshData {\r\n    positionIndex?: Uint32Array;\r\n    normalIndex?: Uint32Array;\r\n    uvwIndex?: Uint32Array;\r\n    count?: number;\r\n}\r\nexport class ObjFile {\r\n    data: string;\r\n    constructor(data: string | TetraIndexMesh | FaceIndexMesh) {\r\n        this.data = this.stringify(data);\r\n    }\r\n    private stringify(data: string | TetraIndexMesh | FaceIndexMesh) {\r\n        if (typeof data === \"string\") return data;\r\n        let out = \"# Tesserxel ObjFile Parser\\n# github.com/wxyhly/tesserxel\\n\";\r\n        out += writeVertexLike(\"v\", data.position);\r\n        if (data.normal) out += writeVertexLike(\"vn\", data.normal);\r\n        if (data.uvw) out += writeVertexLike(\"vt\", data.uvw);\r\n        if ((data as TetraIndexMesh).positionIndex) {\r\n            let m = data as TetraIndexMesh;\r\n            out += writeFaceLike(\"t\", m.positionIndex, m.uvwIndex, m.normalIndex, 4);\r\n            return out;\r\n        }\r\n        let m = data as FaceIndexMesh;\r\n        if (m.triangle) {\r\n            out += writeFaceLike(\"f\", m.triangle.position, m.triangle.uvw, m.triangle.normal, 3);\r\n        }\r\n        if (m.quad) {\r\n            out += writeFaceLike(\"f\", m.quad.position, m.quad.uvw, m.quad.normal, 4);\r\n        }\r\n        return out;\r\n        function writeVertexLike(identifier: string, data: Float32Array) {\r\n            let out = \"\\n\";\r\n            const reg = new RegExp(\" \" + (0).toPrecision(7) + \"$\", \"g\");\r\n            for (let i = 0, l = data.length; i < l; i += 4) {\r\n                let line = identifier;\r\n                for (let q = 0; q < 4; q++) {\r\n                    line += \" \" + data[i + q].toPrecision(7);\r\n                }\r\n                line = line.trim().replace(reg, \"\");\r\n                if (identifier === \"vt\") line = line.replace(reg, \"\");\r\n                out += line + \"\\n\";\r\n            }\r\n            return out;\r\n        }\r\n        function writeFaceLike(identifier: string, v: Uint32Array, vt: Uint32Array, vn: Uint32Array, stride: number) {\r\n            let out = \"\\n\";\r\n            for (let i = 0, l = v.length; i < l; i += stride) {\r\n                let line = identifier;\r\n                for (let q = 0; q < stride; q++) {\r\n                    line += \" \" + (v[i + q] + 1);\r\n                    if (vt) line += \"/\" + (vt[i + q] + 1);\r\n                    if (vn) line += \"/\" + (vn[i + q] + 1);\r\n                    line = line.replace(/\\/+$/, \"\");\r\n                }\r\n                out += line + \"\\n\";\r\n            }\r\n            return out;\r\n        }\r\n    }\r\n    parse() {\r\n        let lines = this.data.split(\"\\n\");\r\n        let v = [];\r\n        let vt = [];\r\n        let vn = [];\r\n        let quad = {\r\n            v: [],\r\n            vt: [],\r\n            vn: [],\r\n        }\r\n        let tetra = {\r\n            v: [],\r\n            vt: [],\r\n            vn: [],\r\n        }\r\n        let triangle = {\r\n            v: [],\r\n            vt: [],\r\n            vn: [],\r\n        }\r\n        for (let i = 0, l = lines.length; i < l; i++) {\r\n            let line = lines[i].trim();\r\n            if (isCommentOrEmpty(line)) continue;\r\n            let splitArr = line.toLowerCase().split(/\\s/g);\r\n            switch (splitArr[0]) {\r\n                case \"o\":\r\n                    // parseObj(splitArr);\r\n                    break;\r\n                case \"v\":\r\n                    parseVertexLike(v, splitArr);\r\n                    break;\r\n                case \"vt\":\r\n                    parseVertexLike(vt, splitArr);\r\n                    break;\r\n                case \"vn\":\r\n                    parseVertexLike(vn, splitArr);\r\n                    break;\r\n                case \"f\":\r\n                    if (splitArr.length === 5) {\r\n                        parseFaceLike(quad, splitArr);\r\n                    } else if (splitArr.length === 4) {\r\n                        parseFaceLike(triangle, splitArr);\r\n                    } else {\r\n                        error(i, \"Unsupported polygonal face: Only triangles and quads are allowed.\");\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    if (splitArr.length === 5) {\r\n                        parseFaceLike(tetra, splitArr);\r\n                    } else {\r\n                        error(i, `Vertices of tetrahedron must be 4, found ${splitArr.length - 1} vertices.`);\r\n                    }\r\n            }\r\n        }\r\n\r\n        let out: IndexMesh = tetra.v.length ? {\r\n            position: new Float32Array(v),\r\n            positionIndex: new Uint32Array(tetra.v)\r\n        } : {\r\n            position: new Float32Array(v)\r\n        }\r\n        if (vt.length) out.uvw = new Float32Array(vt);\r\n        if (vn.length) out.normal = new Float32Array(vn);\r\n        if (triangle.v.length) {\r\n            out.triangle = {\r\n                position: new Uint32Array(triangle.v)\r\n            }\r\n            if (triangle.vt.length) out.triangle.uvw = new Uint32Array(triangle.vt);\r\n            if (triangle.vn.length) out.triangle.normal = new Uint32Array(triangle.vn);\r\n        }\r\n        if (quad.v.length) {\r\n            out.quad = {\r\n                position: new Uint32Array(quad.v)\r\n            }\r\n            if (quad.vt.length) out.quad.uvw = new Uint32Array(quad.vt);\r\n            if (quad.vn.length) out.quad.normal = new Uint32Array(quad.vn);\r\n        }\r\n\r\n        if (tetra.v.length) {\r\n            if (tetra.vt.length) out.uvwIndex = new Uint32Array(tetra.vt);\r\n            if (tetra.vn.length) out.normalIndex = new Uint32Array(tetra.vn);\r\n\r\n        }\r\n        return out;\r\n        function parseVertexLike(dst: number[], splitArr: string[]) {\r\n            while (splitArr.length < 5) { splitArr.push(\"0\"); }\r\n            for (let i = 1, l = splitArr.length; i < l; i++) {\r\n                dst.push(Number(splitArr[i]));\r\n            }\r\n        }\r\n        function parseFaceLike(dst: { v: number[], vt: number[], vn: number[] }, splitArr: string[]) {\r\n            for (let i = 1, l = splitArr.length; i < l; i++) {\r\n                let attrs = splitArr[i].split(\"/\");\r\n                dst.v.push(Number(attrs[0]) - 1);\r\n                if (attrs[1]) dst.vt.push(Number(attrs[1]) - 1);\r\n                if (attrs[2]) dst.vn.push(Number(attrs[2]) - 1);\r\n            }\r\n        }\r\n        function isCommentOrEmpty(line: string) {\r\n            return line === \"\" || line[0] === \"#\";\r\n        }\r\n        function error(line: number, msg: string) {\r\n            console.error(\"ObjFileParser: \" + msg + \"\\n at line \" + line + `\"${lines[line]}\"`);\r\n        }\r\n    }\r\n}","import { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { _180 } from \"../../math/const.js\";\r\nimport { Polytope } from \"../../math/geometry/polytope.js\";\r\nimport { Bivec } from \"../../math/math.js\";\r\nimport { CWMesh, CWMeshSelection, Face } from \"./cwmesh.js\";\r\n\r\nexport function polytope(schlafli: number[]) {\r\n    const m = new CWMesh();\r\n    if (!schlafli) {\r\n        m.data = [[new Vec4]]; return m;\r\n    }\r\n    if (schlafli.length === 0) {\r\n        m.data = [[Vec4.xNeg.clone(), Vec4.x.clone()], [[0, 1]]]; return m;\r\n    }\r\n    const dim = schlafli.length + 1;\r\n    m.data = new Polytope(schlafli).getRegularPolytope();\r\n    m.data.push([m.data[dim - 1].map((_, i: number) => i)]);\r\n    m.calculateOrientationInFace(dim, 0);\r\n    m.flipOrientation(dim - 1, Array.from(m.orientation[dim][0].entries()).filter(\r\n        ([idx, o]) => o === false\r\n    ).map(([idx, o]) => m.data[dim][0][idx]));\r\n    return m;\r\n}\r\nexport function truncatedPolytope(schlafli: number[], t: number) {\r\n    const m = new CWMesh();\r\n    if (!schlafli) {\r\n        m.data = [[new Vec4]]; return m;\r\n    }\r\n    if (schlafli.length === 0) {\r\n        m.data = [[Vec4.xNeg.clone(), Vec4.x.clone()], [[0, 1]]]; return m;\r\n    }\r\n    const dim = schlafli.length + 1;\r\n    m.data = new Polytope(schlafli).getTrucatedRegularPolytope(t);\r\n    m.data.push([m.data[dim - 1].map((_, i: number) => i)]);\r\n    m.calculateOrientationInFace(dim, 0);\r\n    m.flipOrientation(dim - 1, Array.from(m.orientation[dim][0].entries()).filter(\r\n        ([idx, o]) => o === false\r\n    ).map(([idx, o]) => m.data[dim][0][idx]));\r\n    return m;\r\n}\r\n\r\nexport function bitruncatedPolytope(schlafli: number[], t: number=0.5) {\r\n    const m = new CWMesh();\r\n    if (!schlafli) {\r\n        m.data = [[new Vec4]]; return m;\r\n    }\r\n    const dim = schlafli.length + 1;\r\n    m.data = new Polytope(schlafli).getBitrucatedRegularPolytope(t);\r\n    m.data.push([m.data[dim - 1].map((_, i: number) => i)]);\r\n    m.calculateOrientationInFace(dim, 0);\r\n    m.flipOrientation(dim - 1, Array.from(m.orientation[dim][0].entries()).filter(\r\n        ([idx, o]) => o === false\r\n    ).map(([idx, o]) => m.data[dim][0][idx]));\r\n    return m;\r\n}\r\nexport function path(points: Vec4[] | number, closed?: boolean) {\r\n\r\n    const mesh = new CWMesh;\r\n    let n: number;\r\n    if (typeof points === \"number\") {\r\n        // abstract cwmesh\r\n        mesh.data[0] = new Array(points).fill([]);\r\n        n = points;\r\n    } else {\r\n        mesh.data[0] = points.slice(0);\r\n        n = points.length;\r\n    }\r\n    mesh.data[1] = [];\r\n    for (let i = 0; i < n - 1; i++) {\r\n        (mesh.data[1] as Face[]).push([i, i + 1]);\r\n    }\r\n    if (closed) (mesh.data[1] as Face[]).push([n - 1, 0]);\r\n    // throw \"not test yet\";\r\n    return mesh;\r\n}\r\nfunction range(i: number) {\r\n    const arr = [];\r\n    for (let j = 0; j < i; j++) { arr.push(j); }\r\n    return arr;\r\n}\r\nexport function solidTorus(majorRadius: number, minorRadius: number, u: number, v: number) {\r\n    const circle = polytope([u]).apply(v => v.set(v.x * minorRadius + majorRadius, 0, v.y * minorRadius));\r\n    circle.makeRotatoid(Bivec.xy, v);\r\n    return circle;\r\n}\r\nexport function ball2(u: number, v: number) {\r\n    const arr: Vec4[] = [];\r\n    const dangle = _180 / (v + 2);\r\n    for (let i = dangle, j = 0; j < v; i += dangle, j++) {\r\n        arr.push(new Vec4(0, Math.sin(i), Math.cos(i)));\r\n    }\r\n    // longitude without 2 polar points\r\n    const longitude = path(arr);\r\n\r\n    const info = longitude.makeRotatoid(Bivec.xy, u);\r\n    const northLines = new Set<number>();\r\n    const southLines = new Set<number>();\r\n    for (const [equatorLineId, subinfo] of info[1]) {\r\n        northLines.add(subinfo[0].get(0));\r\n        southLines.add(subinfo[0].get(v - 1));\r\n    }\r\n    longitude.makePyramid(new Vec4(0, 0, 1), new CWMeshSelection(longitude, [undefined, northLines]));\r\n    longitude.makePyramid(new Vec4(0, 0, -1), new CWMeshSelection(longitude, [undefined, southLines]));\r\n    longitude.data[3] = [range(longitude.data[2].length)];\r\n    longitude.calculateOrientationInFace(3, 0);\r\n    return longitude;\r\n}\r\nexport function ball3(u: number, v: number, w: number) {\r\n    // todo\r\n}","import { Vec4 } from \"../../math/algebra/vec4.js\";\r\nimport { Bivec, Obj4, Rotor, _360 } from \"../../math/math.js\";\r\nimport { path, polytope } from \"./geoms\";\r\nexport type FaceId = number;\r\nexport type Simplex = number[];\r\nexport type Face = Array<FaceId>;\r\nexport type FaceOrientaion = Array<boolean>;\r\nexport type DimList<T> = Array<T>;\r\nexport type CWMeshStructData = DimList<Face[] | Vec4[]>;\r\nexport type OrientaionData = DimList<FaceOrientaion[]>;\r\nexport type CWMeshSelectionData = DimList<Set<FaceId>>;\r\nexport type RankedCWMap = DimList<Map<FaceId, FaceId>>;\r\nfunction range(i: number) {\r\n    const arr = [];\r\n    for (let j = 0; j < i; j++) { arr.push(j); }\r\n    return arr;\r\n}\r\nexport class CWMeshSelection {\r\n    cwmesh: CWMesh;\r\n    selData: CWMeshSelectionData;\r\n    constructor(cwmesh: CWMesh, data?: CWMeshSelectionData) {\r\n        this.cwmesh = cwmesh;\r\n        this.selData = data ?? [];\r\n    }\r\n    clone() {\r\n        return new CWMeshSelection(this.cwmesh, this.selData.map(set => new Set(set)));\r\n    }\r\n    /// this function modify selection into closure\r\n    closure(): CWMeshSelection {\r\n        const sel = this.selData;\r\n        for (let dim = sel.length - 1; dim > 0; dim--) {\r\n            if (!sel[dim]) continue;\r\n            const faces = this.cwmesh.data[dim] as Face[];\r\n            for (const faceId of sel[dim]) {\r\n                for (const d_faceId of faces[faceId]) {\r\n                    sel[dim - 1] ??= new Set();\r\n                    sel[dim - 1].add(d_faceId);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    addFace(dim: number, faceId: FaceId) {\r\n        const seldata = this.selData;\r\n        seldata[dim] ??= new Set;\r\n        seldata[dim].add(faceId);\r\n        return this;\r\n    }\r\n}\r\nexport class CWMesh {\r\n    data: CWMeshStructData = [];\r\n    orientation: OrientaionData = [];\r\n    clone() {\r\n        const newcwmesh = new CWMesh();\r\n        newcwmesh.data = this.data.map(dataDim => dataDim ? dataDim.map(\r\n            (face: Face | Vec4) => face instanceof Vec4 ? face.clone() : face.slice(0)\r\n        ) as Face[] | Vec4[] : undefined);\r\n        newcwmesh.orientation = this.orientation.map(oDim => oDim ? oDim.map(\r\n            (faceO: FaceOrientaion) => faceO.slice(0)\r\n        ) : undefined);\r\n        return newcwmesh;\r\n    }\r\n\r\n\r\n    /* structure normalizations */\r\n\r\n\r\n    /// faces must be orientated\r\n    sort2DFace() {\r\n        const d_faces = this.data[1] as [FaceId, FaceId][];\r\n        const facesO = this.orientation[2];\r\n        const faces = this.data[2] as Face[];\r\n        for (const [faceId, face] of faces.entries()) {\r\n            const faceO = facesO[faceId];\r\n            const dd2nextdfaceMap = new Map<FaceId, number>();\r\n            for (const [d_faceIdx, d_faceId] of face.entries()) {\r\n                const d_face = d_faces[d_faceId];\r\n                const o = faceO[d_faceIdx];\r\n                dd2nextdfaceMap.set(d_face[o ? 0 : 1], d_faceIdx);\r\n            }\r\n            let curIdx = 0;\r\n            let newOrder = [curIdx];\r\n            const faceLength = face.length;\r\n            while (true) {\r\n                const d_faceId = face[curIdx];\r\n                const next_dd_faceIdx = faceO[curIdx] ? 1 : 0;\r\n                const dd_faceId = d_faces[d_faceId][next_dd_faceIdx];\r\n                curIdx = dd2nextdfaceMap.get(dd_faceId);\r\n                if (curIdx === 0) break;\r\n                newOrder.push(curIdx);\r\n                if (newOrder.length > faceLength) { console.error(\"Non manifold structure found.\"); break; }\r\n            }\r\n            faces[faceId] = newOrder.map(i => face[i]);\r\n            facesO[faceId] = newOrder.map(i => faceO[i]);\r\n        }\r\n    }\r\n    flipOrientation(dim: number, faceIds?: FaceId[]) {\r\n        faceIds ??= range(this.data[dim].length);\r\n        if (dim === 0) throw \"Vertex orientation flip is not implemented\";\r\n        if (dim === 1) {\r\n            const edgeTable = this.data[1];\r\n            for (const faceId of faceIds) {\r\n                const edge = edgeTable[faceId];\r\n                const a = edge[0]; edge[0] = edge[1]; edge[1] = a;\r\n            }\r\n        } else {\r\n            const oTable = this.orientation[dim];\r\n            if (!oTable) throw \"Orientation is undefiend\";\r\n            for (const faceId of faceIds) {\r\n                const o = oTable[faceId];\r\n                if (o === undefined) throw \"Orientation is undefiend\";\r\n                for (let i = 0; i < o.length; i++) o[i] = !o[i];\r\n            }\r\n        }\r\n        const cellTable = this.data[dim + 1] as Face[];\r\n        const cellOTable = this.orientation[dim + 1];\r\n        if (!cellOTable) return;\r\n        for (const [cellId, cell] of cellTable.entries()) {\r\n            for (const [faceIdx, faceId] of cell.entries()) {\r\n                if (faceIds.includes(faceId)) {\r\n                    cellOTable[cellId][faceIdx] = !cellOTable[cellId][faceIdx];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** tested with bug here (for examples/#cwmesh::duopy5 ), some faces orientations are not consisted */\r\n    // now, makeDual doesn't use this function anymore\r\n    calculateOrientation(dim: number, faceIds?: FaceId[]) {\r\n        if (dim === 0) return;\r\n        if (dim === 1) return; // edge: [-1, 1]\r\n        faceIds ??= range(this.data[dim].length);\r\n        const d2ftable: Map<number, Array<[number, number]>> = new Map;\r\n        const faces = faceIds.map(faceId => this.data[dim][faceId] as Face);\r\n\r\n        for (const [faceIdx, faceId] of faceIds.entries()) {\r\n            const face = faces[faceIdx] as Face;\r\n\r\n            // if face not oriented yet, deal with it first\r\n\r\n            if (dim !== 2) {\r\n                this.orientation[dim] ??= [];\r\n                if (!this.orientation[dim][faceId]) this.calculateOrientationInFace(dim, faceId);\r\n            }\r\n\r\n            // get all d_face and its table\r\n\r\n            for (const [d_faceIdx, d_faceId] of face.entries()) {\r\n                if (!d2ftable.has(d_faceId)) d2ftable.set(d_faceId, new Array());\r\n                d2ftable.get(d_faceId).push([d_faceIdx, faceIdx]);\r\n            }\r\n        }\r\n        let current_faceIdxs = [];\r\n        let current_faceIdx = 0;\r\n        const fOTable = this.orientation[dim];\r\n        const faceO: boolean[] = [];\r\n        while (current_faceIdx !== undefined) {\r\n            const currentFaceId = faceIds[current_faceIdx];\r\n            for (const [d_faceIdx, d_faceId] of faces[current_faceIdx].entries()) {\r\n                const ajacent_faceIdxs = d2ftable.get(d_faceId);\r\n                if (ajacent_faceIdxs.length > 2) throw \"Non manifold structure found\";\r\n                if (ajacent_faceIdxs.length === 1) continue;\r\n                let [next_d_faceIdx, next_faceIdx] = ajacent_faceIdxs[0][1] === current_faceIdx ? ajacent_faceIdxs[1] : ajacent_faceIdxs[0];\r\n                if (faceO[next_faceIdx] !== undefined) continue;\r\n                const d_faceOInCurrentFace = dim === 2 ? 1 === d_faceIdx : fOTable[currentFaceId][d_faceIdx];\r\n                const d_faceOInNextFace = dim === 2 ? 1 === next_d_faceIdx : fOTable[faceIds[next_faceIdx]][next_d_faceIdx];\r\n                faceO[next_faceIdx] = (faceO[current_faceIdx] === d_faceOInCurrentFace) !== d_faceOInNextFace;\r\n                current_faceIdxs.push(next_faceIdx);\r\n            }\r\n            current_faceIdx = current_faceIdxs.pop();\r\n        }\r\n        this.flipOrientation(dim, faceO.map((o, idx) => [o, faceIds[idx]] as [boolean, number]).filter(([o, id]) => !o).map(([o, id]) => id));\r\n    }\r\n    calculateOrientationInFace(dim: number, faceId: FaceId) {\r\n        this.orientation ??= [];\r\n        this.orientation[dim] ??= [];\r\n        if (this.orientation[dim][faceId]) return;\r\n        if (dim === 0) return;\r\n        if (dim === 1) return; // edge: [-1, 1]\r\n        const face = this.data[dim][faceId] as Face;\r\n\r\n        // if d_face not oriented yet, deal with it first\r\n\r\n        if (dim !== 2) {\r\n            for (const d_faceId of face) {\r\n                this.orientation[dim - 1] ??= [];\r\n                if (!this.orientation[dim - 1][d_faceId]) this.calculateOrientationInFace(dim - 1, d_faceId);\r\n            }\r\n        }\r\n\r\n        // get all dd_face and its table\r\n\r\n        const dd2dtable: Map<number, Array<[number, number]>> = new Map;\r\n        const d_faces = face.map(d_faceId => this.data[dim - 1][d_faceId] as Face);\r\n        let d_faceIdx: FaceId = 0;\r\n        for (const d_face of d_faces) {\r\n            for (const [dd_faceIdx, dd_faceId] of d_face.entries()) {\r\n                if (!dd2dtable.has(dd_faceId)) dd2dtable.set(dd_faceId, new Array());\r\n                dd2dtable.get(dd_faceId).push([dd_faceIdx, d_faceIdx]);\r\n            }\r\n            d_faceIdx++;\r\n        }\r\n        const faceO: FaceOrientaion = new Array(face.length); faceO[0] = true;\r\n        let current_d_faceIdxs = [];\r\n        let current_d_faceIdx = 0;\r\n        const dfOTable = this.orientation[dim - 1];\r\n        while (current_d_faceIdx !== undefined) {\r\n            const currentFaceId = face[current_d_faceIdx];\r\n            for (const [dd_faceIdx, dd_faceId] of d_faces[current_d_faceIdx].entries()) {\r\n                const ajacent_d_faceIdxs = dd2dtable.get(dd_faceId);\r\n                if (ajacent_d_faceIdxs.length > 2) throw \"Non manifold structure found\";\r\n                if (ajacent_d_faceIdxs.length === 1) continue;\r\n                let [next_dd_faceIdx, next_d_faceIdx] = ajacent_d_faceIdxs[0][1] === current_d_faceIdx ? ajacent_d_faceIdxs[1] : ajacent_d_faceIdxs[0];\r\n                if (faceO[next_d_faceIdx] !== undefined) continue;\r\n                const dd_faceOInCurrentFace = dim === 2 ? 1 === dd_faceIdx : dfOTable[currentFaceId][dd_faceIdx];\r\n                const dd_faceOInNextFace = dim === 2 ? 1 === next_dd_faceIdx : dfOTable[face[next_d_faceIdx]][next_dd_faceIdx];\r\n                faceO[next_d_faceIdx] = (faceO[current_d_faceIdx] === dd_faceOInCurrentFace) !== dd_faceOInNextFace;\r\n                current_d_faceIdxs.push(next_d_faceIdx);\r\n            }\r\n            current_d_faceIdx = current_d_faceIdxs.pop();\r\n        }\r\n        this.orientation[dim][faceId] = faceO;\r\n    }\r\n    /// this will reorder faceIds after deleting\r\n    deleteSelection(sel: CWMeshSelection) {\r\n        const remapping: RankedCWMap = [];\r\n        for (const [dim, selDim] of sel.selData.entries()) {\r\n            if (!selDim) continue;\r\n            remapping[dim] = new Map;\r\n            const faceMapTable: number[] = [];\r\n            let newId = 0; let del: boolean;\r\n            this.data[dim] = (this.data[dim] as (Face | Vec4)[]).filter(\r\n                (face: Face | Vec4, faceId: number) => (\r\n                    del = !selDim.has(faceId),\r\n                    remapping[dim].set(faceId, del ? -1 : newId++),\r\n                    del\r\n                )\r\n            ) as Face[] | Vec4[];\r\n            this.orientation[dim] = this.orientation[dim].filter(\r\n                (face: boolean[], faceId: number) => !selDim.has(faceId)\r\n            );\r\n        }\r\n        for (const [dim, dataDim] of this.data.entries()) {\r\n            const remapDim = remapping[dim - 1];\r\n            if (!remapDim || !remapDim.size) continue;\r\n            for (const face of dataDim as Face[]) {\r\n                for (const [faceIdx, faceId] of face.entries()) {\r\n                    face[faceIdx] = remapDim.get(faceId);\r\n                    if (face[faceIdx] === -1) throw \"A deleted subface is used by other faces\";\r\n                }\r\n            }\r\n        }\r\n        return remapping;\r\n    }\r\n\r\n\r\n    /* get informations from part of cwmesh */\r\n\r\n    dim() {\r\n        for (let i = this.data.length - 1; i >= 0; i--) {\r\n            if (this.data[i].length) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    findBorder(dim: number, faceIds?: Set<FaceId>) {\r\n        if (dim === 0) return;\r\n        if (!this.data[dim] || !this.data[dim].length) return;\r\n        faceIds ??= new Set(range(this.data[dim].length));\r\n        const bordersO = new Map<FaceId, number>();\r\n        const faces = this.data[dim] as Face[];\r\n        const facesO = this.orientation[dim] ?? [];\r\n\r\n        for (const faceId of faceIds) {\r\n            const face = faces[faceId];\r\n            const faceO = dim === 1 ? [false, true] : facesO[faceId] ?? [];\r\n            for (const [d_faceIdx, d_faceId] of face.entries()) {\r\n                const orientation = faceO[d_faceIdx];\r\n                if (!bordersO.get(d_faceId)) {\r\n                    bordersO.set(d_faceId, (orientation === undefined) ? NaN : (orientation ? 1 : -1));\r\n                } else {\r\n                    const prev = bordersO.get(d_faceId);\r\n                    if (isNaN(prev)) bordersO.delete(d_faceId);\r\n                    bordersO.set(d_faceId, prev + (orientation ? 1 : -1));\r\n                }\r\n            }\r\n        }\r\n        for (const [k, v] of bordersO) {\r\n            if (v === 0) {\r\n                bordersO.delete(k);\r\n            }\r\n        }\r\n        return bordersO;\r\n    }\r\n    getAllSelection(): CWMeshSelection {\r\n        return new CWMeshSelection(this, this.data.map(dimData => dimData ? new Set(range(dimData.length)) : undefined));\r\n    }\r\n    /// faces must be flat, convex and orientated\r\n    triangulate(dim: number, faceIds: number[], orientations?: boolean[]) {\r\n        faceIds ??= range(this.data[dim].length);\r\n        const faces = this.data[dim];\r\n        const facesO = this.orientation[dim];\r\n        if (dim === 0) {\r\n            throw \"can't triangulate points\";\r\n        }\r\n        if (dim === 1) {\r\n            return faceIds.map((id, idx) => [\r\n                !orientations || orientations[idx] === false ? [\r\n                    this.data[1][id][1], this.data[1][id][0]\r\n                ] : [\r\n                    this.data[1][id][0], this.data[1][id][1]\r\n                ]\r\n            ] as Simplex[]);\r\n        }\r\n        const result: Simplex[][] = [];\r\n        for (const [faceIdx, faceId] of faceIds.entries()) {\r\n            const face = faces[faceId] as Face;\r\n            const faceO = facesO[faceId];\r\n\r\n            // get the first vertex\r\n\r\n            let subfaceDim = dim - 1;\r\n            let subface0Id = face[0];\r\n            while (subfaceDim) {\r\n                subface0Id = this.data[subfaceDim--][subface0Id][0];\r\n            }\r\n\r\n            const d_faceWaitForTriagulate: FaceId[] = [];\r\n            const d_faceWaitForTriagulateO: boolean[] = [];\r\n\r\n            for (const [d_faceIdx, d_faceId] of face.entries()) {\r\n\r\n                // get subfaces who contain the first vertex\r\n\r\n                const tempsel = new CWMeshSelection(this).addFace(dim - 1, d_faceId).closure();\r\n                if (tempsel.selData[0].has(subface0Id)) continue;\r\n\r\n                d_faceWaitForTriagulate.push(d_faceId);\r\n                d_faceWaitForTriagulateO.push(faceO[d_faceIdx]);\r\n            }\r\n\r\n            const faceResult = this.triangulate(dim - 1, d_faceWaitForTriagulate, d_faceWaitForTriagulateO).flat();\r\n            faceResult.forEach(s => {\r\n                s.push(subface0Id)\r\n                if (orientations && orientations[faceIdx] === false) {\r\n                    const temp = s[0]; s[0] = s[1]; s[1] = temp;\r\n                }\r\n            });\r\n            result.push(faceResult);\r\n        }\r\n        return result;\r\n    }\r\n    /// dual data doesn't generate orientation information\r\n    getDualData(dim: number, faceIds?: number[]) {\r\n        faceIds ??= range(this.data[dim].length);\r\n        const data: DimList<Map<FaceId, Set<FaceId>>> = [];\r\n        for (let d = dim; d; d--) {\r\n            const faces = this.data[d];\r\n            data[d - 1] ??= new Map;\r\n            for (const [faceId, face] of faces.entries()) {\r\n                for (const d_faceId of face as Face) {\r\n                    if (!data[d - 1].get(d_faceId)) data[d - 1].set(d_faceId, new Set);\r\n                    data[d - 1].get(d_faceId).add(faceId);\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /* modify topology of cwmesh */\r\n\r\n\r\n    duplicate(sel?: CWMeshSelection, notCheckselectionClosure?: boolean) {\r\n        if (!sel) notCheckselectionClosure = true;\r\n        sel ??= this.getAllSelection();\r\n        const closure = (notCheckselectionClosure ? sel : sel.closure()).selData;\r\n        const info: DimList<Map<FaceId, FaceId>> = [];\r\n        const vertexIsVec4 = this.data[0][0] instanceof Vec4;\r\n        for (const [dim, faceIdList] of closure.entries()) {\r\n            info[dim] = new Map;\r\n            const faces = this.data[dim];\r\n            const facesO = this.orientation[dim];\r\n            for (const faceId of faceIdList) {\r\n                const f0: FaceId = faces.length;\r\n                info[dim].set(faceId, f0);\r\n                if (dim === 0) faces.push((vertexIsVec4 ? (faces[faceId] as Vec4).clone() : []) as any);\r\n                else {\r\n                    (faces as Face[]).push((faces as Face[])[faceId].map(d_faceId => info[dim - 1].get(d_faceId)));\r\n                    if (facesO && facesO[faceId]) {\r\n                        facesO[f0] = facesO[faceId].slice(0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    // before making bridge, oritation must be consist, this can be checked and corrected (todo)\t\t\t\t\t\t\r\n    bridge(mapInfo: DimList<Map<FaceId, FaceId>>) {\r\n        const info: DimList<Map<FaceId, FaceId>> = [];\r\n        for (const [dim, faceIdList] of mapInfo.entries()) {\r\n            const faces = this.data[dim];\r\n            const facesO = this.orientation[dim];\r\n            this.data[dim + 1] ??= [];\r\n            const cells = this.data[dim + 1] as Face[];\r\n            const invO = (dim & 1) === 0;\r\n            if (!this.orientation[dim + 1]) this.orientation[dim + 1] = [];\r\n            const cellsO = this.orientation[dim + 1];\r\n            for (const [faceId, clonedFaceId] of faceIdList) {\r\n                const face = faces[faceId] as Face;\r\n                const faceO = facesO ? facesO[faceId] : undefined;\r\n                const newId: FaceId = cells.length;\r\n                info[dim] ??= new Map; info[dim].set(faceId, newId);\r\n                if (dim === 0) cells.push([faceId, clonedFaceId]);\r\n                else {\r\n                    const newCell: Face = face.map(d_faceId => info[dim - 1].get(d_faceId)); newCell.push(faceId, clonedFaceId);\r\n                    cells.push(newCell);\r\n                    // D(Extrude(A)) = (-1)^(dim+1)(A - Aclone) + Extrude(DA)\r\n                    const newCellO = dim === 1 ? [false, true] : faceO.slice(0);\r\n                    newCellO.push(!invO, invO);\r\n                    cellsO[newId] = newCellO;\r\n                }\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    topologicalExtrude(sel?: CWMeshSelection) {\r\n        sel ??= this.getAllSelection();\r\n        const cloneInfo = this.duplicate(sel);\r\n        const bridgeInfo = this.bridge(cloneInfo);\r\n        return { cloneInfo, bridgeInfo };\r\n    }\r\n    topologicalCone(sel?: CWMeshSelection, notCheckselectionClosure?: boolean) {\r\n        if (!sel) notCheckselectionClosure = true;\r\n        sel ??= this.getAllSelection();\r\n        sel = notCheckselectionClosure ? sel : sel.closure();\r\n        const info: DimList<Map<FaceId, FaceId>> = [];\r\n        const v0: FaceId = this.data[0].length;\r\n        this.data[0].push(this.data[0][0] instanceof Vec4 ? new Vec4() : [] as any);\r\n        for (const [dim, faceIdList] of sel.selData.entries()) {\r\n            const faces = this.data[dim];\r\n            const facesO = this.orientation[dim];\r\n            this.data[dim + 1] ??= [];\r\n            const cells = this.data[dim + 1] as Face[];\r\n            this.orientation[dim + 1] ??= [];\r\n            const invO = (dim & 1) === 0;\r\n            const cellsO = this.orientation[dim + 1];\r\n            for (const faceId of faceIdList) {\r\n                const face = faces[faceId] as Face;\r\n                const faceO = facesO ? facesO[faceId] : undefined;\r\n                const newId: FaceId = cells.length;\r\n                info[dim] ??= new Map; info[dim].set(faceId, newId);\r\n                if (dim === 0) cells.push([faceId, v0]);\r\n                else {\r\n                    const newCell: Face = face.map(d_faceId => info[dim - 1].get(d_faceId)); newCell.push(faceId);\r\n                    cells.push(newCell);\r\n                    // D(Cone(A)) = (-1)^(dim+1)A + Cone(DA)\r\n                    if (faceO) {\r\n                        const newCellO = faceO.slice(0); newCellO.push(!invO);\r\n                        cellsO[newId] = newCellO;\r\n                    } else if (dim === 1) {\r\n                        cellsO[newId] = [false, true, !invO];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            coneVertex: v0,\r\n            map: info\r\n        };\r\n    }\r\n    // this U= this[thisSel] x shape2[shape2Sel]\r\n    topologicalProduct(shape2: CWMesh, thisSel?: CWMeshSelection, shape2Sel?: CWMeshSelection) {\r\n        if (thisSel) thisSel.closure();\r\n        if (shape2Sel) shape2Sel.closure();\r\n        thisSel ??= this.getAllSelection();\r\n        shape2Sel ??= shape2.getAllSelection();\r\n        // productInfo[dim2].get(face2Id)[dim1].get(face1Id) ==> face1_x_face2_Id\r\n        const productInfo: DimList<Map<FaceId, DimList<Map<FaceId, FaceId>>>> = [new Map];\r\n        // this[i] x shape2[0]\r\n        let firstCopy = true;\r\n        for (const sp2vId of shape2Sel.selData[0]) {\r\n            if (firstCopy) {\r\n                const identityInfo = thisSel.selData.map(set => new Map(set.entries()));\r\n                productInfo[0].set(sp2vId, identityInfo);\r\n                firstCopy = false;\r\n            } else {\r\n                const cloneInfo = this.duplicate(thisSel, true);\r\n                productInfo[0].set(sp2vId, cloneInfo);\r\n            }\r\n        }\r\n        // loop shape2\r\n        for (const [dim2, thisSel2dim] of shape2Sel.selData.entries()) {\r\n            // skip shape2[0], already calculated\r\n            if (!dim2 || !thisSel2dim) continue;\r\n            const faces2 = shape2.data[dim2];\r\n            const faces2O = shape2.orientation[dim2];\r\n            productInfo[dim2] ??= new Map;\r\n            const productInfoDim2 = productInfo[dim2];\r\n            for (const face2Id of thisSel2dim) {\r\n                const face2 = faces2[face2Id];\r\n                const face2O = faces2O ? faces2O[face2Id] : undefined;\r\n                if (!productInfoDim2.has(face2Id)) productInfoDim2.set(face2Id, []);\r\n                const face2ProductInfo = productInfoDim2.get(face2Id);\r\n                // loop shape1\r\n                for (const [dim1, thisSel1dim] of thisSel.selData.entries()) {\r\n                    if (!thisSel1dim) continue;\r\n                    const dim12 = dim1 + dim2;\r\n                    const faces1 = this.data[dim1];\r\n                    const faces1O = this.orientation[dim1];\r\n                    face2ProductInfo[dim1] ??= new Map;\r\n                    this.data[dim12] ??= [];\r\n                    const cells = this.data[dim12] as Face[];\r\n                    if (dim12 > 1) this.orientation[dim12] ??= [];\r\n                    const cellsO = this.orientation[dim12];\r\n                    for (const face1Id of thisSel1dim) {\r\n                        const face1 = faces1[face1Id];\r\n                        const face1O = faces1O ? faces1O[face1Id] : undefined;\r\n                        // regist newCell\r\n                        const newCell: Face = [];\r\n                        const newCellO = [];\r\n                        const newCellId = cells.length;\r\n                        face2ProductInfo[dim1].set(face1Id, newCellId);\r\n\r\n                        // D(shape1) x shape2 \r\n                        if (dim1) { // exclude 0-face with no border\r\n                            for (const [d_face1Idx, d_face1Id] of (face1 as Face).entries()) {\r\n                                newCell.push(face2ProductInfo[dim1 - 1].get(d_face1Id));\r\n                                if (dim1 > 1) newCellO.push(face1O[d_face1Idx]);\r\n                            }\r\n                            if (dim1 === 1) newCellO.push(false, true);\r\n                        }\r\n                        // D(shape2) x shape1\r\n                        const invO = (dim1 & 1) === 1;\r\n                        for (const [d_face2Idx, d_face2Id] of (face2 as Face).entries()) {\r\n                            newCell.push(productInfo[dim2 - 1].get(d_face2Id)[dim1].get(face1Id));\r\n                            if (dim2 > 1) newCellO.push(invO !== face2O[d_face2Idx]);\r\n                        }\r\n                        if (dim2 === 1) newCellO.push(invO, !invO);\r\n\r\n                        if (dim12 === 1) {\r\n                            if (newCellO[0] === true) {\r\n                                const temp = newCell[0]; newCell[0] = newCell[1]; newCell[1] = temp;\r\n                            }\r\n                        } else {\r\n                            cellsO.push(newCellO);\r\n                        }\r\n                        cells.push(newCell);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return productInfo;\r\n    }\r\n\r\n\r\n    /* modify concrete shape of cwmesh up to 4d */\r\n\r\n\r\n    apply(verticesCalls: (vertex: Vec4) => Vec4) {\r\n        (this.data[0] as Vec4[]).forEach(verticesCalls);\r\n        return this;\r\n    }\r\n    makePrism(direction: Vec4, alignCenter: boolean, sel?: CWMeshSelection) {\r\n        const { cloneInfo, bridgeInfo } = this.topologicalExtrude(sel);\r\n        const vs = this.data[0] as Vec4[];\r\n        if (alignCenter) {\r\n            for (const [srcvId, destvId] of cloneInfo[0]) {\r\n                vs[srcvId].addmulfs(direction, -0.5);\r\n                vs[destvId].addmulfs(direction, 0.5);\r\n            }\r\n        } else {\r\n            for (const [srcvId, destvId] of cloneInfo[0]) {\r\n                vs[destvId].adds(direction);\r\n            }\r\n        }\r\n        return { cloneInfo, bridgeInfo };\r\n    }\r\n    makeRotatoid(bivec: Bivec, segment: number, angle?: number) {\r\n        // throw \"not test yet\";\r\n        let pathcw: CWMesh;\r\n        const dangle = (angle ?? _360) / segment;\r\n        const ps: Vec4[] = [];\r\n        for (let i = 0, j = 0; i < segment; i++, j += dangle) { ps.push(new Vec4(Math.cos(j), Math.sin(j))); }\r\n        if (angle === undefined) {\r\n            pathcw = path(ps, true);\r\n        } else {\r\n            ps.push(new Vec4(Math.cos(angle), Math.sin(angle)));\r\n            pathcw = path(ps, false);\r\n        }\r\n        const R0 = Rotor.lookAtbb(Bivec.xy, bivec);\r\n        pathcw.apply(v => v.rotates(R0));\r\n\r\n        const v1s = this.data[0] as Vec4[];\r\n        const info = this.topologicalProduct(pathcw);\r\n\r\n        const r0 = bivec.mulf(dangle).exp();\r\n        const r = r0.clone();\r\n        const rarr: Rotor[] = [new Rotor, r.clone()];\r\n        for (let i = 2; i < pathcw.data[0].length; i++) {\r\n            rarr.push(r.mulsl(r0).clone());\r\n        }\r\n        for (const [v2Id, dim1List] of info[0]) {\r\n            for (const [v1Id, v1_x_v2Id] of dim1List[0]) {\r\n                if (v1Id === v1_x_v2Id) break;\r\n                if (v1Id !== v1_x_v2Id) v1s[v1_x_v2Id].copy(v1s[v1Id]).rotates(rarr[v2Id]);\r\n                r.mulsl(r0);\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    makePyramid(point: Vec4, sel?: CWMeshSelection) {\r\n        const info = this.topologicalCone(sel);\r\n        const vs = this.data[0] as Vec4[];\r\n        vs[info.coneVertex].copy(point);\r\n        return info;\r\n    }\r\n    makeDirectProduct(shape2: CWMesh, thisSel?: CWMeshSelection, shape2Sel?: CWMeshSelection) {\r\n        const v1s = this.data[0] as Vec4[];\r\n        const v2s = shape2.data[0] as Vec4[];\r\n        const info = this.topologicalProduct(shape2, thisSel, shape2Sel);\r\n        for (const [v2Id, dim1List] of info[0]) {\r\n            for (const [v1Id, v1_x_v2Id] of dim1List[0]) {\r\n                if (v1Id === v1_x_v2Id) break;\r\n                if (v1Id !== v1_x_v2Id) v1s[v1_x_v2Id].addset(v1s[v1Id], v2s[v2Id]);\r\n            }\r\n        }\r\n        for (const [v2Id, dim1List] of info[0]) {\r\n            for (const [v1Id, v1_x_v2Id] of dim1List[0]) {\r\n                if (v1Id !== v1_x_v2Id) break;\r\n                if (v1Id === v1_x_v2Id) v1s[v1_x_v2Id].addset(v1s[v1Id], v2s[v2Id]);\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    /// mesh must be closed manifold\r\n    makeDual() {\r\n        const d = (this.findBorder(this.dim()).size) ? this.dim() - 1 : this.dim();\r\n        const info = this.getDualData(d);\r\n        const mesh = new CWMesh;\r\n        for (let nd = d, dim = 0; nd > 0; nd--, dim++) {\r\n            mesh.data[nd] = [];\r\n            const nfaces = mesh.data[nd];\r\n            for (let [faceId, coDfaceId] of info[dim]) {\r\n                nfaces[faceId] = Array.from(coDfaceId);\r\n            }\r\n        }\r\n        mesh.data[0] = this.data[d].map((_, faceId) => {\r\n            const arr = Array.from(new CWMeshSelection(this).addFace(d, faceId).closure().selData[0]).map(\r\n                vId => this.data[0][vId] as Vec4\r\n            );\r\n            return arr.reduce((a: Vec4, b: Vec4) => a.adds(b), new Vec4).divfs(arr.length);\r\n        });\r\n        mesh.data[4] = [range(mesh.data[3].length)];\r\n        mesh.calculateOrientationInFace(4, 0);\r\n        return mesh;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Vec3 } from \"../math/algebra/vec3.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { CWMesh, tetra } from \"../mesh/mesh.js\";\r\nimport { Geometry } from \"./scene.js\";\r\n\r\nexport class TesseractGeometry extends Geometry {\r\n    constructor(size?: number | Vec4) {\r\n        super(tetra.tesseract());\r\n        if (size) this.jsBuffer.applyObj4(new Obj4(null, null,\r\n            size instanceof Vec4 ? size : new Vec4(size, size, size, size)\r\n        ));\r\n    }\r\n}\r\nexport class CubeGeometry extends Geometry {\r\n    constructor(size?: number | Vec3) {\r\n        super(tetra.cube.clone());\r\n        if (size) this.jsBuffer.applyObj4(new Obj4(null, null,\r\n            size instanceof Vec3 ? new Vec4(size.x, 1, size.y, size.z) : new Vec4(size, 1, size, size)\r\n        ));\r\n    }\r\n}\r\nexport class GlomeGeometry extends Geometry {\r\n    constructor(size: number = 1, detail: number | { xy: number, zw: number, latitude: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.glome(size, detail * 8, detail * 8, detail * 6));\r\n        else\r\n            super(tetra.glome(size, detail.xy, detail.zw, detail.latitude));\r\n    }\r\n}\r\nexport class SpheritorusGeometry extends Geometry {\r\n    constructor(sphereRadius: number = 0.4, circleRadius: number = 1, detail: number | { longitude: number, latitude: number, circle: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.spheritorus(sphereRadius, detail * 8, detail * 6, circleRadius, detail * 8));\r\n        else\r\n            super(tetra.spheritorus(sphereRadius, detail.longitude, detail.latitude, circleRadius, detail.circle));\r\n    }\r\n}\r\nexport class TorisphereGeometry extends Geometry {\r\n    constructor(circleRadius: number = 0.2, sphereRadius: number = 0.8, detail: number | { longitude: number, latitude: number, circle: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.torisphere(circleRadius, detail * 6, sphereRadius, detail * 8, detail * 6));\r\n        else\r\n            super(tetra.torisphere(circleRadius, detail.circle, sphereRadius, detail.longitude, detail.latitude));\r\n    }\r\n}\r\nexport class SpherinderSideGeometry extends Geometry {\r\n    constructor(sphereRadius1: number = 0.4, sphereRadius2: number = sphereRadius1, height: number = 1, detail: number | { longitude: number, latitude: number, height?: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.spherinderSide(sphereRadius1, sphereRadius2, detail * 8, detail * 6, height, detail * 2));\r\n        else\r\n            super(tetra.spherinderSide(sphereRadius1, sphereRadius2, detail.longitude, detail.latitude, height, detail.height));\r\n    }\r\n}\r\nexport class TigerGeometry extends Geometry {\r\n    constructor(circleRadius: number = 0.2, radius1: number = 0.8, radius2: number = 0.8, detail: number | { xy: number, zw: number, circle: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.tiger(radius1, detail * 8, radius2, detail * 8, circleRadius, detail * 6));\r\n        else\r\n            super(tetra.tiger(radius1, detail.xy, radius2, detail.zw, circleRadius, detail.circle));\r\n    }\r\n}\r\nexport class DitorusGeometry extends Geometry {\r\n    constructor(circleRadius: number = 0.2, radius1: number = 0.8, radius2: number = 0.4, detail: number | { major: number, middle: number, minor: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.ditorus(radius1, detail * 8, radius2, detail * 8, circleRadius, detail * 6));\r\n        else\r\n            super(tetra.ditorus(radius1, detail.major, radius2, detail.middle, circleRadius, detail.minor));\r\n    }\r\n}\r\nexport class DuocylinderGeometry extends Geometry {\r\n    constructor(radius1: number = 0.8, radius2: number = 0.8, detail: number | { xy: number, zw: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.duocylinder(radius1, detail * 8, radius2, detail * 8));\r\n        else\r\n            super(tetra.duocylinder(radius1, detail.xy, radius2, detail.zw));\r\n    }\r\n}\r\nexport class ConvexHullGeometry extends Geometry {\r\n    constructor(points: Vec4[]) {\r\n        super(tetra.convexhull(points).generateNormal().setUVWAsPosition());\r\n    }\r\n}\r\nexport class CWMeshGeometry extends Geometry {\r\n    constructor(cwmesh: CWMesh) {\r\n        super(tetra.cwmesh(cwmesh).setUVWAsPosition());\r\n    }\r\n}","import { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Camera, PerspectiveCamera } from \"./scene.js\";\r\nimport { AABB, Plane } from \"../math/geometry/primitive.js\";\r\nimport { IWireframeRenderState, RenderState } from \"../render/slice/interfaces\";\r\nimport { Vec3, _vec3_4 } from \"../math/algebra/vec3.js\";\r\nimport { _90, _DEG2RAD } from \"../math/const.js\";\r\nimport { WireFrameRenderPass } from \"../render/slice/renderer.js\";\r\nimport { CWMesh } from \"../mesh/mesh.js\";\r\nimport { CWMeshSelection, Face } from \"../mesh/cwmesh/cwmesh.js\";\r\nexport interface WireFrameObject extends Obj4 {\r\n    lines: [Vec4, Vec4][];\r\n    visible?: boolean;\r\n    _jsBuffer?: [Vec4, Vec4][];\r\n    obb?: AABB;\r\n}\r\nconst WireFrameTesseractoid_SubCells: [number, number][] = [\r\n    [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7],\r\n    [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7],\r\n    [2, 4], [2, 5], [2, 6], [2, 7],\r\n    [3, 4], [3, 5], [3, 6], [3, 7],\r\n    [4, 6], [4, 7],\r\n    [5, 6], [5, 7]\r\n];\r\nexport class WireFrameTesseractoid extends Obj4 implements WireFrameObject, WireFrameOccluder {\r\n    lines: [Vec4, Vec4][];// GPUBuffer; // linelist\r\n    cells: Plane[];\r\n    subCells: [number, number][] = WireFrameTesseractoid_SubCells;\r\n    obb: AABB;\r\n    visible = true;\r\n    transparent = false;\r\n    constructor(size: Vec4) {\r\n        super(); let x = size.x, y = size.y, z = size.z, w = size.w;\r\n        this.obb = new AABB(size.neg(), size);\r\n        this.lines = [\r\n            [new Vec4(x, y, z, w), new Vec4(x, y, z, -w)],\r\n            [new Vec4(x, y, -z, w), new Vec4(x, y, -z, -w)],\r\n            [new Vec4(x, -y, z, w), new Vec4(x, -y, z, -w)],\r\n            [new Vec4(x, -y, -z, w), new Vec4(x, -y, -z, -w)],\r\n            [new Vec4(-x, y, z, w), new Vec4(-x, y, z, -w)],\r\n            [new Vec4(-x, y, -z, w), new Vec4(-x, y, -z, -w)],\r\n            [new Vec4(-x, -y, z, w), new Vec4(-x, -y, z, -w)],\r\n            [new Vec4(-x, -y, -z, w), new Vec4(-x, -y, -z, -w)],\r\n\r\n            [new Vec4(x, y, z, w), new Vec4(-x, y, z, w)],\r\n            [new Vec4(x, y, z, -w), new Vec4(-x, y, z, -w)],\r\n            [new Vec4(x, y, -z, w), new Vec4(-x, y, -z, w)],\r\n            [new Vec4(x, y, -z, -w), new Vec4(-x, y, -z, -w)],\r\n            [new Vec4(x, -y, z, w), new Vec4(-x, -y, z, w)],\r\n            [new Vec4(x, -y, z, -w), new Vec4(-x, -y, z, -w)],\r\n            [new Vec4(x, -y, -z, w), new Vec4(-x, -y, -z, w)],\r\n            [new Vec4(x, -y, -z, -w), new Vec4(-x, -y, -z, -w)],\r\n\r\n            [new Vec4(x, y, z, w), new Vec4(x, -y, z, w)],\r\n            [new Vec4(-x, y, z, w), new Vec4(-x, -y, z, w)],\r\n            [new Vec4(x, y, z, -w), new Vec4(x, -y, z, -w)],\r\n            [new Vec4(-x, y, z, -w), new Vec4(-x, -y, z, -w)],\r\n            [new Vec4(x, y, -z, w), new Vec4(x, -y, -z, w)],\r\n            [new Vec4(-x, y, -z, w), new Vec4(-x, -y, -z, w)],\r\n            [new Vec4(x, y, -z, -w), new Vec4(x, -y, -z, -w)],\r\n            [new Vec4(-x, y, -z, -w), new Vec4(-x, -y, -z, -w)],\r\n\r\n            [new Vec4(x, y, z, w), new Vec4(x, y, -z, w)],\r\n            [new Vec4(-x, y, z, w), new Vec4(-x, y, -z, w)],\r\n            [new Vec4(x, y, z, -w), new Vec4(x, y, -z, -w)],\r\n            [new Vec4(-x, y, z, -w), new Vec4(-x, y, -z, -w)],\r\n            [new Vec4(x, -y, z, w), new Vec4(x, -y, -z, w)],\r\n            [new Vec4(-x, -y, z, w), new Vec4(-x, -y, -z, w)],\r\n            [new Vec4(x, -y, z, -w), new Vec4(x, -y, -z, -w)],\r\n            [new Vec4(-x, -y, z, -w), new Vec4(-x, -y, -z, -w)],\r\n        ]\r\n        this.cells = [\r\n            new Plane(Vec4.x, x), new Plane(Vec4.xNeg, x),\r\n            new Plane(Vec4.y, y), new Plane(Vec4.yNeg, y),\r\n            new Plane(Vec4.z, z), new Plane(Vec4.zNeg, z),\r\n            new Plane(Vec4.w, w), new Plane(Vec4.wNeg, w),\r\n        ];\r\n    }\r\n}\r\nexport class WireFrameConvexPolytope extends Obj4 implements WireFrameObject, WireFrameOccluder {\r\n    lines: [Vec4, Vec4][];// GPUBuffer; // linelist\r\n    cells: Plane[];\r\n    subCells: [number, number][];\r\n    obb: AABB;\r\n    visible = true;\r\n    transparent = false;\r\n    constructor(cwmesh: CWMesh) {\r\n        super();\r\n        const vertices = cwmesh.data[0] as Vec4[];\r\n        this.lines = (cwmesh.data[1] as Face[]).map(face => [vertices[face[0]], vertices[face[1]]]);\r\n        const subCells: number[][] = (cwmesh.data[2] as Face[]).map(_ => []);\r\n        for (const [idx, cell] of (cwmesh.data[3] as Face[]).entries()) {\r\n            for (const faceIdx of cell) {\r\n                subCells[faceIdx].push(idx);\r\n            }\r\n        }\r\n        let simplexes: number[][][];\r\n        const borders = cwmesh.findBorder(4);\r\n        if (borders) {\r\n            // closed 4d object's surface\r\n            const cells = [];\r\n            const cellsO = [];\r\n            for (const [cellId, border] of borders.entries()) {\r\n                if (border !== 1 && border !== -1) continue;\r\n                cells.push(cellId);\r\n                cellsO.push(border === 1);\r\n            }\r\n            simplexes = cwmesh.triangulate(3, cells, cellsO);\r\n        } else {\r\n            simplexes = cwmesh.triangulate(3, cwmesh.data[3].map((_, idx) => idx));\r\n        }\r\n        const v1 = new Vec4, v2 = new Vec4, v3 = new Vec4;\r\n        this.cells = simplexes.map(ss => {\r\n            const s = ss[0];\r\n            const a0 = vertices[s[0]];\r\n            const a1 = vertices[s[1]];\r\n            const a2 = vertices[s[2]];\r\n            const a3 = vertices[s[3]];\r\n            const normal = v1.subset(a0, a1).wedge(v2.subset(a0, a2)).wedgev(v3.subset(a0, a3)).norms();\r\n            return new Plane(normal, a1.dot(normal));\r\n        });\r\n        this.subCells = subCells as [number, number][];\r\n        this.obb = AABB.fromPoints(vertices);\r\n    }\r\n}\r\nconst _vec4 = new Vec4;\r\nconst _vec3 = new Vec3;\r\nconst _vec42 = new Vec4;\r\nexport class WireFrameScene {\r\n    occluders: WireFrameOccluder[] = [];\r\n    objects: WireFrameObject[] = [];\r\n    camera = new PerspectiveCamera;\r\n    jsBuffer: Float32Array;\r\n    gpuBuffer: GPUBuffer;\r\n    maxGpuBufferSize: number = 0x10000;\r\n    clipEpsilon = 1e-5;\r\n    add(...o: (WireFrameObject | WireFrameOccluder)[]) {\r\n        for (const obj of o) {\r\n            if ((obj as WireFrameObject).lines) {\r\n                this.objects.push(obj as WireFrameObject);\r\n            }\r\n            if ((obj as WireFrameOccluder).cells) {\r\n                this.occluders.push(obj as WireFrameOccluder);\r\n            }\r\n        }\r\n    }\r\n    private occludeFrustum(renderState: RenderState) {\r\n        const frustumRange = renderState.getFrustumRange(this.camera, true);\r\n        for (const obj of this.objects) {\r\n            if (obj.visible === false) continue;\r\n            let relP = _vec4.copy(this.camera.position).subs(obj.position);\r\n            let visible = true;\r\n            let clipFaces: Plane[] = [];\r\n            let borderIdx = 0;\r\n            for (let f of frustumRange) {\r\n                const p = new Plane(f.clone().rotatesconj(obj.rotation), f.dot(relP));\r\n                const pos = obj.obb.testPlane(p);\r\n                if (pos === 1) {\r\n                    visible = false; break;\r\n                }\r\n                if (pos === 0) {\r\n                    clipFaces.push(p);\r\n                }\r\n                borderIdx++;\r\n            }\r\n            obj._jsBuffer = visible ? obj.lines.map(([pa, pb]) => [pa.clone(), pb.clone()]) : [];\r\n            if (!visible) continue;\r\n            clipFaces.map(p => {\r\n                for (const [pa, pb] of obj._jsBuffer) {\r\n                    const la = pa.dot(p.normal) - p.offset;\r\n                    const lb = pb.dot(p.normal) - p.offset;\r\n                    if (la > 0 !== lb > 0) {\r\n                        const l = lb / (lb - la);\r\n                        const p = _vec4.copy(pa).subs(pb).mulfs(l).adds(pb);\r\n                        if (la > 0) {\r\n                            pa.copy(p);\r\n                        } else {\r\n                            pb.copy(p);\r\n                        }\r\n                    } else if (la > 0 && lb > 0) {\r\n                        pa.set(NaN);\r\n                        pb.set(NaN);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    private calcViewBoundary(c1: Plane, c2: Plane): Vec4;\r\n    private calcViewBoundary(c1: Plane, c2: Plane, origin: Vec4): Plane;\r\n    private calcViewBoundary(c1: Plane, c2: Plane, origin?: Vec4) {\r\n        if (origin) {\r\n            const k1 = c1.normal.dot(origin) - c1.offset;\r\n            const k2 = c2.normal.dot(origin) - c2.offset;\r\n            const l = k1 / (k1 - k2);\r\n            const n = c1.normal.mulf(1 - l).addmulfs(c2.normal, l);\r\n            return new Plane(n, (1 - l) * c1.offset + l * c2.offset);\r\n        } else {\r\n            const l = c1.offset / (c1.offset - c2.offset);\r\n            const n = _vec4.copy(c1.normal).mulfs(1 - l).addmulfs(c2.normal, l);\r\n            return n;\r\n        }\r\n    }\r\n    private occludeOccluders() {\r\n        for (const ocd of this.occluders) {\r\n            if (ocd.transparent) continue;\r\n            // todo: obb frustum test, if not visible, skip all\r\n            const relP = _vec4.subset(this.camera.position, ocd.position).rotatesconj(ocd.rotation);\r\n            const faceDir = ocd.cells.map(p => p.normal.dot(relP) - p.offset > -this.clipEpsilon);\r\n            const inside = !faceDir.includes(true);\r\n            let worldBorders: Plane[];\r\n            if (inside) {\r\n                worldBorders = ocd.cells.map(p => p.clone().applyObj4(ocd));\r\n            } else {\r\n                const border = ocd.subCells.filter(([a, b]) => faceDir[a] !== faceDir[b]).map(\r\n                    ([a, b]) => faceDir[a] ? this.calcViewBoundary(ocd.cells[a], ocd.cells[b], relP) : this.calcViewBoundary(ocd.cells[b], ocd.cells[a], relP)\r\n                );\r\n                worldBorders = border.map(p => p.applyObj4(ocd));\r\n                for (let i = 0; i < faceDir.length; i++) {\r\n                    if (faceDir[i]) {\r\n                        worldBorders.push(ocd.cells[i].clone().applyObj4(ocd));\r\n                    }\r\n                }\r\n            }\r\n            ocd._inside = inside; ocd._worldBorders = worldBorders;\r\n        }\r\n        for (const obj of this.objects) {\r\n            if (obj.visible === false) continue;\r\n            for (let i = 0; i < obj._jsBuffer.length; i++) {\r\n                let [pa, pb] = obj._jsBuffer[i];\r\n                if (!isNaN(pa.x)) {\r\n                    obj._jsBuffer[i][0].copy(pa.applyObj4(obj));\r\n                    obj._jsBuffer[i][1].copy(pb.applyObj4(obj));\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const ocd of this.occluders) {\r\n            if (ocd.transparent) continue;\r\n            for (const obj of this.objects) {\r\n                if (obj.visible === false) continue;\r\n                const nBuffer: [Vec4, Vec4][] = [];\r\n                for (const [pa, pb] of obj._jsBuffer) {\r\n                    // write new fn here, attention jsbuffer size\r\n                    if (isNaN(pa.x)) continue;\r\n                    this.clipLine(ocd._inside, pa, pb, ocd._worldBorders, nBuffer);\r\n                }\r\n                obj._jsBuffer.push(...nBuffer);\r\n            }\r\n        }\r\n    }\r\n    // refeerence: Blockv6 Clip.java\r\n    private clipLine(isInside: boolean, pa: Vec4, pb: Vec4, borders: Plane[], nBuffer: [Vec4, Vec4][]) {\r\n\r\n        if (isInside) {\r\n            // pa=cliparea=ra----rb=cliparea==pb\r\n            let ra = 0, rb = 1;\r\n            for (const p of borders) {\r\n                const la = pa.dot(p.normal) - p.offset - this.clipEpsilon;\r\n                const lb = pb.dot(p.normal) - p.offset - this.clipEpsilon;\r\n                if (lb > 0) {\r\n                    if (la > 0) {\r\n                        pa.set(NaN); pb.set(NaN); return;\r\n                    }\r\n                    const l = lb / (lb - la);\r\n                    if (l > ra) ra = l;\r\n                } else if (la > 0) {\r\n                    const l = lb / (lb - la);\r\n                    if (l < rb) rb = l;\r\n                }\r\n                if (ra >= rb) {\r\n                    pa.set(NaN); pb.set(NaN); return;\r\n                }\r\n            }\r\n        } else {\r\n            // pa====ra--cliparea--rb====pb\r\n            let ra = 0, rb = 1;\r\n            for (const p of borders) {\r\n                const la = pa.dot(p.normal) - p.offset + this.clipEpsilon;\r\n                const lb = pb.dot(p.normal) - p.offset + this.clipEpsilon;\r\n                if (la > 0) {\r\n                    if (lb > 0) return;\r\n                    const l = la / (la - lb);\r\n                    if (l > ra) ra = l;\r\n                } else if (lb > 0) {\r\n                    const l = la / (la - lb);\r\n                    if (l < rb) rb = l;\r\n                }\r\n                if (ra >= rb) return;\r\n            }\r\n            if (ra === 0) {\r\n                if (rb === 1) {\r\n                    pa.set(NaN); pb.set(NaN);\r\n                } else {\r\n                    pa.copy(_vec4.copy(pb).subs(pa).mulfs(rb).adds(pa));\r\n                }\r\n            } else if (rb === 1) {\r\n                pb.copy(_vec4.copy(pb).subs(pa).mulfs(ra).adds(pa));\r\n            } else {\r\n                nBuffer.push([pb.clone(), pb.sub(pa).mulfs(rb).adds(pa)]);\r\n                pb.subs(pa).mulfs(ra).adds(pa);\r\n            }\r\n        }\r\n    }\r\n    render(rs: IWireframeRenderState, objs?: WireFrameObject[]) {\r\n        const renderState = (rs as WireFrameRenderPass).renderState;\r\n        const gpu = (rs as WireFrameRenderPass).gpu;\r\n\r\n        this.jsBuffer ??= new Float32Array(this.maxGpuBufferSize);\r\n        this.gpuBuffer ??= gpu.createBuffer(GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST, this.maxGpuBufferSize);\r\n        let offset = 0;\r\n        const fovCoeff = -renderState.sliceBuffers.camProjJsBuffer[1];\r\n        const _r = new Obj4;\r\n        // copy data to temp jsbuffer and do retina frustum clip, all data are under object's coord\r\n        this.occludeFrustum(renderState);\r\n        // when do occlusion, all data are converted in world coord\r\n        this.occludeOccluders();\r\n        // when draw, only need to convert to camera's coord\r\n        for (const obj of objs ?? this.objects) {\r\n            if (obj.visible === false) continue;\r\n            // _r.rotation.copy(obj.rotation).mulslconj(this.camera.rotation);\r\n            // _r.position.copy(obj.position).subs(this.camera.position).rotatesconj(this.camera.rotation);\r\n            _r.rotation.copy(this.camera.rotation).conjs();\r\n            _r.position.copy(this.camera.position).negs().rotatesconj(this.camera.rotation);\r\n            //ax+b-B=Ay\r\n            for (const [pa, pb] of obj._jsBuffer) {\r\n                if (isNaN(pa.x)) continue;\r\n                _vec4.copy(pa).applyObj4(_r);\r\n                _vec4.mulfs(fovCoeff / _vec4.w);\r\n                _vec4.writeBuffer(this.jsBuffer, offset);\r\n\r\n                _vec4.copy(pb).applyObj4(_r);\r\n                _vec4.mulfs(fovCoeff / _vec4.w);\r\n                _vec4.writeBuffer(this.jsBuffer, offset + 4);\r\n                offset += 8;\r\n            }\r\n        }\r\n        gpu.device.queue.writeBuffer(this.gpuBuffer, 0, this.jsBuffer, 0, offset);\r\n        rs.render(this.gpuBuffer, offset >> 2);\r\n    }\r\n}\r\n\r\nexport interface WireFrameOccluder extends Obj4 {\r\n    obb?: AABB;\r\n    cells: Plane[];\r\n    /** if transparent is true, this occluder will be disabled */\r\n    transparent?: boolean;\r\n    // one subcell contains two cell idx numbers, which is used for generating view bondaries\r\n    subCells: [number, number][];\r\n    _inside?: boolean;\r\n    _worldBorders?: Plane[];\r\n}","import { Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Bivec } from \"../math/algebra/bivec.js\";\r\nimport { Mat4 } from \"../math/algebra/mat4.js\";\r\nimport { Quaternion } from \"../math/algebra/quaternion.js\";\r\nimport { Rotor } from \"../math/algebra/rotor.js\";\r\nimport { Vec2, vec2Pool } from \"../math/algebra/vec2.js\";\r\nimport { Vec3 } from \"../math/algebra/vec3.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { _360, _90, _DEG2RAD, _SQRT_3 } from \"../math/const.js\";\r\nimport { EyeStereo, SectionConfig, DisplayConfig, RetinaSliceFacing, SliceRenderer, RetinaRenderPass, RetinaRenderPassDescriptor } from \"../render/slice/slice.js\";\r\n\r\nexport interface IController {\r\n    enabled?: boolean;\r\n    update(state: ControllerState): void;\r\n}\r\nexport interface ControllerConfig {\r\n    preventDefault?: boolean;\r\n    enablePointerLock?: boolean;\r\n}\r\ninterface KeyConfig {\r\n    [fn: string]: string;\r\n}\r\nexport interface ControllerState {\r\n    currentKeys: Map<String, KeyState>;\r\n    /** holded mouse button */\r\n    currentBtn: number;\r\n    /** pressed mouse button */\r\n    mouseDown: number;\r\n    /** released mouse button */\r\n    mouseUp: number;\r\n    updateCount: number;\r\n    moveX: number;\r\n    moveY: number;\r\n    mouseX: number;\r\n    mouseY: number;\r\n    wheelX: number;\r\n    wheelY: number;\r\n    lastUpdateTime?: number;\r\n    mspf: number;\r\n    requestPointerLock: () => void;\r\n    enablePointerLock?: boolean;\r\n    /** PointerLock has been triggered by the mouse */\r\n    isPointerLockedMouseDown?: boolean;\r\n    /** PointerLock has been canceled by key escape */\r\n    isPointerLockEscaped?: boolean;\r\n    /** code:\r\n     *  'KeyA' for holding Key A\r\n     *  '.KeyA' for pressing Key A \r\n     *  'ControlLeft+.KeyA' for press A while holding CtrlLeft*/\r\n    isKeyHold: (code: string) => boolean;\r\n    isPointerLocked: () => boolean;\r\n    exitPointerLock: () => void;\r\n}\r\nexport enum KeyState {\r\n    NONE,\r\n    UP,\r\n    HOLD,\r\n    DOWN,\r\n}\r\nexport class ControllerRegistry {\r\n    dom: HTMLElement;\r\n    private ctrls: Array<IController>;\r\n    enablePointerLock: boolean;\r\n    readonly states: ControllerState = {\r\n        currentKeys: new Map(),\r\n        isPointerLockedMouseDown: false,\r\n        isPointerLockEscaped: false,\r\n        currentBtn: -1,\r\n        mouseDown: -1,\r\n        mouseUp: -1,\r\n        updateCount: 0,\r\n        moveX: 0,\r\n        moveY: 0,\r\n        mouseX: 0,\r\n        mouseY: 0,\r\n        wheelX: 0,\r\n        wheelY: 0,\r\n        mspf: -1,\r\n\r\n        isKeyHold: (_) => false,\r\n        requestPointerLock: () => false,\r\n        isPointerLocked: () => false,\r\n        exitPointerLock: () => { }\r\n    }\r\n    /** if this is true, prevent default will not work  */\r\n    disableDefaultEvent = false;\r\n    private prevIsPointerLocked = false;\r\n    private evMouseDown: (ev: MouseEvent) => any;\r\n    private evMouseUp: (ev: MouseEvent) => any;\r\n    private evMouseMove: (ev: MouseEvent) => any;\r\n    private evWheel: (ev: WheelEvent) => any;\r\n    private evKeyUp: (ev: KeyboardEvent) => any;\r\n    private evKeyDown: (ev: KeyboardEvent) => any;\r\n    private evContextMenu: (ev: MouseEvent) => any;\r\n    constructor(dom: HTMLElement, ctrls: Array<IController>, config?: ControllerConfig) {\r\n        this.dom = dom;\r\n        dom.tabIndex = 1;\r\n        this.ctrls = ctrls;\r\n        this.enablePointerLock = config?.enablePointerLock ?? false;\r\n        this.states.isKeyHold = (code) => {\r\n            if (code.includes(\"|\")) {\r\n                for (let key of code.split(\"|\")) {\r\n                    if (this.states.isKeyHold(key)) return true;\r\n                }\r\n                return false;\r\n            }\r\n            for (let key of code.split(\"+\")) {\r\n                if (key[0] === '.') {\r\n                    let state = this.states.currentKeys.get(key.slice(1));\r\n                    if (state !== KeyState.DOWN) return false;\r\n                } else {\r\n                    let state = this.states.currentKeys.get(key);\r\n                    if (!state || state === KeyState.UP) return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        this.states.isPointerLocked = () => {\r\n            return ((!this.states.isPointerLockedMouseDown) && document.pointerLockElement === this.dom);\r\n        }\r\n        this.states.exitPointerLock = () => {\r\n            if (document.pointerLockElement === this.dom) {\r\n                document.exitPointerLock();\r\n                // if we exit positively, then don't trigger isPointerLockEscaped in the next update\r\n                this.prevIsPointerLocked = false;\r\n            }\r\n        }\r\n        this.states.requestPointerLock = () => {\r\n            if (document.pointerLockElement !== dom) {\r\n                dom.requestPointerLock();\r\n            }\r\n        }\r\n\r\n        // regist events\r\n\r\n        this.evMouseDown = (ev) => {\r\n            if (this.enablePointerLock && document.pointerLockElement !== dom) {\r\n                dom.requestPointerLock();\r\n                this.states.isPointerLockedMouseDown = true;\r\n            } else {\r\n                dom.focus();\r\n            }\r\n            this.states.currentBtn = ev.button;\r\n            this.states.moveX = 0;\r\n            this.states.moveY = 0;\r\n            this.states.mouseDown = ev.button;\r\n            if (ev.altKey === false) {\r\n                this.states.currentKeys.set(\"AltLeft\", KeyState.NONE);\r\n                this.states.currentKeys.set(\"AltRight\", KeyState.NONE);\r\n            }\r\n            // left click should not be prevented, otherwise keydown event can't obtain focus\r\n            if (ev.button === 1 && config?.preventDefault === true) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        };\r\n        this.evMouseMove = (ev) => {\r\n            this.states.moveX += ev.movementX;\r\n            this.states.moveY += ev.movementY;\r\n            this.states.mouseX = ev.offsetX;\r\n            this.states.mouseY = ev.offsetY;\r\n        };\r\n        this.evMouseUp = (ev) => {\r\n            this.states.currentBtn = -1;\r\n            this.states.mouseUp = ev.button;\r\n        };\r\n        this.evKeyDown = (ev) => {\r\n            let prevState = this.states.currentKeys.get(ev.code);\r\n            this.states.currentKeys.set(ev.code, prevState === KeyState.HOLD ? KeyState.HOLD : KeyState.DOWN);\r\n            if (ev.altKey === false) {\r\n                this.states.currentKeys.set(\"AltLeft\", KeyState.NONE);\r\n                this.states.currentKeys.set(\"AltRight\", KeyState.NONE);\r\n            }\r\n            if ((ev.altKey === true || ev.ctrlKey === true) && this.disableDefaultEvent) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        };\r\n        this.evKeyUp = (ev) => {\r\n            this.states.currentKeys.set(ev.code, KeyState.UP);\r\n            if ((ev.altKey === true || ev.ctrlKey === true) && this.disableDefaultEvent) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        };\r\n        this.evWheel = (ev) => {\r\n            this.states.wheelX = ev.deltaX;\r\n            this.states.wheelY = ev.deltaY;\r\n        };\r\n        // mouse events are restricted in dom (canvas)\r\n        dom.addEventListener(\"mousedown\", this.evMouseDown);\r\n        dom.addEventListener(\"mousemove\", this.evMouseMove);\r\n        dom.addEventListener(\"mouseup\", this.evMouseUp);\r\n        // but wheel and key event do not require focus on dom(canvas)\r\n        document.body.addEventListener(\"keydown\", this.evKeyDown);\r\n        document.body.addEventListener(\"keyup\", this.evKeyUp);\r\n        document.body.addEventListener(\"wheel\", this.evWheel);\r\n        if (config?.preventDefault === true) {\r\n            this.evContextMenu = (ev) => {\r\n                if (!this.disableDefaultEvent) {\r\n                    ev.preventDefault();\r\n                    ev.stopPropagation();\r\n                }\r\n            };\r\n            dom.addEventListener(\"contextmenu\", this.evContextMenu);\r\n        }\r\n    }\r\n    add(ctrl: IController) {\r\n        this.ctrls.push(ctrl);\r\n    }\r\n\r\n    remove(ctrl: IController) {\r\n        this.ctrls = this.ctrls.filter(c => c !== ctrl);\r\n    }\r\n    unregist() {\r\n        this.dom.removeEventListener(\"mousedown\", this.evMouseDown);\r\n        this.dom.removeEventListener(\"mousemove\", this.evMouseMove);\r\n        this.dom.removeEventListener(\"mouseup\", this.evMouseUp);\r\n        this.dom.removeEventListener(\"keydown\", this.evKeyDown);\r\n        this.dom.removeEventListener(\"keyup\", this.evKeyUp);\r\n        this.dom.removeEventListener(\"wheel\", this.evWheel);\r\n        if (this.evContextMenu) this.dom.removeEventListener(\"contextmenu\", this.evContextMenu);\r\n    }\r\n    update() {\r\n        this.states.enablePointerLock = this.enablePointerLock;\r\n        this.states.isPointerLockEscaped = this.prevIsPointerLocked && !this.states.isPointerLocked();\r\n        if (!this.states.lastUpdateTime) {\r\n            this.states.mspf = 16.667;\r\n            let now = new Date().getTime();\r\n            this.states.lastUpdateTime = now;\r\n        } else {\r\n            let now = new Date().getTime();\r\n            this.states.mspf = now - this.states.lastUpdateTime;\r\n            this.states.lastUpdateTime = now;\r\n        }\r\n        for (let c of this.ctrls) {\r\n            c.update(this.states);\r\n        }\r\n        this.states.mouseDown = -1;\r\n        this.states.mouseUp = -1;\r\n        this.states.moveX = 0;\r\n        this.states.moveY = 0;\r\n        this.states.wheelX = 0;\r\n        this.states.wheelY = 0;\r\n        this.states.updateCount++;\r\n        this.states.isPointerLockedMouseDown = false;\r\n        this.prevIsPointerLocked = this.states.isPointerLocked();\r\n        for (let [key, prevState] of this.states.currentKeys) {\r\n            let newState = prevState;\r\n            if (prevState === KeyState.DOWN) {\r\n                newState = KeyState.HOLD;\r\n            } else if (prevState === KeyState.UP) {\r\n                newState = KeyState.NONE;\r\n            }\r\n            this.states.currentKeys.set(key, newState);\r\n        }\r\n    }\r\n}\r\nexport class TrackBallController implements IController {\r\n    enabled = true;\r\n    object = new Obj4(Vec4.w.neg());\r\n    mouseSpeed = 0.01;\r\n    wheelSpeed = 0.0001;\r\n    damp = 0.1;\r\n    mouseButton3D = 0;\r\n    mouseButtonRoll = 1;\r\n    mouseButton4D = 2;\r\n    /** how many update cycles (2^n) to normalise rotor to avoid accuracy problem */\r\n    normalisePeriodBit: 4;\r\n    keyConfig = {\r\n        disable: \"AltLeft\",\r\n        enable: \"\",\r\n    }\r\n    cameraMode = false;\r\n    private _bivec = new Bivec();\r\n    private normalisePeriodMask = 15;\r\n    constructor(object?: Obj4, cameraMode?: boolean) {\r\n        if (object) this.object = object;\r\n        this.cameraMode = cameraMode ?? false;\r\n    }\r\n    update(state: ControllerState) {\r\n        let disabled = state.isKeyHold(this.keyConfig.disable) || !this.enabled;\r\n        let dampFactor = Math.exp(-this.damp * Math.min(200.0, state.mspf));\r\n        if (!disabled) {\r\n            let dx = state.moveX * this.mouseSpeed;\r\n            let dy = -state.moveY * this.mouseSpeed;\r\n            let wy = state.wheelY * this.wheelSpeed;\r\n            switch (state.currentBtn) {\r\n                case this.mouseButton3D:\r\n                    this._bivec.set(0, dx, 0, dy);\r\n                    break;\r\n                case this.mouseButtonRoll:\r\n                    this._bivec.set(dx, 0, 0, 0, 0, dy);\r\n                    break;\r\n                case this.mouseButton4D:\r\n                    this._bivec.set(0, 0, dx, 0, dy);\r\n                    break;\r\n                default:\r\n                    this._bivec.mulfs(dampFactor);\r\n            }\r\n            this.object.position.mulfs(1 + wy);\r\n        } else {\r\n            this._bivec.mulfs(dampFactor);\r\n        }\r\n        const rotor = this._bivec.exp();\r\n        if (this.cameraMode) {\r\n            rotor.mulsrconj(this.object.rotation).mulsl(this.object.rotation);\r\n            this.object.rotates(rotor);\r\n            this.object.position.rotates(rotor);\r\n        } else {\r\n            this.object.rotates(rotor);\r\n        }\r\n        if ((state.updateCount & this.normalisePeriodMask) === 0) {\r\n            this.object.rotation.norms();\r\n        }\r\n    }\r\n    lookAtCenter() {\r\n        // todo\r\n    }\r\n}\r\nexport class FreeFlyController implements IController {\r\n    enabled = true;\r\n    swapMouseYWithScrollY = false;\r\n    object = new Obj4();\r\n    mouseSpeed = 0.01;\r\n    wheelSpeed = 0.0005;\r\n    keyMoveSpeed = 0.001;\r\n    keyRotateSpeed = 0.001;\r\n    damp = 0.01;\r\n    constructor(object?: Obj4) {\r\n        if (object) this.object = object;\r\n    }\r\n    keyConfig = {\r\n        front: \"KeyW\",\r\n        back: \"KeyS\",\r\n        left: \"KeyA\",\r\n        right: \"KeyD\",\r\n        ana: \"KeyQ\",\r\n        kata: \"KeyE\",\r\n        up: \"Space\",\r\n        down: \"ShiftLeft\",\r\n        turnLeft: \"KeyJ\",\r\n        turnRight: \"KeyL\",\r\n        turnAna: \"KeyU\",\r\n        turnKata: \"KeyO\",\r\n        turnUp: \"KeyI\",\r\n        turnDown: \"KeyK\",\r\n        spinCW: \"KeyF|KeyZ\",\r\n        spinCCW: \"KeyH|KeyX\",\r\n        rollCW: \"KeyR\",\r\n        rollCCW: \"KeyY\",\r\n        pitchCW: \"KeyG\",\r\n        pitchCCW: \"KeyT\",\r\n        disable: \"AltLeft\",\r\n        enable: \"\",\r\n    }\r\n    /** how many update cycles (2^n) to normalise rotor to avoid accuracy problem */\r\n    normalisePeriodBit: 4;\r\n    private _bivec = new Bivec();\r\n    private _bivecKey = new Bivec();\r\n    private _moveVec = new Vec4();\r\n    private _vec = new Vec4();\r\n    private normalisePeriodMask = 15;\r\n\r\n    update(state: ControllerState) {\r\n        let on = state.isKeyHold;\r\n        let key = this.keyConfig;\r\n        let delta: number;\r\n        let dampFactor = Math.exp(-this.damp * Math.min(200.0, state.mspf));\r\n        let disabled = state.isKeyHold(this.keyConfig.disable) || !this.enabled;\r\n        if (!disabled) {\r\n\r\n            let keyRotateSpeed = this.keyRotateSpeed * state.mspf;\r\n            delta = (on(key.pitchCW) ? -1 : 0) + (on(key.pitchCCW) ? 1 : 0);\r\n            if (delta) this._bivecKey.yz = delta * keyRotateSpeed;\r\n            delta = (on(key.spinCW) ? -1 : 0) + (on(key.spinCCW) ? 1 : 0);\r\n            if (delta) this._bivecKey.xz = delta * keyRotateSpeed;\r\n            delta = (on(key.rollCW) ? -1 : 0) + (on(key.rollCCW) ? 1 : 0);\r\n            if (delta) this._bivecKey.xy = delta * keyRotateSpeed;\r\n            delta = (on(key.turnLeft) ? -1 : 0) + (on(key.turnRight) ? 1 : 0);\r\n            if (delta) this._bivecKey.xw = delta * keyRotateSpeed;\r\n            delta = (on(key.turnUp) ? 1 : 0) + (on(key.turnDown) ? -1 : 0);\r\n            if (delta) this._bivecKey.yw = delta * keyRotateSpeed;\r\n            delta = (on(key.turnAna) ? -1 : 0) + (on(key.turnKata) ? 1 : 0);\r\n            if (delta) this._bivecKey.zw = delta * keyRotateSpeed;\r\n        }\r\n        this._bivec.copy(this._bivecKey);\r\n        this._bivecKey.mulfs(dampFactor);\r\n        if (!disabled) {\r\n            if ((state.enablePointerLock && state.isPointerLocked()) || (state.currentBtn = 0 && !state.enablePointerLock)) {\r\n                let dx = state.moveX * this.mouseSpeed;\r\n                let dy = -state.moveY * this.mouseSpeed;\r\n                this._bivec.xw += dx;\r\n                if (this.swapMouseYWithScrollY) {\r\n                    this._bivec.yw += dy;\r\n                } else {\r\n                    this._bivec.zw -= dy;\r\n                }\r\n            }\r\n            if ((state.enablePointerLock && state.isPointerLocked()) || (!state.enablePointerLock)) {\r\n                let wx = state.wheelX * this.wheelSpeed;\r\n                let wy = state.wheelY * this.wheelSpeed;\r\n                this._bivec.xy += wx;\r\n                if (this.swapMouseYWithScrollY) {\r\n                    this._bivec.zw += wy;\r\n                } else {\r\n                    this._bivec.yw -= wy;\r\n                }\r\n            }\r\n            let keyMoveSpeed = this.keyMoveSpeed * state.mspf;\r\n            delta = (on(key.left) ? -1 : 0) + (on(key.right) ? 1 : 0);\r\n            if (delta) this._moveVec.x = delta * keyMoveSpeed;\r\n            delta = (on(key.up) ? 1 : 0) + (on(key.down) ? -1 : 0);\r\n            if (delta) this._moveVec.y = delta * keyMoveSpeed;\r\n            delta = (on(key.ana) ? -1 : 0) + (on(key.kata) ? 1 : 0);\r\n            if (delta) this._moveVec.z = delta * keyMoveSpeed;\r\n            delta = (on(key.front) ? -1 : 0) + (on(key.back) ? 1 : 0);\r\n            if (delta) this._moveVec.w = delta * keyMoveSpeed;\r\n        }\r\n        // R A = R A R-1 R \r\n        this.object.rotation.mulsr(this._bivec.exp());\r\n        this.object.translates(this._vec.copy(this._moveVec).rotates(this.object.rotation));\r\n        this._moveVec.mulfs(dampFactor);\r\n        if ((state.updateCount & this.normalisePeriodMask) === 0) {\r\n            this.object.rotation.norms();\r\n        }\r\n    }\r\n}\r\nexport class KeepUpController implements IController {\r\n    enabled = true;\r\n    object = new Obj4();\r\n    mouseSpeed = 0.01;\r\n    wheelSpeed = 0.0001;\r\n    keyMoveSpeed = 0.001;\r\n    keyRotateSpeed = 0.001;\r\n    damp = 0.05;\r\n    keyConfig = {\r\n        front: \"KeyW\",\r\n        back: \"KeyS\",\r\n        left: \"KeyA\",\r\n        right: \"KeyD\",\r\n        ana: \"KeyQ\",\r\n        kata: \"KeyE\",\r\n        up: \"Space\",\r\n        down: \"ShiftLeft\",\r\n        turnLeft: \"KeyJ\",\r\n        turnRight: \"KeyL\",\r\n        turnAna: \"KeyU\",\r\n        turnKata: \"KeyO\",\r\n        turnUp: \"KeyI\",\r\n        turnDown: \"KeyK\",\r\n        spinCW: \"KeyZ\",\r\n        spinCCW: \"KeyX\",\r\n        disable: \"AltLeft\",\r\n        enable: \"\"\r\n    }\r\n    /** how many update cycles (2^n) to normalise rotor to avoid accuracy problem */\r\n    normalisePeriodBit: 4;\r\n    private _bivec = new Bivec();\r\n    private _bivec2 = new Bivec();\r\n    private _bivecKey = new Bivec();\r\n    private _moveVec = new Vec4();\r\n    private _vec = new Vec4();\r\n    private normalisePeriodMask = 15;\r\n    private horizontalRotor = new Rotor();\r\n    private verticalRotor = new Rotor();\r\n\r\n    constructor(object?: Obj4) {\r\n        if (object) this.object = object;\r\n        this.updateObj();\r\n    }\r\n    updateObj() {\r\n        // rotate obj's yw plane to world's y axis\r\n        this.object.rotates(Rotor.lookAtvb(Vec4.y, Bivec.yw.rotate(this.object.rotation)).conjs());\r\n        // now check angle between obj's y axis and world's y axis\r\n        let objY = Vec4.y.rotate(this.object.rotation);\r\n        let r = Rotor.lookAt(objY, Vec4.y);\r\n        this.horizontalRotor.copy(r.mul(this.object.rotation));\r\n        this.verticalRotor.copy(this.horizontalRotor.mul(r.conjs()).mulsrconj(this.horizontalRotor));\r\n    }\r\n    update(state: ControllerState) {\r\n        let on = state.isKeyHold;\r\n        let key = this.keyConfig;\r\n        let delta: number;\r\n        let dampFactor = Math.exp(-this.damp * Math.min(200.0, state.mspf));\r\n        let disabled = state.isKeyHold(this.keyConfig.disable);\r\n        if (!this.enabled) return;\r\n        if (!disabled) {\r\n\r\n            let keyRotateSpeed = this.keyRotateSpeed * state.mspf;\r\n            delta = (on(key.spinCW) ? -1 : 0) + (on(key.spinCCW) ? 1 : 0);\r\n            if (delta) this._bivecKey.xz = delta * keyRotateSpeed;\r\n            delta = (on(key.turnLeft) ? -1 : 0) + (on(key.turnRight) ? 1 : 0);\r\n            if (delta) this._bivecKey.xw = delta * keyRotateSpeed;\r\n            delta = (on(key.turnUp) ? 1 : 0) + (on(key.turnDown) ? -1 : 0);\r\n            if (delta) this._bivecKey.yw = delta * keyRotateSpeed;\r\n            delta = (on(key.turnAna) ? -1 : 0) + (on(key.turnKata) ? 1 : 0);\r\n            if (delta) this._bivecKey.zw = delta * keyRotateSpeed;\r\n        }\r\n        this._bivec.xw = this._bivecKey.xw;\r\n        this._bivec.zw = this._bivecKey.zw;\r\n        if (!disabled) {\r\n            if ((state.enablePointerLock && state.isPointerLocked()) || (state.currentBtn === 0 && !state.enablePointerLock)) {\r\n                let dx = state.moveX * this.mouseSpeed;\r\n                let dy = state.moveY * this.mouseSpeed;\r\n                this._bivec.xw += dx;\r\n                this._bivec.zw += dy;\r\n            }\r\n            if ((state.enablePointerLock && state.isPointerLocked()) || (!state.enablePointerLock)) {\r\n                let wy = -state.wheelY * this.wheelSpeed;\r\n                this._bivecKey.yw += wy;\r\n            }\r\n        }\r\n        this._bivec.xz = this._bivecKey.xz;\r\n        this._bivec2.yw = this._bivecKey.yw;\r\n        // R A = R A R-1 R \r\n        this.horizontalRotor.mulsr(this._bivec.exp());\r\n        this.verticalRotor.mulsr(this._bivec2.exp());\r\n        if (!disabled) {\r\n            let keyMoveSpeed = this.keyMoveSpeed * state.mspf;\r\n            delta = (on(key.left) ? -1 : 0) + (on(key.right) ? 1 : 0);\r\n            if (delta) this._moveVec.x = delta * keyMoveSpeed;\r\n            delta = (on(key.up) ? 1 : 0) + (on(key.down) ? -1 : 0);\r\n            if (delta) this._moveVec.y = delta * keyMoveSpeed;\r\n            delta = (on(key.ana) ? -1 : 0) + (on(key.kata) ? 1 : 0);\r\n            if (delta) this._moveVec.z = delta * keyMoveSpeed;\r\n            delta = (on(key.front) ? -1 : 0) + (on(key.back) ? 1 : 0);\r\n            if (delta) this._moveVec.w = delta * keyMoveSpeed;\r\n        }\r\n        this.object.translates(this._vec.copy(this._moveVec).rotates(this.horizontalRotor));\r\n        this.object.rotation.copy(this.horizontalRotor.mul(this.verticalRotor));\r\n        this._moveVec.mulfs(dampFactor);\r\n        this._bivecKey.mulfs(dampFactor);\r\n        if ((state.updateCount & this.normalisePeriodMask) === 0) {\r\n            this.horizontalRotor.norms();\r\n            this.verticalRotor.norms();\r\n        }\r\n    }\r\n}\r\nexport class VoxelViewerController implements IController {\r\n    enabled = true;\r\n    object = new Obj4(Vec4.w.neg());\r\n    mouseSpeed = 0.01;\r\n    wheelSpeed = 0.0001;\r\n    damp = 0.1;\r\n    mousePan = 2;\r\n    mousePanZ = 1;\r\n    mouseRotate = 0;\r\n    /** how many update cycles (2^n) to normalise rotor to avoid accuracy problem */\r\n    normalisePeriodBit: 4;\r\n    keyConfig = {\r\n        disable: \"AltLeft\",\r\n        enable: \"\",\r\n    }\r\n    private _bivec = new Bivec();\r\n    private _vec = new Vec4();\r\n    private _wy = 0;\r\n    private normalisePeriodMask = 15;\r\n    constructor(object?: Obj4) {\r\n        if (object) this.object = object;\r\n    }\r\n    update(state: ControllerState) {\r\n        let disabled = state.isKeyHold(this.keyConfig.disable) || !this.enabled;\r\n        let dampFactor = Math.exp(-this.damp * Math.min(200.0, state.mspf));\r\n        if (!disabled) {\r\n            let dx = state.moveX * this.mouseSpeed;\r\n            let dy = -state.moveY * this.mouseSpeed;\r\n            let wy = state.wheelY * this.wheelSpeed;\r\n            switch (state.currentBtn) {\r\n                case this.mousePan:\r\n                    this._vec.set(dx * this.object.scale!.x, dy * this.object.scale!.y).rotates(this.object.rotation)\r\n                    this._bivec.set();\r\n                    break;\r\n                case this.mousePanZ:\r\n                    this._vec.set(dx * this.object.scale!.x, 0, -dy * this.object.scale!.z).rotates(this.object.rotation);\r\n                    this._bivec.set();\r\n                    break;\r\n                case this.mouseRotate:\r\n                    this._bivec.set(0, dx, 0, dy);\r\n                    this._vec.set();\r\n                    break;\r\n                default:\r\n                    this._bivec.mulfs(dampFactor);\r\n                    this._vec.mulfs(dampFactor);\r\n            }\r\n            this.object.position.subs(this._vec);\r\n            this._wy = wy ? wy : this._wy * dampFactor;\r\n            if (this.object.scale) this.object.scale.mulfs(1 + this._wy);\r\n        } else {\r\n            this._bivec.mulfs(dampFactor);\r\n            this._vec.mulfs(dampFactor);\r\n            this._wy *= dampFactor;\r\n        }\r\n        this.object.rotation.mulsr(this._bivec.exp());\r\n        if ((state.updateCount & this.normalisePeriodMask) === 0) {\r\n            this.object.rotation.norms();\r\n        }\r\n    }\r\n}\r\ninterface SectionPreset {\r\n    retina: boolean,\r\n    eye1: SectionConfig[],\r\n    eye2: SectionConfig[]\r\n}\r\nexport namespace sliceconfig {\r\n\r\n    export function singlezslice1eye(screenSize: { width: number, height: number }): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let resolution = screenSize.height;\r\n        return [{\r\n            slicePos: 0,\r\n            facing: RetinaSliceFacing.POSZ,\r\n            viewport: { x: 0, y: 0, width: 1 / aspect, height: 1.0 },\r\n            resolution\r\n        }];\r\n\r\n    }\r\n    export function singlezslice2eye(screenSize: { width: number, height: number }): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let resolution = screenSize.height * 0.8;\r\n        return [{\r\n            slicePos: 0,\r\n            facing: RetinaSliceFacing.POSZ,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: -0.5, y: 0, width: 0.5 / aspect, height: 0.8 },\r\n            resolution\r\n        }, {\r\n            slicePos: 0,\r\n            facing: RetinaSliceFacing.POSZ,\r\n            eyeStereo: EyeStereo.RightEye,\r\n            viewport: { x: 0.5, y: 0, width: 0.5 / aspect, height: 0.8 },\r\n            resolution\r\n        }];\r\n    }\r\n    export function singleyslice1eye(screenSize: { width: number, height: number }): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let resolution = screenSize.height;\r\n        return [{\r\n            slicePos: 0,\r\n            facing: RetinaSliceFacing.NEGY,\r\n            viewport: { x: 0, y: 0, width: 1 / aspect, height: 1.0 },\r\n            resolution\r\n        }];\r\n    }\r\n    export function singleyslice2eye(screenSize: { width: number, height: number }): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let resolution = screenSize.height * 0.8;\r\n        return [{\r\n            slicePos: 0,\r\n            facing: RetinaSliceFacing.NEGY,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: -0.5, y: 0, width: 0.5 / aspect, height: 0.8 },\r\n            resolution\r\n        }, {\r\n            slicePos: 0,\r\n            facing: RetinaSliceFacing.NEGY,\r\n            eyeStereo: EyeStereo.RightEye,\r\n            viewport: { x: 0.5, y: 0, width: 0.5 / aspect, height: 0.8 },\r\n            resolution\r\n        }];\r\n    }\r\n    export function zslices1eye(\r\n        step: number, maxpos: number, screenSize: { width: number, height: number }\r\n    ): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let arr = [[0, 0]];\r\n        let j = 1;\r\n        for (let i = step; i <= maxpos; i += step, j++) {\r\n            arr.push([i, j]);\r\n            arr.push([-i, -j]);\r\n        }\r\n        let half = 2 / arr.length;\r\n        let size = 1 / (aspect * arr.length);\r\n        let resolution = screenSize.height * size;\r\n        return arr.map(pos => ({\r\n            slicePos: pos[0],\r\n            facing: RetinaSliceFacing.POSZ,\r\n            viewport: { x: pos[1] * half, y: size - 1, width: size, height: size },\r\n            resolution\r\n        }));\r\n    }\r\n    export function zslices2eye(\r\n        step: number, maxpos: number, screenSize: { width: number, height: number }\r\n    ): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let arr = [[0, 0]];\r\n        let j = 1;\r\n        for (let i = step; i <= maxpos; i += step, j++) {\r\n            arr.push([i, j]);\r\n            arr.push([-i, -j]);\r\n        }\r\n        arr.sort((a, b) => a[0] - b[0]);\r\n        let half = 1 / arr.length;\r\n        let size = 0.5 / (aspect * arr.length);\r\n        let resolution = screenSize.height * size;\r\n        return arr.map(pos => ({\r\n            slicePos: pos[0],\r\n            facing: RetinaSliceFacing.POSZ,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: (pos[1] * half) - 0.5, y: size - 1, width: size, height: size },\r\n            resolution\r\n        })).concat(\r\n            arr.map(pos => ({\r\n                slicePos: pos[0],\r\n                facing: RetinaSliceFacing.POSZ,\r\n                eyeStereo: EyeStereo.RightEye,\r\n                viewport: { x: (pos[1] * half) + 0.5, y: size - 1, width: size, height: size },\r\n                resolution\r\n            }))\r\n        );\r\n    }\r\n\r\n    export function yslices1eye(\r\n        step: number, maxpos: number, screenSize: { width: number, height: number }\r\n    ): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let arr = [[0, 0]];\r\n        let j = 1;\r\n        for (let i = step; i <= maxpos; i += step, j++) {\r\n            arr.push([i, j]);\r\n            arr.push([-i, -j]);\r\n        }\r\n        let half = 2 / arr.length;\r\n        let size = 1 / (aspect * arr.length);\r\n        let resolution = screenSize.height * size;\r\n        return arr.map(pos => ({\r\n            slicePos: pos[0],\r\n            facing: RetinaSliceFacing.NEGY,\r\n            viewport: { x: pos[1] * half, y: size - 1, width: size, height: size },\r\n            resolution\r\n        }));\r\n    }\r\n    export function yslices2eye(\r\n        step: number, maxpos: number, screenSize: { width: number, height: number }\r\n    ): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let arr = [[0, 0]];\r\n        let j = 1;\r\n        for (let i = step; i <= maxpos; i += step, j++) {\r\n            arr.push([i, j]);\r\n            arr.push([-i, -j]);\r\n        }\r\n        arr.sort((a, b) => a[0] - b[0]);\r\n        let half = 1 / arr.length;\r\n        let size = 0.5 / (aspect * arr.length);\r\n        let resolution = screenSize.height * size;\r\n        return arr.map(pos => ({\r\n            slicePos: pos[0],\r\n            facing: RetinaSliceFacing.NEGY,\r\n            eyeStereo: EyeStereo.LeftEye,\r\n            viewport: { x: (pos[1] * half) - 0.5, y: size - 1, width: size, height: size },\r\n            resolution\r\n        })).concat(\r\n            arr.map(pos => ({\r\n                slicePos: pos[0],\r\n                facing: RetinaSliceFacing.NEGY,\r\n                eyeStereo: EyeStereo.RightEye,\r\n                viewport: { x: (pos[1] * half) + 0.5, y: size - 1, width: size, height: size },\r\n                resolution\r\n            }))\r\n        );\r\n    }\r\n    export function default2eye(\r\n        size: number, screenSize: { width: number, height: number }\r\n    ): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let resolution = screenSize.height * size;\r\n        let wsize: number;\r\n        let size_aspect: number;\r\n        if (size >= 0.5) {\r\n            wsize = 0.25 / aspect;\r\n            size_aspect = 0.25;\r\n            size = 0.5;\r\n        } else {\r\n            size_aspect = size * aspect;\r\n            wsize = size;\r\n        }\r\n        return [\r\n            {\r\n                facing: RetinaSliceFacing.NEGX,\r\n                eyeStereo: EyeStereo.LeftEye,\r\n                viewport: { x: -size_aspect, y: size - 1, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.NEGX,\r\n                eyeStereo: EyeStereo.RightEye,\r\n                viewport: { x: 1 - size_aspect, y: size - 1, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.NEGY,\r\n                eyeStereo: EyeStereo.LeftEye,\r\n                viewport: { x: -size_aspect, y: 1 - size, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.NEGY,\r\n                eyeStereo: EyeStereo.RightEye,\r\n                viewport: { x: 1 - size_aspect, y: 1 - size, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.POSZ,\r\n                eyeStereo: EyeStereo.LeftEye,\r\n                viewport: { x: size_aspect - 1, y: size - 1, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.POSZ,\r\n                eyeStereo: EyeStereo.RightEye,\r\n                viewport: { x: size_aspect, y: size - 1, width: wsize, height: size },\r\n                resolution\r\n            },\r\n        ];\r\n    };\r\n    export function default1eye(size: number, screenSize: { width: number, height: number }): SectionConfig[] {\r\n        let aspect = screenSize.height / screenSize.width;\r\n        let resolution = screenSize.height * size;\r\n        let wsize: number;\r\n        let size_aspect: number;\r\n        if (size >= 0.5) {\r\n            wsize = 0.5 / aspect;\r\n            size_aspect = 0.5;\r\n            size = 0.5;\r\n        } else {\r\n            size_aspect = size * aspect;\r\n            wsize = size;\r\n        }\r\n        return [\r\n            {\r\n                facing: RetinaSliceFacing.NEGX,\r\n                viewport: { x: 1 - size_aspect, y: size - 1, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.NEGY,\r\n                viewport: { x: 1 - size_aspect, y: 1 - size, width: wsize, height: size },\r\n                resolution\r\n            },\r\n            {\r\n                facing: RetinaSliceFacing.POSZ,\r\n                viewport: { x: size_aspect - 1, y: size - 1, width: wsize, height: size },\r\n                resolution\r\n            }\r\n        ];\r\n    }\r\n\r\n}\r\nconst retinaRenderPassDescriptors: RetinaRenderPassDescriptor[] = [\r\n    {},\r\n    {\r\n        alphaShader: {\r\n            code: `@group(1) @binding(0) var<uniform> alphaParams : vec4<f32>;\r\n            fn main(color:vec4<f32>, coord: vec3<f32>)->f32{\r\n                return color.a * (1.0 - smoothstep(alphaParams.x,alphaParams.y,dot(coord,coord))) * alphaParams.z;\r\n            }`, entryPoint: 'main'\r\n        }\r\n    }, {\r\n        alphaShader: {\r\n            code: `@group(1) @binding(0) var<uniform> alphaParams : vec4<f32>;\r\n            fn main(color:vec4<f32>, coord  : vec3<f32>)->f32{\r\n                return color.a * max(step(abs(coord.x),alphaParams.x)*step(abs(coord.y),alphaParams.x)*step(abs(coord.z),alphaParams.x)* alphaParams.y,alphaParams.z);\r\n            }`, entryPoint: 'main'\r\n        }\r\n    }, {\r\n        alphaShader: {\r\n            code: `@group(1) @binding(0) var<uniform> alphaParams : vec4<f32>;\r\n            fn main(color:vec4<f32>, coord: vec3<f32>)->f32{ \r\n                return color.a * max(step(dot(coord,alphaParams.xyz),0.0),alphaParams.w); \r\n            }`, entryPoint: 'main'\r\n        }\r\n    },\r\n];\r\nexport class RetinaController implements IController {\r\n    enabled = true;\r\n    renderer: SliceRenderer;\r\n    mouseSpeed = 0.01;\r\n    wheelSpeed = 0.0005;\r\n    keyMoveSpeed = 0.1;\r\n    keyRotateSpeed = 0.002;\r\n    opacityKeySpeed = 0.01;\r\n    fovKeySpeed = 1;\r\n    damp = 0.02;\r\n    mouseButton = 0;\r\n    retinaAlphaMouseButton = 2;\r\n    retinaEyeOffset = 0.1;\r\n    sectionEyeOffset = 0.2;\r\n    maxSectionEyeOffset = 1;\r\n    minSectionEyeOffset = 0.01;\r\n    size: GPUExtent3DStrict;\r\n    sectionPresets: (screenSize: GPUExtent3DStrict) => { [label: string]: SectionPreset };\r\n    private currentSectionConfig: string = \"retina+sections\";\r\n    private rembemerLastLayers: number;\r\n    private needResize: boolean = true;\r\n    private currentRetinaRenderPassIndex = -1;\r\n    keyConfig = {\r\n        enable: \"AltLeft\",\r\n        disable: \"\",\r\n        addOpacity: \"KeyQ\",\r\n        subOpacity: \"KeyA\",\r\n        addLayer: \"KeyW\",\r\n        subLayer: \"KeyS\",\r\n        addRetinaResolution: \".KeyE\",\r\n        subRetinaResolution: \".KeyD\",\r\n        addFov: \"KeyT\",\r\n        subFov: \"KeyG\",\r\n        toggle3D: \".KeyZ\",\r\n        addEyes3dGap: \"KeyB\",\r\n        subEyes3dGap: \"KeyV\",\r\n        addEyes4dGap: \"KeyM\",\r\n        subEyes4dGap: \"KeyN\",\r\n        negEyesGap: \".KeyX\",\r\n        toggleCrosshair: \".KeyC\",\r\n        rotateLeft: \"ArrowLeft\",\r\n        rotateRight: \"ArrowRight\",\r\n        rotateUp: \"ArrowUp\",\r\n        rotateDown: \"ArrowDown\",\r\n        refaceFront: \".KeyR\",\r\n        refaceRight: \".KeyL\",\r\n        refaceLeft: \".KeyJ\",\r\n        refaceTop: \".KeyI\",\r\n        refaceBottom: \".KeyK\",\r\n        toggleRetinaAlpha: \".KeyF\",\r\n        sectionConfigs: {\r\n            \"retina+sections\": \".Digit1\",\r\n            \"retina+bigsections\": \".Digit2\",\r\n            \"retina\": \".Digit3\",\r\n            \"sections\": \".Digit4\",\r\n            \"zsection\": \".Digit5\",\r\n            \"ysection\": \".Digit6\",\r\n            \"retina+zslices\": \".Digit7\",\r\n            \"retina+yslices\": \".Digit8\",\r\n        },\r\n    }\r\n    private alphaBuffer: GPUBuffer;\r\n    guiMouseOperation = \"\";\r\n    constructor(r: SliceRenderer) {\r\n        this.renderer = r;\r\n        const gui = new RetinaCtrlGui(this);\r\n        this.gui = gui;\r\n        document.body.appendChild(gui.dom);\r\n        this.defaultRetinaRenderPass = r.getCurrentRetinaRenderPass();\r\n        this.alphaBuffer = r.gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, 16, \"RetinaController's Retina Alpha Uniform Buffer\");\r\n        this.retinaRenderPasses = retinaRenderPassDescriptors.map((desc, index) => {\r\n            if (desc?.alphaShader?.code && desc.alphaShader.code.indexOf(\"@group(1)\") !== -1) desc.alphaShaderBindingResources = [{ buffer: this.alphaBuffer }];\r\n            // this jsBuffer uses first 4 elements to write to GPU, other elems are used for js state storage\r\n            const jsBuffer = new Float32Array(8);\r\n            switch (index) {\r\n                case 1:\r\n                    jsBuffer[4] = 1;\r\n                    jsBuffer[5] = 1;\r\n                    const r2 = jsBuffer[4] * jsBuffer[4];\r\n                    jsBuffer[0] = r2 / jsBuffer[5];\r\n                    jsBuffer[1] = r2 * jsBuffer[5];\r\n                    jsBuffer[2] = 4 / (1 + r2);\r\n                    break;\r\n                case 2:\r\n                    jsBuffer[0] = 0.5;\r\n                    jsBuffer[5] = 0;\r\n                    jsBuffer[1] = 2 - jsBuffer[0];\r\n                    jsBuffer[2] = jsBuffer[5];\r\n                    break;\r\n                case 3:\r\n                    jsBuffer[2] = 1;\r\n                    jsBuffer[3] = 0.01;\r\n            }\r\n            return { promise: r.createRetinaRenderPass(desc).init(), jsBuffer };\r\n        });\r\n        this.sectionPresets = (screenSize: { width: number; height: number; }) => ({\r\n            \"retina+sections\": {\r\n                eye1: sliceconfig.default1eye(0.3, screenSize),\r\n                eye2: sliceconfig.default2eye(0.2, screenSize),\r\n                retina: true\r\n            },\r\n            \"retina+bigsections\": {\r\n                eye1: sliceconfig.default1eye(0.44, screenSize),\r\n                eye2: sliceconfig.default2eye(0.33, screenSize),\r\n                retina: true\r\n            },\r\n            \"retina\": {\r\n                eye1: [],\r\n                eye2: [],\r\n                retina: true\r\n            },\r\n            \"sections\": {\r\n                eye1: sliceconfig.default1eye(0.5, screenSize),\r\n                eye2: sliceconfig.default2eye(0.5, screenSize),\r\n                retina: false\r\n            },\r\n            \"retina+zslices\": {\r\n                eye1: sliceconfig.zslices1eye(0.15, 0.6, screenSize),\r\n                eye2: sliceconfig.zslices2eye(0.3, 0.6, screenSize),\r\n                retina: true\r\n            },\r\n            \"retina+yslices\": {\r\n                eye1: sliceconfig.yslices1eye(0.15, 0.6, screenSize),\r\n                eye2: sliceconfig.yslices2eye(0.3, 0.6, screenSize),\r\n                retina: true\r\n            },\r\n            \"zsection\": {\r\n                eye1: sliceconfig.singlezslice1eye(screenSize),\r\n                eye2: sliceconfig.singlezslice2eye(screenSize),\r\n                retina: false\r\n            },\r\n            \"ysection\": {\r\n                eye1: sliceconfig.singleyslice1eye(screenSize),\r\n                eye2: sliceconfig.singleyslice2eye(screenSize),\r\n                retina: false\r\n            },\r\n        });\r\n    }\r\n    private _vec2damp = new Vec2();\r\n    private _vec2euler = new Vec2();\r\n    private _vec3 = new Vec3();\r\n    private _q1 = new Quaternion();\r\n    private _q2 = new Quaternion();\r\n    private _mat4 = new Mat4();\r\n    private refacingFront: boolean = false;\r\n    private refacingTarget = new Vec2;\r\n    private needsUpdateRetinaCamera: boolean = false;\r\n    private retinaFov: number = 40;\r\n    private retinaSize = 1.8;\r\n    private retinaZDistance = 5;\r\n    private crossHairSize = 0.03;\r\n    /** Store displayconfig temporal changes between frames */\r\n    private tempDisplayConfig: DisplayConfig = {};\r\n    private displayConfigChanged = false;\r\n    maxRetinaResolution = 1024;\r\n    private retinaRenderPasses: { promise: Promise<RetinaRenderPass>, jsBuffer: Float32Array }[];\r\n    private defaultRetinaRenderPass: RetinaRenderPass;\r\n    private gui: RetinaCtrlGui;\r\n\r\n    toggleRetinaAlpha(idx: number) {\r\n        const { promise, jsBuffer } = this.retinaRenderPasses[idx];\r\n        if (promise) {\r\n            promise.then(pass => {\r\n                this.renderer.gpu.device.queue.writeBuffer(this.alphaBuffer, 0, jsBuffer, 0, 4);\r\n                this.renderer.setRetinaRenderPass(pass);\r\n                this.gui?.refresh({ \"toggleRetinaAlpha\": idx });\r\n                this.currentRetinaRenderPassIndex = idx;\r\n            });\r\n        } else {\r\n            this.renderer.setRetinaRenderPass(this.defaultRetinaRenderPass);\r\n            this.gui?.refresh({ \"toggleRetinaAlpha\": idx });\r\n            this.currentRetinaRenderPassIndex = -1;\r\n        }\r\n    }\r\n    getSubLayersNumber(updateCount?: number) {\r\n        // when < 32, we slow down layer speed\r\n        let layers = this.renderer.getDisplayConfig('retinaLayers');\r\n        if (layers > 32 || ((updateCount & 3) && (layers > 16 || (updateCount & 7)))) {\r\n            if (layers > 0) layers--;\r\n        }\r\n        return layers;\r\n    }\r\n    getAddLayersNumber(updateCount?: number) {\r\n        let layers = this.renderer.getDisplayConfig('retinaLayers');\r\n        if (updateCount === undefined) return Math.min(512, layers + 1);\r\n        if (layers > 32 || ((updateCount & 3) && (layers > 16 || (updateCount & 7)))) {\r\n            layers++;\r\n        }\r\n        return Math.min(512, layers);\r\n    }\r\n    update(state: ControllerState): void {\r\n        let enabled = (!this.keyConfig.enable || state.isKeyHold(this.keyConfig.enable)) && this.enabled;\r\n        const on = (k: string) => state.isKeyHold(k) && enabled;\r\n        let key = this.keyConfig;\r\n        let delta: number;\r\n\r\n        // retreive all temporal changes before this frame\r\n        let displayConfig: DisplayConfig = this.tempDisplayConfig;\r\n        if (this.displayConfigChanged) this.tempDisplayConfig = {};\r\n        this.displayConfigChanged = false;\r\n\r\n        let stereo = this.renderer.getStereoMode();\r\n        if (on(this.keyConfig.toggle3D)) {\r\n            this.writeConfigToggleStereoMode(displayConfig, !stereo);\r\n            this.gui?.refresh({ \"toggleStereo\": !stereo });\r\n        } else if (this.needResize) {\r\n            displayConfig.sections = this.sectionPresets(this.renderer.getDisplayConfig(\"canvasSize\"))[this.currentSectionConfig][(\r\n                stereo ? \"eye2\" : \"eye1\"\r\n            )];\r\n        }\r\n        this.needResize = false;\r\n        if (stereo) {\r\n            if (on(this.keyConfig.addEyes3dGap)) {\r\n                this.retinaEyeOffset *= 1.05;\r\n                if (this.retinaEyeOffset > 0.4) this.retinaEyeOffset = 0.4;\r\n                if (this.retinaEyeOffset < -0.4) this.retinaEyeOffset = -0.4;\r\n                displayConfig.retinaStereoEyeOffset = this.retinaEyeOffset;\r\n                displayConfig.sectionStereoEyeOffset = this.sectionEyeOffset;\r\n            }\r\n            if (on(this.keyConfig.subEyes3dGap)) {\r\n                this.retinaEyeOffset /= 1.05;\r\n                if (this.retinaEyeOffset > 0 && this.retinaEyeOffset < 0.03) this.retinaEyeOffset = 0.03;\r\n                if (this.retinaEyeOffset < 0 && this.retinaEyeOffset > -0.03) this.retinaEyeOffset = -0.03;\r\n                displayConfig.retinaStereoEyeOffset = this.retinaEyeOffset;\r\n                displayConfig.sectionStereoEyeOffset = this.sectionEyeOffset;\r\n            }\r\n            if (on(this.keyConfig.addEyes4dGap)) {\r\n                this.sectionEyeOffset *= 1.05;\r\n                if (this.sectionEyeOffset > this.maxSectionEyeOffset) this.sectionEyeOffset = this.maxSectionEyeOffset;\r\n                if (this.sectionEyeOffset < -this.maxSectionEyeOffset) this.sectionEyeOffset = -this.maxSectionEyeOffset;\r\n                displayConfig.retinaStereoEyeOffset = this.retinaEyeOffset;\r\n                displayConfig.sectionStereoEyeOffset = this.sectionEyeOffset;\r\n            }\r\n            if (on(this.keyConfig.subEyes4dGap)) {\r\n                this.sectionEyeOffset /= 1.05;\r\n                if (this.sectionEyeOffset > 0 && this.sectionEyeOffset < this.minSectionEyeOffset) this.sectionEyeOffset = this.minSectionEyeOffset;\r\n                if (this.sectionEyeOffset < 0 && this.sectionEyeOffset > -this.minSectionEyeOffset) this.sectionEyeOffset = -this.minSectionEyeOffset;\r\n                displayConfig.retinaStereoEyeOffset = this.retinaEyeOffset;\r\n                displayConfig.sectionStereoEyeOffset = this.sectionEyeOffset;\r\n            }\r\n            if (this.guiMouseOperation === \"negEyesGap\" || on(this.keyConfig.negEyesGap)) {\r\n                this.sectionEyeOffset = -this.sectionEyeOffset;\r\n                this.retinaEyeOffset = -this.retinaEyeOffset;\r\n                displayConfig.retinaStereoEyeOffset = this.retinaEyeOffset;\r\n                displayConfig.sectionStereoEyeOffset = this.sectionEyeOffset;\r\n                this.gui?.refresh({ \"negEyesGap\": this.retinaEyeOffset > 0 || this.sectionEyeOffset > 0 });\r\n            }\r\n        }\r\n        if (on(this.keyConfig.toggleCrosshair)) {\r\n            this.writeConfigToggleCrosshair(displayConfig);\r\n        }\r\n        if (this.guiMouseOperation === \"opacitypBtn\" || on(this.keyConfig.addOpacity)) {\r\n            displayConfig.opacity = this.renderer.getDisplayConfig(\"opacity\") * (1 + this.opacityKeySpeed);\r\n        }\r\n        if (this.guiMouseOperation === \"opacitymBtn\" || on(this.keyConfig.subOpacity)) {\r\n            displayConfig.opacity = this.renderer.getDisplayConfig(\"opacity\") / (1 + this.opacityKeySpeed);\r\n        }\r\n        if (this.guiMouseOperation === \"layerpBtn\" || on(this.keyConfig.addLayer)) {\r\n            displayConfig.retinaLayers = this.getAddLayersNumber(state.updateCount);\r\n        }\r\n        if (this.guiMouseOperation === \"layermBtn\" || on(this.keyConfig.subLayer)) {\r\n            displayConfig.retinaLayers = this.getSubLayersNumber(state.updateCount);\r\n        }\r\n        if (this.guiMouseOperation === \"respBtn\" || on(this.keyConfig.addRetinaResolution)) {\r\n            this.guiMouseOperation = \"\";\r\n            let res = this.renderer.getDisplayConfig('retinaResolution');\r\n            res += this.renderer.getMinResolutionMultiple();\r\n            if (res <= this.maxRetinaResolution) displayConfig.retinaResolution = res;\r\n        }\r\n        if (this.guiMouseOperation === \"resmBtn\" || on(this.keyConfig.subRetinaResolution)) {\r\n            this.guiMouseOperation = \"\";\r\n            let res = this.renderer.getDisplayConfig('retinaResolution');\r\n            res -= this.renderer.getMinResolutionMultiple();\r\n            if (res > 0) displayConfig.retinaResolution = res;\r\n        }\r\n        if (this.guiMouseOperation === \"fovpBtn\" || on(this.keyConfig.addFov)) {\r\n            this.retinaFov += this.fovKeySpeed;\r\n            if (this.retinaFov > 120) this.retinaFov = 120;\r\n            this.needsUpdateRetinaCamera = true;\r\n        }\r\n        if (this.guiMouseOperation === \"fovmBtn\" || on(this.keyConfig.subFov)) {\r\n            this.retinaFov -= this.fovKeySpeed;\r\n            if (this.retinaFov < 0.1) this.retinaFov = 0;\r\n            this.needsUpdateRetinaCamera = true;\r\n        }\r\n        if (on(this.keyConfig.toggleRetinaAlpha)) {\r\n            this.currentRetinaRenderPassIndex++;\r\n            if (this.currentRetinaRenderPassIndex >= retinaRenderPassDescriptors.length) this.currentRetinaRenderPassIndex = 0;\r\n            this.toggleRetinaAlpha(this.currentRetinaRenderPassIndex);\r\n        }\r\n        if (enabled && state.currentBtn === this.retinaAlphaMouseButton && this.currentRetinaRenderPassIndex > 0) {\r\n            const { jsBuffer } = this.retinaRenderPasses[this.currentRetinaRenderPassIndex];\r\n            switch (this.currentRetinaRenderPassIndex) {\r\n                case 1:\r\n                    jsBuffer[4] += state.moveY * 0.01;\r\n                    jsBuffer[5] += state.moveX * 0.01;\r\n                    jsBuffer[4] = Math.max(0.01, Math.min(jsBuffer[4], _SQRT_3));\r\n                    jsBuffer[5] = Math.max(1, Math.min(jsBuffer[5], 5));\r\n                    const r2 = jsBuffer[4] * jsBuffer[4];\r\n                    jsBuffer[0] = r2 / jsBuffer[5];\r\n                    jsBuffer[1] = r2 * jsBuffer[5];\r\n                    jsBuffer[2] = 4 / (1 + r2);\r\n                    break;\r\n                case 2:\r\n                    jsBuffer[0] += state.moveY * 0.01;\r\n                    jsBuffer[5] += state.moveX * 0.01;\r\n                    jsBuffer[0] = Math.max(0.01, Math.min(jsBuffer[0], 1));\r\n                    jsBuffer[5] = Math.max(0, Math.min(jsBuffer[5], 0.1));\r\n                    jsBuffer[1] = 2 - jsBuffer[0];\r\n                    jsBuffer[2] = jsBuffer[5];\r\n                    break;\r\n                case 3:\r\n                    let n = new Vec3(jsBuffer[0], jsBuffer[1], jsBuffer[2]).norms();\r\n                    // n.rotates(new Vec3(state.moveY, state.moveX).mulfs(0.01).exp());\r\n                    let y = Math.acos(n.y) + state.moveX * 0.01;\r\n                    let x = Math.atan2(n.z, n.x) + state.moveY * 0.01;\r\n                    const sy = Math.sin(y);\r\n                    n.set(Math.cos(x) * sy, Math.cos(y), Math.sin(x) * sy);\r\n                    n.writeBuffer(jsBuffer);\r\n            }\r\n            this.renderer.gpu.device.queue.writeBuffer(this.alphaBuffer, 0, jsBuffer, 0, 4);\r\n        }\r\n        for (let [label, keyCode] of Object.entries(this.keyConfig.sectionConfigs)) {\r\n            if (on(keyCode)) {\r\n                this.toggleSectionConfig(label);\r\n            }\r\n        }\r\n        delta = (on(key.rotateDown) ? -1 : 0) + (on(key.rotateUp) ? 1 : 0);\r\n        let keyRotateSpeed = this.keyRotateSpeed * state.mspf;\r\n        if (delta) this._vec2damp.y = delta * keyRotateSpeed;\r\n        delta = (on(key.rotateLeft) ? 1 : 0) + (on(key.rotateRight) ? -1 : 0);\r\n        if (delta) this._vec2damp.x = delta * keyRotateSpeed;\r\n        if (enabled) {\r\n            if (state.currentBtn === this.mouseButton) {\r\n                this.refacingFront = false;\r\n                if (state.moveX) this._vec2damp.x = state.moveX * this.mouseSpeed;\r\n                if (state.moveY) this._vec2damp.y = state.moveY * this.mouseSpeed;\r\n            }\r\n            if (state.wheelY) {\r\n                this.needsUpdateRetinaCamera = true;\r\n                this.retinaSize += state.wheelY * this.wheelSpeed;\r\n            }\r\n        }\r\n        if (on(key.refaceFront)) {\r\n            this.refacingFront = true;\r\n            this.refacingTarget.set();\r\n        } else if (on(key.refaceRight)) {\r\n            this.refacingFront = true;\r\n            this.refacingTarget.set(_90, 0);\r\n        } else if (on(key.refaceTop)) {\r\n            this.refacingFront = true;\r\n            this.refacingTarget.set(0, -_90);\r\n        } else if (on(key.refaceLeft)) {\r\n            this.refacingFront = true;\r\n            this.refacingTarget.set(-_90, 0);\r\n        } else if (on(key.refaceBottom)) {\r\n            this.refacingFront = true;\r\n            this.refacingTarget.set(0, _90);\r\n        }\r\n\r\n        if (this._vec2damp.norm1() < 1e-3 || this.refacingFront) {\r\n            this._vec2damp.set(0, 0);\r\n        }\r\n        if (this._vec2damp.norm1() > 1e-3 || this.refacingFront || this.needsUpdateRetinaCamera) {\r\n            if (this.needsUpdateRetinaCamera) {\r\n                if (this.retinaFov > 0) {\r\n                    this.retinaZDistance = this.retinaSize / Math.tan(this.retinaFov / 2 * _DEG2RAD);\r\n                    displayConfig.camera3D = {\r\n                        fov: this.retinaFov,\r\n                        near: Math.max(0.01, this.retinaZDistance - 4),\r\n                        far: this.retinaZDistance + 4\r\n                    };\r\n                } else {\r\n                    this.retinaZDistance = 4;\r\n                    displayConfig.camera3D = {\r\n                        size: this.retinaSize,\r\n                        near: 2,\r\n                        far: 8\r\n                    };\r\n                }\r\n            }\r\n            this.needsUpdateRetinaCamera = false;\r\n            this._vec2euler.x %= _360;\r\n            this._vec2euler.y %= _360;\r\n            let dampFactor = Math.exp(-this.damp * Math.min(200.0, state.mspf));\r\n            if (this.refacingFront) {\r\n                this._vec2euler.subs(this.refacingTarget).mulfs(dampFactor);\r\n                if (this._vec2euler.norm1() < 0.01) this.refacingFront = false;\r\n                this._vec2euler.adds(this.refacingTarget);\r\n            }\r\n            this._vec2euler.adds(this._vec2damp);\r\n            let mat = this._mat4.setFrom3DRotation(this._q1.expset(this._vec3.set(0, this._vec2euler.x, 0)).mulsr(\r\n                this._q2.expset(this._vec3.set(this._vec2euler.y, 0, 0))\r\n            ).conjs());\r\n            mat.elem[11] = -this.retinaZDistance;\r\n            displayConfig.retinaViewMatrix = mat;\r\n            this._vec2damp.mulfs(dampFactor);\r\n        }\r\n        this.renderer.setDisplayConfig(displayConfig);\r\n    }\r\n    private writeConfigToggleStereoMode(dstConfig: DisplayConfig, stereo?: boolean) {\r\n        stereo ??= !this.renderer.getStereoMode();\r\n        if (!stereo) {\r\n            dstConfig.retinaStereoEyeOffset = 0;\r\n            dstConfig.sectionStereoEyeOffset = 0;\r\n        } else {\r\n            dstConfig.retinaStereoEyeOffset = this.retinaEyeOffset;\r\n            dstConfig.sectionStereoEyeOffset = this.sectionEyeOffset;\r\n        }\r\n        dstConfig.sections = this.sectionPresets(this.renderer.getDisplayConfig(\"canvasSize\"))[this.currentSectionConfig][(\r\n            stereo ? \"eye2\" : \"eye1\"\r\n        )];\r\n    }\r\n    toggleStereo(stereo?: boolean) {\r\n        this.gui?.refresh({ \"toggleStereo\": stereo || !this.renderer.getStereoMode() });\r\n        this.writeConfigToggleStereoMode(this.tempDisplayConfig, stereo);\r\n        this.displayConfigChanged = true;\r\n    }\r\n    private writeConfigToggleCrosshair(dstConfig: DisplayConfig, size?: number) {\r\n        if (!size) {\r\n            let crossHair = this.renderer.getDisplayConfig('crosshair');\r\n            dstConfig.crosshair = crossHair === 0 ? this.crossHairSize : 0;\r\n        } else {\r\n            dstConfig.crosshair = size;\r\n            this.crossHairSize = size;\r\n        }\r\n    }\r\n    toggleCrosshair() {\r\n        this.writeConfigToggleCrosshair(this.tempDisplayConfig);\r\n        this.displayConfigChanged = true;\r\n    }\r\n    setSectionEyeOffset(offset: number) {\r\n        let stereo = this.renderer.getStereoMode();\r\n        this.sectionEyeOffset = offset;\r\n        if (stereo) { this.tempDisplayConfig.sectionStereoEyeOffset = offset; this.displayConfigChanged = true; }\r\n    }\r\n    setRetinaEyeOffset(offset: number) {\r\n        let stereo = this.renderer.getStereoMode();\r\n        this.retinaEyeOffset = offset;\r\n        if (stereo) { this.tempDisplayConfig.retinaStereoEyeOffset = offset; this.displayConfigChanged = true; }\r\n    }\r\n    setLayers(layers: number) {\r\n        this.tempDisplayConfig.retinaLayers = layers;\r\n        this.displayConfigChanged = true;\r\n    }\r\n    setOpacity(opacity: number) {\r\n        this.tempDisplayConfig.opacity = opacity;\r\n        this.displayConfigChanged = true;\r\n    }\r\n    setCrosshairSize(size: number) {\r\n        this.tempDisplayConfig.crosshair = size;\r\n        this.crossHairSize = size;\r\n        this.displayConfigChanged = true;\r\n    }\r\n    setRetinaResolution(retinaResolution: number) {\r\n        this.tempDisplayConfig.retinaResolution = retinaResolution;\r\n        this.displayConfigChanged = true;\r\n    }\r\n    setRetinaSize(size: number) {\r\n        this.retinaSize = size;\r\n        this.needsUpdateRetinaCamera = true;\r\n    }\r\n    setRetinaFov(fov: number) {\r\n        this.retinaFov = fov;\r\n        this.needsUpdateRetinaCamera = true;\r\n    }\r\n    toggleSectionConfig(index: string) {\r\n        if (this.currentSectionConfig === index) return;\r\n        let preset = this.sectionPresets(this.renderer.getDisplayConfig(\"canvasSize\"))[index];\r\n        if (!preset) console.error(`Section Configuration \"${index}\" does not exsit.`);\r\n        let layers = this.renderer.getDisplayConfig(\"retinaLayers\");\r\n        if (preset.retina === false && layers > 0) {\r\n            this.rembemerLastLayers = layers;\r\n            layers = 0;\r\n        } else if (preset.retina === true && this.rembemerLastLayers) {\r\n            layers = this.rembemerLastLayers;\r\n            this.rembemerLastLayers = null;\r\n        }\r\n        let stereo = this.renderer.getStereoMode();\r\n        let sections = preset[(\r\n            stereo ? \"eye2\" : \"eye1\"\r\n        )];\r\n        this.displayConfigChanged = true;\r\n        this.tempDisplayConfig.retinaLayers = layers;\r\n        this.tempDisplayConfig.sections = sections;\r\n        this.currentSectionConfig = index;\r\n        this.gui?.refresh({ \"toggleSectionConfig\": index });\r\n    }\r\n    setSize(size: GPUExtent3DStrict) {\r\n        this.tempDisplayConfig.canvasSize = size;\r\n        this.displayConfigChanged = true;\r\n        this.needResize = true;\r\n    }\r\n}\r\n\r\nexport class RetinaCtrlGui {\r\n    controller: RetinaController;\r\n    dom: HTMLDivElement;\r\n    iconSize = 32;\r\n    refresh: (param: any) => void;\r\n    createToggleDiv(CtrlBtn: HTMLButtonElement, display: string = \"\") {\r\n        const div = document.createElement(\"div\");\r\n        div.style.display = \"none\";\r\n        CtrlBtn.addEventListener(\"click\", () => {\r\n            div.style.display = div.style.display === \"none\" ? display : \"none\";\r\n        });\r\n        return div;\r\n    }\r\n    createDropBox(CtrlBtn: HTMLButtonElement, offset: number, width: number = 1) {\r\n        const div = this.createToggleDiv(CtrlBtn);\r\n        div.style.position = \"absolute\";\r\n        div.className = \"retina-ctrl-gui\"\r\n        div.style.width = this.iconSize * width + \"px\";\r\n        div.style.top = this.iconSize + \"px\";\r\n        div.style.left = this.iconSize * offset + \"px\";\r\n        return div;\r\n    }\r\n    toggle() {\r\n        this.dom.style.display = this.dom.style.display === \"none\" ? \"\" : \"none\";\r\n    }\r\n    constructor(retinaCtrl: RetinaController) {\r\n        this.controller = retinaCtrl;\r\n        this.dom = document.createElement(\"div\");\r\n        this.dom.style.position = \"fixed\";\r\n        this.dom.style.top = \"50vh\";\r\n        this.dom.style.right = \"0\";\r\n        document.body.appendChild(this.dom);\r\n\r\n        // write gui and set size event\r\n\r\n        const SVG_HEADER = `<svg xmlns='http://www.w3.org/2000/svg' viewBox='`;\r\n        const SVG_LINE = `style=\"fill:none;stroke:#FFF;stroke-width:0.25;\"`;\r\n        const SVG_PLUS = `<text x=\"1.5\" y=\"3.5\" stroke=\"#F00\" style=\"font-size:3px\">+</text>`;\r\n        const SVG_MINUS = `<text x=\"2\" y=\"3.5\" stroke=\"#F00\" style=\"font-size:3px\">-</text>`;\r\n        const SVG_RETINA = `<path d=\"M 1.3,3.3 2.5,4 4.1,3.6 V 2 L 2.9,1.3 1.3,1.7 Z\"/>`;\r\n        const SVG_CHECKER = `${SVG_HEADER}0 0 5 5'><g style=\"fill:#FFF\"><rect width=\"1\" height=\"1\" x=\"0.5\" y=\"0.5\"/><rect width=\"1\" height=\"1\" x=\"2.5\" y=\"0.5\"/><rect width=\"1\" height=\"1\" x=\"1.5\" y=\"1.5\"/><rect width=\"1\" height=\"1\" x=\"3.5\" y=\"1.5\"/><rect width=\"1\" height=\"1\" x=\"0.5\" y=\"2.5\"/><rect width=\"1\" height=\"1\" x=\"2.5\" y=\"2.5\"/><rect width=\"1\" height=\"1\" x=\"1.5\" y=\"3.5\"/><rect width=\"1\" height=\"1\" x=\"3.5\" y=\"3.5\"/>`;\r\n        const SVG_CAM = `${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><circle cx=\"0.77\" cy=\"1.57\" r=\"0.4\"/><rect width=\"2.36\" height=\"1.6\" x=\"0.39\" y=\"2.15\"/><circle cx=\"1.9\" cy=\"1.35\" r=\"0.66\"/><path d=\"M 2.74,2.48 4.89,1\"/><path d=\"m 2.77,3.27 2.16,1.4\"/><path d=\"m 4.46,1.9 c 0.23,0.65 0.28,1.3 0.03,1.9\"/><path d=\"M 4.24,2.4 4.36,1.7 4.9,2.18\"/><path d=\"M 4.23,3.2 4.41,3.9 5,3.4\"/>`;\r\n        const mainBtn = this.addBtn(`${SVG_HEADER}0.6 0.5 4.5 4.5'><g ${SVG_LINE}><path d=\"M 1.9,4.53 1.4,4.24 1.51,3.73 C 1.43,3.65 1.36,3.56 1.3,3.46 L 0.77,3.43 0.62,2.87 1.07,2.58 C 1.07,2.47 1.08,2.36 1.11,2.25 L 0.76,1.84 1.05,1.34 1.56,1.45 C 1.64,1.37 1.73,1.3 1.83,1.24 L 1.86,0.71 2.42,0.56 2.71,1 c 0.11,0 0.23,0.02 0.34,0.04 L 3.45,0.7 3.95,0.99 3.84,1.5 c 0.08,0.08 0.15,0.17 0.21,0.27 l 0.53,0.03 0.15,0.56 -0.44,0.3 c 0,0.11 -0.02,0.23 -0.04,0.34 L 4.59,3.37 4.3,3.88 3.79,3.77 C 3.7,3.85 3.61,3.91 3.52,3.97 L 3.48,4.5 2.92,4.65 2.63,4.21 C 2.53,4.2 2.41,4.19 2.3,4.16 Z\"/><circle cx=\"2.67\" cy=\"2.62\" r=\"1\"/></g></svg>`);\r\n        const crossppl1Btn = this.addBtn(`${SVG_HEADER}0.6 0.5 4.5 4.5'><g ${SVG_LINE}><path d=\"M 1.22,1.68 V 3.764 L 2.83,4.644 4.472,3.715 V 1.715 L 2.81,0.8 Z M 1.55,1.86 2.86,2.61 V 4.31 M 2.86,2.61 4.16,1.86\"/></g></svg>`);\r\n        const crossppl2Btn = this.addBtn(`${SVG_HEADER}0.6 0.5 4.5 4.5'><g ${SVG_LINE}><circle cx=\"2.69\" cy=\"2.6\" r=\"2\"/><path d=\"m 0.69,2.6 c 0.002,1.28 4,1.28 4,0.014\"/><path style=\"stroke-dasharray:0.2, 0.2;\" d=\"M 0.68,2.6 C 0.71,1.45 4.68,1.5 4.7,2.63\"/></g></svg>`);\r\n        const crossppl3Btn = this.addBtn(`${SVG_HEADER}0.6 0.5 4.5 4.5'><g style=\"fill:none;stroke:#FFF;stroke-width:0.4;\"><path transform=\"scale(0.6) translate(1.8,1.8)\" d=\"M 1.22,1.68 V 3.764 L 2.83,4.644 4.472,3.715 V 1.715 L 2.81,0.8 Z M 1.55,1.86 2.86,2.61 V 4.31 M 2.86,2.61 4.16,1.86\"/></g></svg>`);\r\n        const crossppl4Btn = this.addBtn(`${SVG_HEADER}0.6 0.5 4.5 4.5'><g ${SVG_LINE}><path d=\"M 1.19,3.49 2.85,4.45 4.42,3.55 V 1.57 L 2.77,0.63 1.19,1.52 Z M 2,1.12 3.45,1.05 4.4,2.62 3.65,3.94 1.98,3.92 1.23,2.74 1.95,1.1\"/></g></svg>`);\r\n        const crosshairBtn = this.addBtn(`${SVG_HEADER}0.6 0.5 4.5 4.5'><g ${SVG_LINE}><path d=\"m 2.62,1 v 3.37 M 1.56,4 3.56,1.47 M 0.9,2.7 H 4.23\"/></g></svg>`);\r\n        const stereoBtn = this.addBtn(`${SVG_HEADER}0.5 0.3 4.5 4.5'><g ${SVG_LINE}><path d=\"M 0.563,2.636 C 2.33,1 3.24,1.22 4.74,2.76 2.99,3.96 1.676,3.73 0.564,2.637 Z\"/><circle cx=\"2.6\" cy=\"2.5\" r=\"0.9\"/><circle cx=\"2.6\" cy=\"2.5\" r=\"0.54\"/></g></svg>`);\r\n        const settingBtn = this.addBtn(`${SVG_HEADER}0.5 0.3 4.5 4.5'><g id=\"g1\" ${SVG_LINE}><path d=\"M 1.3,3.4 V 4.8 M 1.77,3.4 V 4.8 M 1.3,0.4 V 2.8 M 1.77,0.4 V 2.8\"/><rect width=\"1.7\" height=\"0.4\" x=\"0.63\" y=\"3.04\"/></g><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#g1\" transform=\"rotate(180,2.65,2.59)\"/></svg>`);\r\n        const slicecfg1Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}>${SVG_RETINA}<rect width=\"1.2\" height=\"1.2\" x=\"0.6\" y=\"3.6\"/><rect width=\"1.2\" height=\"1.2\" x=\"3.5\" y=\"3.6\"/><rect width=\"1.2\" height=\"1.2\" x=\"3.5\" y=\"0.5\"/></g></svg>`);\r\n        const slicecfg2Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}>${SVG_RETINA}<rect width=\"1.7\" height=\"1.7\" x=\"0.6\" y=\"2.8\"/><rect width=\"1.7\" height=\"1.7\" x=\"2.9\" y=\"2.8\"/><rect width=\"1.7\" height=\"1.7\" x=\"2.9\" y=\"0.5\"/></g></svg>`);\r\n        const slicecfg3Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}>${SVG_RETINA}</g></svg>`);\r\n        const slicecfg4Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect width=\"2\" height=\"2\" x=\"0.6\" y=\"2.5\"/><rect width=\"2\" height=\"2\" x=\"2.6\" y=\"2.5\"/><rect width=\"2\" height=\"2\" x=\"2.6\" y=\"0.5\"/></g></svg>`);\r\n        const slicecfg5Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect width=\"4\" height=\"4\" x=\"0.6\" y=\"0.6\"/><text x=\"1.5\" y=\"3.5\" stroke=\"#0F0\" style=\"font-size:3px\">Y</text></g></svg>`);\r\n        const slicecfg6Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect width=\"4\" height=\"4\" x=\"0.6\" y=\"0.6\"/><text x=\"1.5\" y=\"3.5\" stroke=\"#00F\" style=\"font-size:3px\">Z</text></g></svg>`);\r\n        const slicecfg7Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}>${SVG_RETINA}<rect width=\"1\" height=\"1\" x=\"0.6\" y=\"3\"/><rect width=\"1\" height=\"1\" x=\"1.6\" y=\"3\"/><rect width=\"1\" height=\"1\" x=\"2.6\" y=\"3\"/><rect width=\"1\" height=\"1\" x=\"3.6\" y=\"3\"/><text x=\"1.5\" y=\"3.5\" stroke=\"#0F0\" style=\"font-size:3px\">Y</text></g></svg>`);\r\n        const slicecfg8Btn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}>${SVG_RETINA}<rect width=\"1\" height=\"1\" x=\"0.6\" y=\"3\"/><rect width=\"1\" height=\"1\" x=\"1.6\" y=\"3\"/><rect width=\"1\" height=\"1\" x=\"2.6\" y=\"3\"/><rect width=\"1\" height=\"1\" x=\"3.6\" y=\"3\"/><text x=\"1.5\" y=\"3.5\" stroke=\"#00F\" style=\"font-size:3px\">Z</text></g></svg>`);\r\n        const layerpBtn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect id=\"r\" width=\"1.8\" height=\"2.3\" x=\"2.7\" y=\"2.94\" transform=\"matrix(0.95,-0.3,0,1,0,0)\"/><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#r\" id=\"u\" transform=\"translate(-0.6,-0.4)\"/><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#u\" transform=\"translate(-0.6,-0.4)\"/>${SVG_PLUS}</g></svg>`);\r\n        const layermBtn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect id=\"r\" width=\"1.8\" height=\"2.3\" x=\"2.7\" y=\"2.94\" transform=\"matrix(0.95,-0.3,0,1,0,0)\"/><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#r\" id=\"u\" transform=\"translate(-0.6,-0.4)\"/><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#u\" transform=\"translate(-0.6,-0.4)\"/>${SVG_MINUS}</g></svg>`);\r\n        const opacitypBtn = this.addBtn(`${SVG_CHECKER}<text x=\"1.5\" y=\"3.5\" style=\"font-size:3px;stroke:#F00;stroke-width:0.25\">+</text></g></svg>`);\r\n        const opacitymBtn = this.addBtn(`${SVG_CHECKER}<text x=\"2\" y=\"3.5\" style=\"font-size:3px;stroke:#F00;stroke-width:0.25\">-</text></g></svg>`);\r\n        const fovpBtn = this.addBtn(`${SVG_CAM}${SVG_PLUS}</g></svg>`);\r\n        const fovmBtn = this.addBtn(`${SVG_CAM}${SVG_MINUS}</g></svg>`);\r\n        const respBtn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect width=\"4.6\" height=\"2.93\" x=\"0.33\" y=\"0.9\"/><path d=\"M 2.44,3.844 1.62,4.78 H 3.77 L 3.03,3.84\"/><circle cx=\"1.86\" cy=\"2.4\" r=\"1.05\"/><rect width=\"1.63\" height=\"0.48\" x=\"3.38\" y=\"1.7\" transform=\"rotate(12.5)\"/><path d=\"M 1.075,1.825H 1.6 V 2.1 H 1.9 V 2.5 H 2.3 V 3.07 H 2.5\"/>${SVG_PLUS}</g></svg>`);\r\n        const resmBtn = this.addBtn(`${SVG_HEADER}0 0 5 5'><g ${SVG_LINE}><rect width=\"4.6\" height=\"2.93\" x=\"0.33\" y=\"0.9\"/><path d=\"M 2.44,3.844 1.62,4.78 H 3.77 L 3.03,3.84\"/><circle cx=\"1.86\" cy=\"2.4\" r=\"1.05\"/><rect width=\"1.63\" height=\"0.48\" x=\"3.38\" y=\"1.7\" transform=\"rotate(12.5)\"/><path d=\"M 1.075,1.825H 1.6 V 2.1 H 1.9 V 2.5 H 2.3 V 3.07 H 2.5\"/>${SVG_MINUS}</g></svg>`);\r\n        const eyeModeCrossBtn = this.addBtn(`${SVG_HEADER}0.5 0.3 4.5 4.5'><g ${SVG_LINE}><circle cx=\"2\" cy=\"4\" r=\"0.3\"/><circle cx=\"3.2\" cy=\"4\" r=\"0.3\"/><path d=\"M 2,3.4 3,1 M 3.2,3.4 2.2,1\"/></g></svg>`);\r\n        const eyeModeParaBtn = this.addBtn(`${SVG_HEADER}0.5 0.3 4.5 4.5'><g ${SVG_LINE}><circle cx=\"2\" cy=\"4\" r=\"0.3\"/><circle cx=\"3.2\" cy=\"4\" r=\"0.3\"/><path d=\"M 2,3.4 1.8,1 M 3.2,3.4 3.4,1\"/></g></svg>`);\r\n        eyeModeCrossBtn.style.position = \"absolute\";\r\n        eyeModeParaBtn.style.position = \"absolute\";\r\n        eyeModeCrossBtn.style.left = \"-32px\";\r\n        eyeModeParaBtn.style.left = \"-32px\";\r\n        const mainBar = this.createToggleDiv(mainBtn, \"inline-block\");\r\n        let drag = NaN;\r\n        let startPos: number;\r\n        let enableKeycode: string;\r\n        mainBtn.addEventListener('mousedown', (e) => {\r\n            drag = e.clientY;\r\n            startPos = Number(this.dom.style.top.replace(\"vh\", \"\")) / 100 * window.innerHeight;\r\n        });\r\n        mainBtn.addEventListener('mouseenter', () => {\r\n            if (enableKeycode != retinaCtrl.keyConfig.enable) {\r\n                this.refresh({ \"enableKeyCode\": retinaCtrl.keyConfig.enable });\r\n            }\r\n        });\r\n        mainBtn.addEventListener('mousemove', (e) => {\r\n            if (!drag) return;\r\n\r\n            const currPos = startPos + e.clientY - drag;\r\n            this.dom.style.top = currPos / window.innerHeight * 100 + \"vh\";\r\n        });\r\n        mainBtn.addEventListener('mouseup', () => { drag = NaN; });\r\n        mainBtn.addEventListener('mouseout', () => { drag = NaN; });\r\n\r\n\r\n        this.dom.appendChild(mainBar);\r\n\r\n        mainBar.appendChild(eyeModeCrossBtn);\r\n        mainBar.appendChild(eyeModeParaBtn);\r\n        eyeModeCrossBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"negEyesGap\");\r\n        eyeModeParaBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"negEyesGap\");\r\n\r\n        stereoBtn.addEventListener('click', () => retinaCtrl.toggleStereo());\r\n        mainBar.appendChild(stereoBtn);\r\n\r\n        const slicecfgPlaceholder = document.createElement(\"span\");\r\n        slicecfgPlaceholder.className = \"slicecfg\";\r\n        mainBar.appendChild(slicecfgPlaceholder);\r\n        let slicecfgPlaceholderBtn = slicecfg1Btn.cloneNode(true) as HTMLButtonElement;\r\n        slicecfgPlaceholder.appendChild(slicecfgPlaceholderBtn);\r\n        const slicecfgBar = this.createDropBox(slicecfgPlaceholderBtn, 0, 2);\r\n        slicecfgPlaceholder.appendChild(slicecfgBar);\r\n        slicecfgBar.appendChild(slicecfg1Btn);\r\n        slicecfgBar.appendChild(slicecfg2Btn);\r\n        slicecfgBar.appendChild(slicecfg3Btn);\r\n        slicecfgBar.appendChild(slicecfg4Btn);\r\n        slicecfgBar.appendChild(slicecfg5Btn);\r\n        slicecfgBar.appendChild(slicecfg6Btn);\r\n        slicecfgBar.appendChild(slicecfg7Btn);\r\n        slicecfgBar.appendChild(slicecfg8Btn);\r\n        const slicecfgBtnFn = function () {\r\n            slicecfgPlaceholderBtn.style.backgroundImage = this.style.backgroundImage;\r\n            retinaCtrl.toggleSectionConfig(this.name);\r\n        }\r\n        slicecfg1Btn.addEventListener('click', slicecfgBtnFn); slicecfg1Btn.name = \"retina+sections\";\r\n        slicecfg2Btn.addEventListener('click', slicecfgBtnFn); slicecfg2Btn.name = \"retina+bigsections\"\r\n        slicecfg3Btn.addEventListener('click', slicecfgBtnFn); slicecfg3Btn.name = \"retina\";\r\n        slicecfg4Btn.addEventListener('click', slicecfgBtnFn); slicecfg4Btn.name = \"sections\";\r\n        slicecfg5Btn.addEventListener('click', slicecfgBtnFn); slicecfg5Btn.name = \"zsection\";\r\n        slicecfg6Btn.addEventListener('click', slicecfgBtnFn); slicecfg6Btn.name = \"ysection\";\r\n        slicecfg7Btn.addEventListener('click', slicecfgBtnFn); slicecfg7Btn.name = \"retina+zslices\";\r\n        slicecfg8Btn.addEventListener('click', slicecfgBtnFn); slicecfg8Btn.name = \"retina+yslices\";\r\n        const settingBarPlaceHolder = document.createElement(\"span\");\r\n        settingBarPlaceHolder.appendChild(settingBtn);\r\n        const settingBar = this.createDropBox(settingBtn, 2, 2);\r\n        settingBarPlaceHolder.className = \"settingbar\";\r\n        settingBarPlaceHolder.appendChild(settingBar);\r\n        mainBar.appendChild(settingBarPlaceHolder);\r\n        settingBar.appendChild(layerpBtn);\r\n        layerpBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"layerpBtn\");\r\n        settingBar.appendChild(layermBtn);\r\n        layermBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"layermBtn\");\r\n        settingBar.appendChild(opacitypBtn);\r\n        opacitypBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"opacitypBtn\");\r\n        settingBar.appendChild(opacitymBtn);\r\n        opacitymBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"opacitymBtn\");\r\n        settingBar.appendChild(fovpBtn);\r\n        fovpBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"fovpBtn\");\r\n        settingBar.appendChild(fovmBtn);\r\n        fovmBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"fovmBtn\");\r\n        settingBar.appendChild(respBtn);\r\n        respBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"respBtn\");\r\n        settingBar.appendChild(resmBtn);\r\n        resmBtn.addEventListener('mousedown', () => retinaCtrl.guiMouseOperation = \"resmBtn\");\r\n\r\n        mainBar.appendChild(crosshairBtn);\r\n        crosshairBtn.addEventListener(\"click\", () => retinaCtrl.toggleCrosshair());\r\n\r\n        const crosspplPlaceholder = document.createElement(\"span\");\r\n        mainBar.appendChild(crosspplPlaceholder);\r\n        let crosspplPlaceholderBtn = crossppl1Btn.cloneNode(true) as HTMLButtonElement;\r\n        crosspplPlaceholder.appendChild(crosspplPlaceholderBtn);\r\n        crosspplPlaceholder.className = \"crossppl\";\r\n        const crosspplBar = this.createDropBox(crosspplPlaceholderBtn, 4);\r\n        crosspplPlaceholder.appendChild(crosspplBar);\r\n\r\n        const crosspplBtnFn = function () {\r\n            crosspplPlaceholderBtn.style.backgroundImage = this.style.backgroundImage;\r\n            retinaCtrl.toggleRetinaAlpha(Number(this.name));\r\n        }\r\n        crosspplBar.appendChild(crossppl1Btn); crossppl1Btn.addEventListener('click', crosspplBtnFn); crossppl1Btn.name = \"0\";\r\n        crosspplBar.appendChild(crossppl2Btn); crossppl2Btn.addEventListener('click', crosspplBtnFn); crossppl2Btn.name = \"1\";\r\n        crosspplBar.appendChild(crossppl3Btn); crossppl3Btn.addEventListener('click', crosspplBtnFn); crossppl3Btn.name = \"2\";\r\n        crosspplBar.appendChild(crossppl4Btn); crossppl4Btn.addEventListener('click', crosspplBtnFn); crossppl4Btn.name = \"3\";\r\n\r\n        this.refresh = (param: any) => {\r\n            let crosspplBtn: HTMLButtonElement;\r\n            switch (param[\"toggleRetinaAlpha\"]) {\r\n                case 0: crosspplBtn = crossppl1Btn; break;\r\n                case 1: crosspplBtn = crossppl2Btn; break;\r\n                case 2: crosspplBtn = crossppl3Btn; break;\r\n                case 3: crosspplBtn = crossppl4Btn; break;\r\n            }\r\n            switch (param[\"toggleStereo\"]) {\r\n                case true: param[\"negEyesGap\"] = retinaCtrl.retinaEyeOffset > 0 || retinaCtrl.sectionEyeOffset > 0; break;\r\n                case false: eyeModeCrossBtn.style.display = \"none\"; eyeModeParaBtn.style.display = \"none\"; break;\r\n            }\r\n            switch (param[\"negEyesGap\"]) {\r\n                case false: eyeModeCrossBtn.style.display = \"none\"; eyeModeParaBtn.style.display = \"\"; break;\r\n                case true: eyeModeCrossBtn.style.display = \"\"; eyeModeParaBtn.style.display = \"none\"; break;\r\n            }\r\n\r\n            if (crosspplBtn) crosspplPlaceholderBtn.style.backgroundImage = crosspplBtn.style.backgroundImage;\r\n            switch (param[\"toggleSectionConfig\"]) {\r\n                case \"retina+sections\": slicecfg1Btn.click(); break;\r\n                case \"retina+bigsections\": slicecfg2Btn.click(); break;\r\n                case \"retina\": slicecfg3Btn.click(); break;\r\n                case \"sections\": slicecfg4Btn.click(); break;\r\n                case \"zsection\": slicecfg5Btn.click(); break;\r\n                case \"ysection\": slicecfg6Btn.click(); break;\r\n                case \"retina+zslices\": slicecfg7Btn.click(); break;\r\n                case \"retina+yslices\": slicecfg8Btn.click(); break;\r\n            }\r\n            if (param[\"enableKeyCode\"] !== undefined) {\r\n                enableKeycode = param[\"enableKeyCode\"];\r\n                const BtnHint = {\r\n                    \"zh\": {\r\n                        \"mouseBtn0\": \"鼠标左键\",\r\n                        \"mouseBtn1\": \"鼠标中键\",\r\n                        \"mouseBtn2\": \"鼠标右键\",\r\n                        \"left\": \"左\",\r\n                        \"right\": \"右\",\r\n                        \"digit\": \"大键盘数字\",\r\n                        \"mainBtn\": \"显示/隐藏体素渲染设置\",\r\n                        \"crosspplPlaceholderBtn\": \"显示/隐藏选择截面形状\",\r\n                        \"crossppl1Btn\": \"截面形状：默认立方体\",\r\n                        \"crossppl2Btn\": \"截面形状：球\",\r\n                        \"crossppl3Btn\": \"截面形状：小立方体\",\r\n                        \"crossppl4Btn\": \"截面形状：平面\",\r\n                        \"crossppl2BtnDesc\": \"拖动以改变球半径(垂直)\\n和羽化量(水平)\",\r\n                        \"crossppl3BtnDesc\": \"拖动以改变立方体大小(垂直)\\n和剩余部分透明度(水平)\",\r\n                        \"crossppl4BtnDesc\": \"拖动以改变截平面方向\",\r\n                        \"stereoBtn\": \"切换裸眼3D模式\",\r\n                        \"eyeModeCrossBtn\": \"交叉眼\",\r\n                        \"eyeModeParaBtn\": \"平行眼\",\r\n                        \"slicecfgPlaceholderBtn\": \"显示/隐藏选择视图配置\",\r\n                        \"slicecfg1Btn\": \"视图配置：体素+三个截面\",\r\n                        \"slicecfg2Btn\": \"视图配置：体素+三个大截面\",\r\n                        \"slicecfg3Btn\": \"视图配置：体素\",\r\n                        \"slicecfg4Btn\": \"视图配置：三个截面\",\r\n                        \"slicecfg5Btn\": \"视图配置：Y轴截面\",\r\n                        \"slicecfg6Btn\": \"视图配置：Z轴截面\",\r\n                        \"slicecfg7Btn\": \"视图配置：体素+平行Y轴截面\",\r\n                        \"slicecfg8Btn\": \"视图配置：体素+平行Z轴截面\",\r\n                        \"layerpBtn\": \"增加体素渲染层数\",\r\n                        \"layermBtn\": \"减少体素渲染层数\",\r\n                        \"opacitypBtn\": \"增加体素不透明度\",\r\n                        \"opacitymBtn\": \"减少体素不透明度\",\r\n                        \"fovpBtn\": \"增大体素显示视场角\",\r\n                        \"fovmBtn\": \"降低体素显示视场角\",\r\n                        \"respBtn\": \"增大每层体素分辨率\",\r\n                        \"resmBtn\": \"降低每层体素分辨率\",\r\n                        \"settingBtn\": \"显示/隐藏体素渲染参数调节\",\r\n                        \"crosshairBtn\": \"显示/隐藏十字准心\",\r\n                    },\r\n                    \"en\": {\r\n                        \"mouseBtn0\": \"Left Mouse Button\",\r\n                        \"mouseBtn1\": \"Middle Mouse Button\",\r\n                        \"mouseBtn2\": \"Right Mouse Button\",\r\n                        \"eyeModeCrossBtn\": \"Cross View\",\r\n                        \"eyeModeParaBtn\": \"Parallel View\",\r\n                        \"left\": \"Left\",\r\n                        \"right\": \"Right\",\r\n                        \"digit\": \"Digit \",\r\n                        \"mainBtn\": \"Show / Hide Voxel Render Settings\",\r\n                        \"crosspplPlaceholderBtn\": \"Show / Hide Choose CrossSection Shape\",\r\n                        \"crossppl1Btn\": \"CrossSection Shape: Default Cube\",\r\n                        \"crossppl2Btn\": \"CrossSection Shape: Ball\",\r\n                        \"crossppl3Btn\": \"CrossSection Shape: Small Cube\",\r\n                        \"crossppl4Btn\": \"CrossSection Shape: Plane\",\r\n                        \"crossppl2BtnDesc\": \" Drag to Change Ball Radius(Vertically)\\nand Feathering Amount(Horizontally)\",\r\n                        \"crossppl3BtnDesc\": \" Drag to Change Cube Size(Vertically)\\nand Remained Opacity(Horizontally)\",\r\n                        \"crossppl4BtnDesc\": \" Drag to Change Section Plane's Orientation\",\r\n                        \"stereoBtn\": \"Toggle Naked Eye Stereo Mode\",\r\n                        \"slicecfgPlaceholderBtn\": \"Show / Hide Choose View Configuration\",\r\n                        \"slicecfg1Btn\": \"View Configuration: Voxel + Sections\",\r\n                        \"slicecfg2Btn\": \"View Configuration: Voxel + Big Sections\",\r\n                        \"slicecfg3Btn\": \"View Configuration: Voxel Only\",\r\n                        \"slicecfg4Btn\": \"View Configuration: 3 Sections\",\r\n                        \"slicecfg5Btn\": \"View Configuration: Y axis Section\",\r\n                        \"slicecfg6Btn\": \"View Configuration: Z axis Section\",\r\n                        \"slicecfg7Btn\": \"View Configuration: Voxel + Y axis Parallel Sections\",\r\n                        \"slicecfg8Btn\": \"View Configuration: Voxel + Z axis Parallel Sections\",\r\n                        \"layerpBtn\": \"Increase Voxel Layers\",\r\n                        \"layermBtn\": \"Decrease Voxel Layers\",\r\n                        \"opacitypBtn\": \"Increase Voxel Opacity\",\r\n                        \"opacitymBtn\": \"Decrease Voxel Opacity\",\r\n                        \"fovpBtn\": \"Increase Field Of Voxel View\",\r\n                        \"fovmBtn\": \"Decrease Voxel Field Of Voxel View\",\r\n                        \"respBtn\": \"Increase Resolution Per Voxel Layer\",\r\n                        \"resmBtn\": \"Decrease Resolution Per Voxel Layer\",\r\n                        \"settingBtn\": \"Show / Hide Voxel Render Params\",\r\n                        \"crosshairBtn\": \"Toggle Crosshair\",\r\n                    },\r\n                }\r\n                let params = new URLSearchParams(window.location.search.slice(1));\r\n                let tr = BtnHint[params.get(\"lang\") ?? (navigator.languages.join(\",\").includes(\"zh\") ? \"zh\" : \"en\")];\r\n\r\n                const keyName = (cfg: string, config?: any) => `\\n(${retinaCtrl.keyConfig.enable ? retinaCtrl.keyConfig.enable.replace(\"Key\", \"\").replace(\"Left\", tr[\"left\"]).replace(\"Right\", tr[\"right\"]).replace(\"Digit\", tr[\"digit\"]) + \" + \" : \"\"\r\n                    }${(config ?? retinaCtrl.keyConfig)[cfg].replace(/(Key)|(Left)|(Right)|(\\.)/g, \"\").replace(\"Digit\", tr[\"digit\"])})`;\r\n\r\n                mainBtn.title = tr[\"mainBtn\"];\r\n                crosspplPlaceholderBtn.title = tr[\"crosspplPlaceholderBtn\"];\r\n                const getCrosspplBtnTitle = (btnName: string, noDragDesc?: boolean) => tr[btnName] + keyName(\"toggleRetinaAlpha\") + (\r\n                    !noDragDesc ? \"\\n----\" + keyName(\"\", { \"\": \"\" }).replace(/[\\(\\})]/g, \"\") + tr[\"mouseBtn\" + retinaCtrl.retinaAlphaMouseButton] + tr[btnName + \"Desc\"] : \"\"\r\n                );\r\n                crossppl1Btn.title = getCrosspplBtnTitle(\"crossppl1Btn\", true);\r\n                crossppl2Btn.title = getCrosspplBtnTitle(\"crossppl2Btn\");\r\n                crossppl3Btn.title = getCrosspplBtnTitle(\"crossppl3Btn\");\r\n                crossppl4Btn.title = getCrosspplBtnTitle(\"crossppl4Btn\");\r\n                stereoBtn.title = tr[\"stereoBtn\"] + keyName(\"toggle3D\");\r\n                eyeModeCrossBtn.title = tr[\"eyeModeCrossBtn\"] + keyName(\"negEyesGap\");\r\n                eyeModeParaBtn.title = tr[\"eyeModeParaBtn\"] + keyName(\"negEyesGap\");\r\n                slicecfgPlaceholderBtn.title = tr[\"slicecfgPlaceholderBtn\"];\r\n                slicecfg1Btn.title = tr[\"slicecfg1Btn\"] + keyName(\"retina+sections\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg2Btn.title = tr[\"slicecfg2Btn\"] + keyName(\"retina+bigsections\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg3Btn.title = tr[\"slicecfg3Btn\"] + keyName(\"retina\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg4Btn.title = tr[\"slicecfg4Btn\"] + keyName(\"sections\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg5Btn.title = tr[\"slicecfg5Btn\"] + keyName(\"zsection\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg6Btn.title = tr[\"slicecfg6Btn\"] + keyName(\"ysection\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg7Btn.title = tr[\"slicecfg7Btn\"] + keyName(\"retina+zslices\", retinaCtrl.keyConfig.sectionConfigs);\r\n                slicecfg8Btn.title = tr[\"slicecfg8Btn\"] + keyName(\"retina+yslices\", retinaCtrl.keyConfig.sectionConfigs);\r\n                layerpBtn.title = tr[\"layerpBtn\"] + keyName(\"addLayer\");\r\n                layermBtn.title = tr[\"layermBtn\"] + keyName(\"subLayer\");\r\n                opacitypBtn.title = tr[\"opacitypBtn\"] + keyName(\"addOpacity\");\r\n                opacitymBtn.title = tr[\"opacitymBtn\"] + keyName(\"subOpacity\");\r\n                fovpBtn.title = tr[\"fovpBtn\"] + keyName(\"addFov\");\r\n                fovmBtn.title = tr[\"fovmBtn\"] + keyName(\"subFov\");\r\n                respBtn.title = tr[\"respBtn\"] + keyName(\"addRetinaResolution\");\r\n                resmBtn.title = tr[\"resmBtn\"] + keyName(\"subRetinaResolution\");\r\n                settingBtn.title = tr[\"settingBtn\"];\r\n                crosshairBtn.title = tr[\"crosshairBtn\"] + keyName(\"toggleCrosshair\");\r\n            }\r\n        }\r\n        const css = document.createElement(\"style\");\r\n        css.appendChild(document.createTextNode(`\r\n        button.retina-ctrl-gui{\r\n            background: #999;\r\n        }\r\n        .slicecfg button.retina-ctrl-gui{\r\n            background: #B77;\r\n        }\r\n        .settingbar button.retina-ctrl-gui{\r\n            background: #7B7;\r\n        }\r\n        .crossppl button.retina-ctrl-gui{\r\n            background: #BB7;\r\n        }\r\n        button.retina-ctrl-gui[title]:hover::after{\r\n            white-space: pre-line; width: max-content;\r\n            content:attr(title);position:absolute;bottom:100%;right:0%; font-size:1em;z-index:100;background:#000;color:#FFF; padding:0;margin:0;\r\n        }\r\n        div.retina-ctrl-gui button.retina-ctrl-gui[title]:hover::after{\r\n            bottom:calc(100% + ${this.iconSize}px);\r\n        }\r\n        `));\r\n        this.dom.appendChild(mainBtn);\r\n        this.dom.appendChild(css);\r\n\r\n        this.refresh({ \"negEyesGap\": retinaCtrl.retinaEyeOffset > 0 || retinaCtrl.sectionEyeOffset > 0 });\r\n    }\r\n    addBtn(svgIcon: string) {\r\n        const btn = document.createElement(\"button\");\r\n        btn.className = \"retina-ctrl-gui\";\r\n        btn.innerHTML = \"&nbsp;\";\r\n        btn.style.width = this.iconSize + \"px\";\r\n        btn.style.height = this.iconSize + \"px\";\r\n        btn.style.borderRadius = this.iconSize * 0.25 + \"px\";\r\n        btn.style.backgroundImage = `url('data:image/svg+xml,${escape(svgIcon)}')`;\r\n        const cancelFn = () => this.controller.guiMouseOperation = \"\";\r\n        btn.addEventListener('mouseup', cancelFn); btn.addEventListener('mouseout', cancelFn);\r\n        return btn;\r\n    }\r\n}","import { ControllerConfig, ControllerRegistry, IController, RetinaController } from \"../util/ctrl.js\";\r\nimport { Renderer, RendererConfig } from \"./renderer.js\";\r\nimport { Camera, PerspectiveCamera, Scene } from \"./scene.js\";\r\n\r\nexport class App {\r\n    canvas: HTMLCanvasElement;\r\n    renderer: Renderer;\r\n    scene: Scene;\r\n    camera: Camera;\r\n    controllerRegistry: ControllerRegistry;\r\n    retinaController?: RetinaController;\r\n    onresize?: (e: { width: number, height: number }) => void;\r\n    private _onFrame?: () => void;\r\n    private _running: boolean = false;\r\n    private _autoResize: boolean = false;\r\n    private _resizeHandler?: () => void;\r\n\r\n    enableAutoResize() {\r\n        if (this._autoResize) return;\r\n        this._autoResize = true;\r\n        this._resizeHandler = () => {\r\n            const width = window.innerWidth * window.devicePixelRatio;\r\n            const height = window.innerHeight * window.devicePixelRatio;\r\n            if (this.onresize) this.onresize({ width, height });\r\n            this.renderer.setSize({ width, height });\r\n        };\r\n        this._resizeHandler();\r\n        window.addEventListener(\"resize\", this._resizeHandler);\r\n    }\r\n    disableAutoResize() {\r\n        if (!this._autoResize || !this._resizeHandler) return;\r\n        window.removeEventListener(\"resize\", this._resizeHandler);\r\n        this._autoResize = false;\r\n        this._resizeHandler = undefined;\r\n    }\r\n    private constructor(\r\n        canvas: HTMLCanvasElement,\r\n        renderer: Renderer,\r\n        scene: Scene,\r\n        camera: Camera,\r\n        controllerRegistry: ControllerRegistry\r\n    ) {\r\n        this.canvas = canvas;\r\n        this.renderer = renderer;\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.controllerRegistry = controllerRegistry;\r\n    }\r\n\r\n    static async create(opts: {\r\n        canvas: HTMLCanvasElement;\r\n        scene?: Scene;\r\n        camera?: Camera;\r\n        controls?: IController[];\r\n        autoSetSize?: boolean;\r\n        renderConfig?: RendererConfig;\r\n        controllerConfig?: ControllerConfig;\r\n    }): Promise<App> {\r\n        const renderer = await new Renderer(opts.canvas, opts.renderConfig).init();\r\n        const scene = opts.scene ?? new Scene();\r\n        const camera = opts.camera ?? new PerspectiveCamera();\r\n        scene.add(camera);\r\n        const controls = opts.controls ?? [new RetinaController(renderer.core)];\r\n        const controllerRegistry = new ControllerRegistry(opts.canvas, controls, opts.controllerConfig);\r\n\r\n        const app = new App(opts.canvas, renderer, scene, camera, controllerRegistry);\r\n        if (opts.autoSetSize !== false) {\r\n            app.enableAutoResize();\r\n        }\r\n        if (!opts.controls) app.retinaController = controls[0] as RetinaController;\r\n        return app;\r\n    }\r\n    run(onFrame?: () => void) {\r\n        this._onFrame = onFrame;\r\n        this._running = true;\r\n        const frame = () => {\r\n            if (!this._running) return;\r\n            this.controllerRegistry.update();\r\n            this._onFrame?.();\r\n            this.renderer.render(this.scene, this.camera);\r\n            requestAnimationFrame(frame);\r\n        };\r\n        frame();\r\n    }\r\n    stop() {\r\n        this._running = false;\r\n    }\r\n}","import { Mat3 } from \"./mat3.js\";\r\nimport { Mat4 } from \"./mat4.js\";\r\nimport { Vec3 } from \"./vec3.js\";\r\nimport { Vec4 } from \"./vec4.js\";\r\n\r\nexport interface ColumnVector extends Matrix {\r\n    row: 1;\r\n}\r\nexport interface RowVector extends Matrix {\r\n    col: 1;\r\n}\r\nexport class Matrix {\r\n    elem: Float32Array;\r\n    row: number;\r\n    col: number;\r\n    length: number;\r\n    constructor(r: number, c?: number) {\r\n        c = c ?? r;\r\n        this.row = r; this.col = c;\r\n        this.length = r * c;\r\n        this.elem = new Float32Array(this.length);\r\n    }\r\n    static diag(...arr: number[]) {\r\n        const n = arr.length;\r\n        const nplus1 = n + 1;\r\n        const m = new Matrix(n);\r\n        for (let i = 0; i < n; i += nplus1) {\r\n            m.elem[i] = arr[i];\r\n        }\r\n        return m;\r\n    }\r\n    diag() {\r\n        const arr: number[] = [];\r\n        let cplus1 = this.col + 1;\r\n        const r_c = Math.min(this.row, this.col);\r\n        for (let i = 0, l = 0; l < r_c && i < this.length; i += cplus1) {\r\n            arr.push(this.elem[i]);\r\n        }\r\n        return arr;\r\n    }\r\n    static fromArray(arr: number[][]) {\r\n        let m = new Matrix(arr.length, arr[0] ? arr[0].length : 0);\r\n        m.elem.set(arr.flat());\r\n        return m;\r\n    }\r\n    static fromMat3(mat3: Mat3) {\r\n        let m = new Matrix(3);\r\n        m.elem.set(mat3.elem);\r\n        return m;\r\n    }\r\n    static fromMat4(mat4: Mat4) {\r\n        let m = new Matrix(4);\r\n        m.elem.set(mat4.elem);\r\n        return m;\r\n    }\r\n    static fromVec4(vec4: Vec4) {\r\n        let m = new Matrix(1, 4);\r\n        m.elem.set([vec4.x, vec4.y, vec4.z, vec4.w]);\r\n        return m;\r\n    }\r\n    static fromVec3(vec3: Vec3) {\r\n        let m = new Matrix(1, 3);\r\n        m.elem.set([vec3.x, vec3.y, vec3.z]);\r\n        return m;\r\n    }\r\n    static fill(value: number, r: number, c?: number) {\r\n        let m = new Matrix(r, c);\r\n        m.elem.fill(value);\r\n        return m;\r\n    }\r\n    static id(r: number, c?: number) {\r\n        c = c ?? r;\r\n        let m = new Matrix(r, c);\r\n        let cplus1 = c + 1;\r\n        const r_c = Math.min(r, c);\r\n        for (let i = 0, l = 0; l < r_c && i < m.length; i += cplus1) {\r\n            m.elem[i] = 1.0;\r\n        }\r\n        return m;\r\n    }\r\n    setElements(...args: number[]) {\r\n        this.elem.set(args); return this;\r\n    }\r\n    copy(src: Matrix) {\r\n        if (src.row !== this.row || src.col !== this.col) throw \"Matrix dimension disagree\";\r\n        this.elem.set(src.elem); return this;\r\n    }\r\n    clone() {\r\n        return new Matrix(this.row, this.col).copy(this);\r\n    }\r\n    toMat3() {\r\n        if (this.row !== 3 || this.col !== 3) throw \"Matrix dimension must be 3x3\";\r\n        return new Mat3(...this.elem);\r\n    }\r\n    toMat4() {\r\n        if (this.row !== 4 || this.col !== 4) throw \"Matrix dimension must be 4x4\";\r\n        return new Mat4(...this.elem);\r\n    }\r\n    toVec4() {\r\n        if (this.row === 4 && this.col === 1) return new Vec4(...this.elem);\r\n        if (this.row === 1 && this.col === 4) return new Vec4(...this.elem);\r\n        throw \"Matrix dimension must be 1x4 or 4x1\";\r\n    }\r\n    toVec3() {\r\n        if (this.row === 3 && this.col === 1) return new Vec3(...this.elem);\r\n        if (this.row === 1 && this.col === 3) return new Vec3(...this.elem);\r\n        throw \"Matrix dimension must be 1x3 or 3x1\";\r\n    }\r\n    to2DArray() {\r\n        let arr: number[][] = [];\r\n        for (let i = 0, k = 0; i < this.row; i++) {\r\n            arr.push([]);\r\n            for (let j = 0; j < this.col; j++, k++) {\r\n                arr[i].push(this.elem[k]);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    ts() {\r\n        if (this.col === this.row) {\r\n            for (let i = 0, offI = 0; i < this.row; i++, offI += this.col) {\r\n                for (let j = i + 1, offJ = offI + this.col; j < this.col; j++, offJ += this.row) {\r\n                    const a = j + offI;\r\n                    const b = i + offJ;\r\n                    let temp = this.elem[a]; this.elem[a] = this.elem[b]; this.elem[b] = temp;\r\n                }\r\n            }\r\n        } else {\r\n            throw \"not implemented yet for non square matrice\";\r\n        }\r\n        let temp = this.col; this.col = this.row; this.row = temp;\r\n        return this;\r\n    }\r\n    adds(m: Matrix) {\r\n        for (let i = 0, l = m.length; i < l; i++) {\r\n            this.elem[i] += m.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    addmulfs(m: Matrix, k: number) {\r\n        for (let i = 0, l = m.length; i < l; i++) {\r\n            this.elem[i] += m.elem[i] * k;\r\n        }\r\n        return this;\r\n    }\r\n    subs(m: Matrix) {\r\n        for (let i = 0, l = m.length; i < l; i++) {\r\n            this.elem[i] -= m.elem[i];\r\n        }\r\n        return this;\r\n    }\r\n    mulfs(k: number) {\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            this.elem[i] *= k;\r\n        }\r\n        return this;\r\n    }\r\n    mulset(m1: Matrix, m2: Matrix) {\r\n        if (m1 === this) return this.mulsr(m2);\r\n        if (m2 === this) return this.mulsl(m1);\r\n        const r1 = m1.row, r2 = m2.row;\r\n        const c1 = m1.col, c2 = m2.col;\r\n        if (c1 !== r2) throw \"Inconsist matrices dimension\";\r\n        if (this.row !== r1 || this.col !== c2) throw \"Inconsist destination matrix dimension\";\r\n        for (let r = 0, k = 0, offsetR1 = 0; r < r1; r++, offsetR1 += c1) {\r\n            for (let c = 0; c < c2; c++) {\r\n                let sum = 0;\r\n                for (let j = 0, offsetR2 = 0; j < r2; j++, offsetR2 += c2) {\r\n                    sum += m1.elem[offsetR1 + j] * m2.elem[offsetR2 + c];\r\n                }\r\n                this.elem[k++] = sum;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    mul(m: Matrix) {\r\n        const r1 = this.row, r2 = m.row;\r\n        const c1 = this.col, c2 = m.col;\r\n        if (c1 !== r2) throw \"Inconsist matrices dimension\";\r\n        const R = new Matrix(r1, c2);\r\n        for (let r = 0, k = 0, offsetR1 = 0; r < r1; r++, offsetR1 += c1) {\r\n            for (let c = 0; c < c2; c++) {\r\n                let sum = 0;\r\n                for (let j = 0, offsetR2 = 0; j < r2; j++, offsetR2 += c2) {\r\n                    sum += this.elem[offsetR1 + j] * m.elem[offsetR2 + c];\r\n                }\r\n                R.elem[k++] = sum;\r\n            }\r\n        }\r\n        return R;\r\n    }\r\n    /// this = this * m\r\n    mulsr(m: Matrix) {\r\n        const r1 = this.row, r2 = m.row;\r\n        const c1 = this.col, c2 = m.col;\r\n        if (c1 !== r2) throw \"Inconsist matrices dimension\";\r\n        if (this.col !== c2) throw \"Inconsist destination matrix dimension\";\r\n        const arr = new Float32Array(this.length);\r\n        for (let r = 0, k = 0, offsetR1 = 0; r < r1; r++, offsetR1 += c1) {\r\n            for (let c = 0; c < c2; c++) {\r\n                let sum = 0;\r\n                for (let j = 0, offsetR2 = 0; j < r2; j++, offsetR2 += c2) {\r\n                    sum += this.elem[offsetR1 + j] * m.elem[offsetR2 + c];\r\n                }\r\n                arr[k++] = sum;\r\n            }\r\n        }\r\n        this.elem = arr;\r\n        return this;\r\n    }\r\n    /// this = m * this\r\n    mulsl(m: Matrix) {\r\n        const r1 = m.row, r2 = this.row;\r\n        const c1 = m.col, c2 = this.col;\r\n        if (c1 !== r2) throw \"Inconsist matrices dimension\";\r\n        if (this.row !== r1) throw \"Inconsist destination matrix dimension\";\r\n        const arr = new Float32Array(this.length);\r\n        for (let r = 0, k = 0, offsetR1 = 0; r < r1; r++, offsetR1 += c1) {\r\n            for (let c = 0; c < c2; c++) {\r\n                let sum = 0;\r\n                for (let j = 0, offsetR2 = 0; j < r2; j++, offsetR2 += c2) {\r\n                    sum += m.elem[offsetR1 + j] * this.elem[offsetR2 + c];\r\n                }\r\n                arr[k++] = sum;\r\n            }\r\n        }\r\n        this.elem = arr;\r\n        return this;\r\n    }\r\n    norm() {\r\n        let sum = 0;\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            sum += this.elem[i] * this.elem[i];\r\n        }\r\n        return Math.sqrt(sum);\r\n    }\r\n    norm1() {\r\n        let sum = 0;\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            sum += Math.abs(this.elem[i]);\r\n        }\r\n        return sum;\r\n    }\r\n    norms() {\r\n        return this.divfs(this.norm());\r\n    }\r\n    normSqr() {\r\n        let sum = 0;\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            sum += this.elem[i] * this.elem[i];\r\n        }\r\n        return sum;\r\n    }\r\n    divfs(k: number) {\r\n        k = 1 / k;\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            this.elem[i] *= k;\r\n        }\r\n        return this;\r\n    }\r\n    get(r: number, c: number) {\r\n        return this.elem[c + this.col * r];\r\n    }\r\n    set(r: number, c: number, value: number) {\r\n        this.elem[c + this.col * r] = value; return this;\r\n    }\r\n    setFromSubMatrix(srcMat: Matrix, rows?: number, cols?: number, srcRowOffset: number = 0, srcColOffset: number = 0, dstRowOffset: number = 0, dstColOffset: number = 0) {\r\n\r\n        const { row, col } = srcMat;\r\n        rows ??= row; cols ??= col;\r\n\r\n        for (\r\n            let i = srcRowOffset, srcOffset = srcRowOffset * col, dstOffset = dstRowOffset * this.col;\r\n            i < srcRowOffset + rows; i++, srcOffset += col, dstOffset += this.col\r\n        ) {\r\n            for (let j = srcColOffset, k = dstColOffset; j < srcColOffset + cols; j++, k++) {\r\n                this.elem[k + dstOffset] = srcMat.elem[j + srcOffset];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    colVector(k: number) {\r\n        return this.subMatrix(0, k, undefined, 1) as ColumnVector;\r\n    }\r\n    rowVector(k: number) {\r\n        return this.subMatrix(k, 0, 1) as RowVector;\r\n    }\r\n    subMatrix(rowOffset: number, colOffset: number, row?: number, col?: number) {\r\n        row ??= this.row;\r\n        col ??= this.col;\r\n        const A = new Matrix(row, col);\r\n        for (let i = rowOffset, offset = rowOffset * this.col, k = 0; i < rowOffset + row; i++, offset += this.col) {\r\n            for (let j = colOffset; j < colOffset + col; j++, k++) {\r\n                A.elem[k] = this.elem[j + offset];\r\n            }\r\n        }\r\n        return A;\r\n    }\r\n    det() {\r\n        if (this.row !== this.col) throw \"Square matrix expected\";\r\n        if (this.row === 1) return this.elem[0];\r\n        if (this.row === 2) return this.elem[0] * this.elem[3] - this.elem[1] * this.elem[2];\r\n        let det = 0;\r\n        const elem = this.elem;\r\n        const n = this.row - 1;\r\n        const subMat = new Matrix(n);\r\n        for (let i = 0; i < this.col; i++) {\r\n            if (i) subMat.setFromSubMatrix(this, n, i, 1, 0);\r\n            if (i !== n) subMat.setFromSubMatrix(this, n, n - i, 1, i + 1, 0, i);\r\n            det += (i & 1) === 0 ? elem[i] * subMat.det() : -elem[i] * subMat.det();\r\n        }\r\n        return det;\r\n    }\r\n    decomposeQR() {\r\n        const m = this.row;\r\n        const n = this.col;\r\n\r\n        const qv: Matrix[] = [];\r\n\r\n        // temp array\r\n        const z = this.clone();\r\n        let z1: Matrix;\r\n\r\n        for (let k = 0; k < n && k < m - 1; k++) {\r\n\r\n            let e = new Matrix(m, 1) as ColumnVector, x: ColumnVector;\r\n            let a: number;\r\n            z1 = Matrix.id(m, n);\r\n            z1.setFromSubMatrix(z, m - k, n - k, k, k, k, k);\r\n            x = z1.colVector(k);\r\n\r\n            a = x.norm();\r\n            if (this.get(k, k) > 0) a = -a;\r\n\r\n            for (let i = 0; i < m; i++) {\r\n                e.elem[i] = (i == k) ? 1 : 0;\r\n            }\r\n            x.addmulfs(e, a);\r\n            e.copy(x);\r\n\r\n            const norm = e.norm();\r\n            if (norm > 0) {\r\n                e.divfs(norm);\r\n\r\n                // qv[k] = I - 2 *e*e^T\r\n\r\n                qv[k] = new Matrix(m);\r\n                for (let i = 0, kk = 0; i < m; i++) {\r\n                    for (let j = 0; j < m; j++, kk++) {\r\n                        qv[k].elem[kk] = -2 * e.elem[i] * e.elem[j];\r\n                        if (i === j) qv[k].elem[kk] += 1;\r\n                    }\r\n                }\r\n                z.mulset(qv[k], z1);\r\n            }\r\n        }\r\n\r\n        let Q = qv[0] ?? Matrix.id(m);\r\n\r\n        for (let i = 1; i < qv.length; i++) {\r\n            Q.mulsl(qv[i]);\r\n        }\r\n\r\n        const R = Q.mul(this);\r\n        Q.ts();\r\n        return { Q, R };\r\n    }\r\n    SVdecompose(iterations: number = 10) {\r\n        // m = O L O'\r\n        function OLOdecompose(m: Matrix) {\r\n            const tempMat = m.clone();\r\n            let { Q, R } = tempMat.decomposeQR();\r\n            const qv = Q.clone();\r\n            for (let i = 0; i < iterations; i++) {\r\n                tempMat.mulset(R, Q);\r\n                const { Q: Q2, R: R2 } = tempMat.decomposeQR();\r\n                qv.mulsr(Q2);\r\n                Q = Q2; R = R2;\r\n            }\r\n            return { O: qv, L: tempMat.clone() }\r\n        }\r\n        const pts = this.clone().ts();\r\n        const ppt = OLOdecompose(this.mul(pts));\r\n        const U = ppt.O;\r\n        for (let i = 0; i < ppt.L.length; i += ppt.L.row + 1) {\r\n            ppt.L.elem[i] = 1 / Math.sqrt(ppt.L.elem[i]);\r\n        }\r\n        const V = ppt.L.mul(U.clone().ts()).mul(this);\r\n        return {\r\n            U, V, L: U.clone().ts().mul(this).mulsr(V.clone().ts())\r\n        }\r\n    }\r\n}","import { Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Bivec, bivecPool } from \"../math/algebra/bivec.js\";\r\nimport { Matrix } from \"../math/algebra/matrix.js\";\r\nimport { Vec4, vec4Pool } from \"../math/algebra/vec4.js\";\r\nimport { AABB } from \"../math/geometry/primitive.js\";\r\nimport { Quaternion, Rotor, Spline } from \"../math/math.js\";\r\nimport { Material, mulBivec } from \"./engine.js\";\r\n\r\nexport type RigidType = \"still\" | \"passive\" | \"active\";\r\ninterface SimpleRigidDescriptor {\r\n    /** mass set to 0 to specify non-active rigid */\r\n    mass: number | null;\r\n    /** RigidGeometry instance cannot be shared between Rigid instances */\r\n    geometry: RigidGeometry;\r\n    material: Material;\r\n    type?: RigidType;\r\n    /** for tracing debug */\r\n    label?: string;\r\n};\r\n/** Subrigids should not be added into scene repetively.\r\n * Subrigids's positions cannot be modified after union created\r\n */\r\ntype UnionRigidDescriptor = Rigid[];\r\n/** all properities hold by class Rigid should not be modified\r\n *  exceptions are position/rotation and (angular)velocity.\r\n *  pass RigidDescriptor into constructor instead.\r\n *  */\r\nexport class Rigid extends Obj4 {\r\n    // Rigid extends Obj4, it has position and rotation, but no scale\r\n    declare scale: undefined;\r\n    material: Material;\r\n    // Caution: Two Rigids cannot share the same RigidGeometry instance\r\n    geometry: RigidGeometry;\r\n    type: RigidType;\r\n    mass: number | undefined;\r\n    invMass: number;\r\n    // inertia is a 6x6 Matrix for angularVelocity -> angularMomentum\r\n    // this is diagonalbMatrix under principal axes coordinates\r\n    inertia: Bivec | undefined = new Bivec();\r\n    invInertia: Bivec | undefined = new Bivec();\r\n    inertiaIsotroy: boolean; // whether using scalar inertia\r\n    // only apply to active type object\r\n    sleep: boolean = false;\r\n    // for tracing debug\r\n    label?: string;\r\n\r\n    velocity: Vec4 = new Vec4();\r\n    angularVelocity: Bivec = new Bivec();\r\n    force: Vec4 = new Vec4();\r\n    torque: Bivec = new Bivec();\r\n    acceleration: Vec4 = new Vec4();\r\n    angularAcceleration: Bivec = new Bivec();\r\n    constructor(param: SimpleRigidDescriptor | UnionRigidDescriptor) {\r\n        super();\r\n        if ((param as UnionRigidDescriptor).length) {\r\n            this.geometry = new rigid.Union(param as UnionRigidDescriptor);\r\n        } else {\r\n            let option = param as SimpleRigidDescriptor;\r\n            this.geometry = option.geometry;\r\n            this.mass = isFinite(option.mass as number) ? option.mass! : 0;\r\n            this.type = option.type ?? \"active\";\r\n            this.invMass = this.mass > 0 && (this.type === \"active\") ? 1 / this.mass : 0;\r\n            this.material = option.material;\r\n            this.label = option.label;\r\n        }\r\n        this.geometry.initialize(this);\r\n    }\r\n\r\n    getlinearVelocity(out: Vec4, point: Vec4) {\r\n        if (this.type === \"still\") return out.set();\r\n        let relPosition = out.subset(point, this.position);\r\n        return out.dotbset(relPosition, this.angularVelocity).adds(this.velocity);\r\n    }\r\n    getMomentum(out: Vec4) {\r\n        if (this.type === \"still\") return out.set();\r\n        return out.copy(this.velocity).mulfs(this.mass);\r\n    }\r\n    /** type: \"J\" for total, type: \"S\" for Spin, type: \"L\" for Orbital, */\r\n    getAngularMomentum(out: Bivec, point = new Vec4, type: \"J\" | \"S\" | \"L\" = \"J\") {\r\n        const v = vec4Pool.pop();\r\n        const p = vec4Pool.pop().copy(this.position);\r\n        if (point) p.subs(point);\r\n        if (type === \"J\" || type === \"L\") {\r\n            out.wedgevvset(p, this.getMomentum(v));\r\n        } else {\r\n            out.set();\r\n        }\r\n        if (type === \"L\") return out;\r\n        p.pushPool();\r\n        const localW = bivecPool.pop();\r\n        const localIW = bivecPool.pop();\r\n        localW.rotateconjset(this.angularVelocity, this.rotation);\r\n        mulBivec(localIW, this.inertia, localW);\r\n        v.pushPool();\r\n        return out.adds(localIW.rotates(this.rotation));\r\n    }\r\n    getLinearKineticEnergy() {\r\n        return this.velocity.normsqr() * this.mass / 2;\r\n    }\r\n    getAngularKineticEnergy() {\r\n        const localW = bivecPool.pop();\r\n        const localIW = bivecPool.pop();\r\n        localW.rotateset(this.angularVelocity, this.rotation);\r\n        const k = localW.dot(mulBivec(localIW, this.inertia, localW)) / 2;\r\n        localIW.pushPool(); localIW.pushPool();\r\n        return k;\r\n    }\r\n    getKineticEnergy() {\r\n        return this.getLinearKineticEnergy() + this.getAngularKineticEnergy();\r\n    }\r\n}\r\n/** internal type for union rigid geometry */\r\nexport interface SubRigid extends Rigid {\r\n    localCoord?: Obj4;\r\n    parent?: Rigid;\r\n}\r\nexport abstract class RigidGeometry {\r\n    rigid: Rigid;\r\n    obb: AABB;\r\n    aabb: AABB;\r\n    boundingGlome: number;\r\n    initialize(rigid: Rigid) {\r\n        this.rigid = rigid;\r\n        this.initializeMassInertia(rigid);\r\n        if (!rigid.mass && rigid.type === \"active\") rigid.type = \"still\";\r\n        if (rigid.inertia) {\r\n            rigid.invInertia.xy = 1 / rigid.inertia.xy;\r\n            if (!rigid.inertiaIsotroy) {\r\n                rigid.invInertia.xz = 1 / rigid.inertia.xz;\r\n                rigid.invInertia.yz = 1 / rigid.inertia.yz;\r\n                rigid.invInertia.xw = 1 / rigid.inertia.xw;\r\n                rigid.invInertia.yw = 1 / rigid.inertia.yw;\r\n                rigid.invInertia.zw = 1 / rigid.inertia.zw;\r\n            } else {\r\n                rigid.invInertia.xz = rigid.invInertia.xy;\r\n                rigid.invInertia.yz = rigid.invInertia.xy;\r\n                rigid.invInertia.xw = rigid.invInertia.xy;\r\n                rigid.invInertia.yw = rigid.invInertia.xy;\r\n                rigid.invInertia.zw = rigid.invInertia.xy;\r\n                rigid.inertia.xz = rigid.inertia.xy;\r\n                rigid.inertia.yz = rigid.inertia.xy;\r\n                rigid.inertia.xw = rigid.inertia.xy;\r\n                rigid.inertia.yw = rigid.inertia.xy;\r\n                rigid.inertia.zw = rigid.inertia.xy;\r\n            }\r\n        }\r\n    };\r\n    abstract initializeMassInertia(rigid: Rigid): void;\r\n}\r\nexport namespace rigid {\r\n    export class Union extends RigidGeometry {\r\n        components: SubRigid[];\r\n        constructor(components: Rigid[]) { super(); this.components = components; }\r\n        // todo: union gen\r\n        initializeMassInertia(rigid: Rigid) {\r\n            // set union rigid's position at mass center of rigids\r\n            rigid.position.set();\r\n            rigid.mass = 0;\r\n            for (let r of this.components) {\r\n                if (r.mass === undefined) console.error(\"Union Rigid Geometry cannot contain a still rigid.\");\r\n                rigid.position.addmulfs(r.position, r.mass!);\r\n                rigid.mass += r.mass!;\r\n            }\r\n            rigid.invMass = 1 / rigid.mass;\r\n            rigid.position.mulfs(rigid.invMass);\r\n            // update rigids position to relative frame\r\n            for (let r of this.components) {\r\n                r.localCoord = new Obj4().copyObj4(r);\r\n                r.localCoord.position.subs(rigid.position);\r\n                r.parent = rigid;\r\n            }\r\n            // todo\r\n            // let inertia = new Matrix(6,6);\r\n            rigid.inertia.xy = 1;\r\n            rigid.inertiaIsotroy = true;\r\n            rigid.type = \"active\";\r\n        };\r\n        updateCoord() {\r\n            for (let r of this.components) {\r\n                r.position.copy(r.localCoord.position).rotates(this.rigid.rotation).adds(this.rigid.position);\r\n                r.rotation.copy(r.localCoord.rotation).mulsl(this.rigid.rotation);\r\n            }\r\n        }\r\n    }\r\n    export class Glome extends RigidGeometry {\r\n        radius: number = 1;\r\n        radiusSqr: number = 1;\r\n        inertiaCoefficient: number;\r\n        constructor(radius: number, inertiaCoefficient = 0.25) {\r\n            super();\r\n            this.radius = radius;\r\n            this.boundingGlome = radius;\r\n            this.radiusSqr = radius * radius;\r\n            this.inertiaCoefficient = inertiaCoefficient;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            rigid.inertiaIsotroy = true;\r\n            rigid.inertia.xy = rigid.mass * this.radiusSqr * this.inertiaCoefficient;\r\n        }\r\n    }\r\n    export class Convex extends RigidGeometry {\r\n        points: Vec4[];\r\n        _cachePoints: Vec4[];\r\n        constructor(points: Vec4[]) {\r\n            super();\r\n            this.points = points;\r\n            this.obb = AABB.fromPoints(points);\r\n            this.boundingGlome = 0;\r\n            for (let i of points) {\r\n                this.boundingGlome = Math.max(this.boundingGlome, i.normsqr());\r\n            }\r\n            this.boundingGlome = Math.sqrt(this.boundingGlome);\r\n        }\r\n        private getPointsInertia(points: Vec4[], mass: number) {\r\n            const inertiaMat = new Matrix(6);\r\n            const tempMat = new Matrix(6);\r\n            for (const p of points) {\r\n                const r11 = p.x * p.x;\r\n                const r12 = p.x * p.y;\r\n                const r13 = p.x * p.z;\r\n                const r14 = p.x * p.w;\r\n                const r22 = p.y * p.y;\r\n                const r23 = p.y * p.z;\r\n                const r24 = p.y * p.w;\r\n                const r33 = p.z * p.z;\r\n                const r34 = p.z * p.w;\r\n                const r44 = p.w * p.w;\r\n                tempMat.setElements(\r\n                    r11 + r22, r23, r24, -r13, -r14, 0,\r\n                    r23, r11 + r33, r34, r12, 0, -r14,\r\n                    r24, r34, r44 + r11, 0, r12, r13,\r\n                    -r13, r12, 0, r22 + r33, r34, -r24,\r\n                    -r14, 0, r12, r34, r44 + r22, r23,\r\n                    0, -r14, r13, -r24, r23, r33 + r44\r\n                ).ts();\r\n                inertiaMat.adds(tempMat);\r\n            }\r\n            return inertiaMat.mulfs(mass / points.length);\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            // todo inertia calc\r\n            const tempMat = new Matrix(6);\r\n            // const Rt = Rotor.rand();\r\n\r\n            const clinicMat = Matrix.fromArray([\r\n                [1, 0, 0, 0, 0, 1],\r\n                [0, 1, 0, 0, -1, 0],\r\n                [0, 0, 1, 1, 0, 0],\r\n                [1, 0, 0, 0, 0, -1],\r\n                [0, 1, 0, 0, 1, 0],\r\n                [0, 0, 1, -1, 0, 0],\r\n            ]).mulfs(Math.SQRT1_2);\r\n            const clinicMats = clinicMat.clone().ts();\r\n            function toBivecClinicMatrix(Rt: Rotor) {\r\n                const RtMat = new Matrix(6);\r\n                const bxy = Bivec.xy.rotate(Rt);\r\n                const bxz = Bivec.xz.rotate(Rt);\r\n                const bxw = Bivec.xw.rotate(Rt);\r\n                const byz = Bivec.yz.rotate(Rt);\r\n                const byw = Bivec.yw.rotate(Rt);\r\n                const bzw = Bivec.zw.rotate(Rt);\r\n                RtMat.setElements(\r\n                    bxy.xy, bxy.xz, bxy.xw, bxy.yz, bxy.yw, bxy.zw,\r\n                    bxz.xy, bxz.xz, bxz.xw, bxz.yz, bxz.yw, bxz.zw,\r\n                    bxw.xy, bxw.xz, bxw.xw, bxw.yz, bxw.yw, bxw.zw,\r\n                    byz.xy, byz.xz, byz.xw, byz.yz, byz.yw, byz.zw,\r\n                    byw.xy, byw.xz, byw.xw, byw.yz, byw.yw, byw.zw,\r\n                    bzw.xy, bzw.xz, bzw.xw, bzw.yz, bzw.yw, bzw.zw,\r\n                )\r\n                return clinicMat.mul(RtMat).mul(clinicMats);\r\n            }\r\n\r\n            // calculate inertia matrix before rotation\r\n            // const inertiaMat0 = this.getPointsInertia((rigid.geometry as Convex).points, rigid.mass);\r\n            // (rigid.geometry as Convex).points.forEach(v => v.rotates(Rt));\r\n            // calculate inertia matrix after rotation\r\n            const inertiaMat = this.getPointsInertia((rigid.geometry as Convex).points, rigid.mass);\r\n            // console.log(inertiaMat0,RtMat.mul(inertiaMat).mul(RtMat.ts())); // ok\r\n\r\n            // convert to isoclinic basis\r\n            // const iClinicMat0 = clinicMat.mul(inertiaMat0).mul(clinicMats);\r\n            const iClinicMat = clinicMat.mul(inertiaMat).mul(clinicMats);\r\n            // console.log(iClinicMat0, iClinicMat);\r\n            // extract part P:\r\n            // [aId  P; P'  aId]\r\n            const p = iClinicMat.subMatrix(0, 3, 3, 3);\r\n            if (p.norm1() < 1e-5) {\r\n                rigid.inertiaIsotroy = true;\r\n                rigid.inertia.set(...inertiaMat.diag()).mulfs(rigid.mass * 0.2); // factor for solid\r\n                return;\r\n            }\r\n            const { U, V } = p.SVdecompose(24);\r\n            if (V.det() < 0) {\r\n                V.elem[6] = -V.elem[6];\r\n                V.elem[7] = -V.elem[7];\r\n                V.elem[8] = -V.elem[8];\r\n            }\r\n            // const newR = new Matrix(6);\r\n            // const L = Matrix.fromArray([[0, 0, 1], [0, 1, 0], [1, 0, 0]]);\r\n            // newR.setFromSubMatrix(U.clone().ts(), 3, 3);\r\n            // newR.setFromSubMatrix((V.clone()), 3, 3, 0, 0, 3, 3);\r\n            // console.log(newR.mul(iClinicMat).mul(newR.clone().ts()));\r\n\r\n            const rL = new Quaternion().setFromMat3(U.toMat3());\r\n            const rR = new Quaternion().setFromMat3(V.toMat3());\r\n            const rotor = new Rotor(rL, rR);\r\n            // console.log(newR, toBivecClinicMatrix(rotor));\r\n\r\n            (rigid.geometry as Convex).points.forEach(v => v.rotatesconj(rotor));\r\n            // calculate inertia matrix\r\n            const inertiaMat2 = this.getPointsInertia((rigid.geometry as Convex).points, rigid.mass);\r\n            // console.log(inertiaMat2);\r\n            rigid.rotates(rotor);\r\n            rigid.inertia.set(...inertiaMat2.diag()).mulfs(rigid.mass * 0.2); // factor for solid\r\n        }\r\n    }\r\n    export class Tesseractoid extends Convex {\r\n        size: Vec4;\r\n        constructor(size: Vec4 | number) {\r\n            let s = typeof size === \"number\" ? new Vec4(size, size, size, size) : size;\r\n            super([\r\n                new Vec4(s.x, s.y, s.z, s.w),\r\n                new Vec4(-s.x, s.y, s.z, s.w),\r\n                new Vec4(s.x, -s.y, s.z, s.w),\r\n                new Vec4(-s.x, -s.y, s.z, s.w),\r\n                new Vec4(s.x, s.y, -s.z, s.w),\r\n                new Vec4(-s.x, s.y, -s.z, s.w),\r\n                new Vec4(s.x, -s.y, -s.z, s.w),\r\n                new Vec4(-s.x, -s.y, -s.z, s.w),\r\n                new Vec4(s.x, s.y, s.z, -s.w),\r\n                new Vec4(-s.x, s.y, s.z, -s.w),\r\n                new Vec4(s.x, -s.y, s.z, -s.w),\r\n                new Vec4(-s.x, -s.y, s.z, -s.w),\r\n                new Vec4(s.x, s.y, -s.z, -s.w),\r\n                new Vec4(-s.x, s.y, -s.z, -s.w),\r\n                new Vec4(s.x, -s.y, -s.z, -s.w),\r\n                new Vec4(-s.x, -s.y, -s.z, -s.w),\r\n            ]);\r\n            this.size = s;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            let mins = Math.min(this.size.x, this.size.y, this.size.z, this.size.w);\r\n            let maxs = Math.max(this.size.x, this.size.y, this.size.z, this.size.w);\r\n            let isoratio = mins / maxs;\r\n            rigid.inertiaIsotroy = isoratio > 0.95;\r\n            if (rigid.inertiaIsotroy) {\r\n                rigid.inertia.xy = rigid.mass * (mins + maxs) * (mins + maxs) * 0.2;\r\n            } else {\r\n                let x = this.size.x * this.size.x;\r\n                let y = this.size.y * this.size.y;\r\n                let z = this.size.z * this.size.z;\r\n                let w = this.size.w * this.size.w;\r\n                rigid.inertia.set(x + y, x + z, x + w, y + z, y + w, z + w).mulfs(rigid.mass * 0.2);\r\n            }\r\n        }\r\n    }\r\n    export class Duocylinder extends Convex {\r\n        radius1: number;\r\n        radius2: number;\r\n        segment1: number;\r\n        segment2: number;\r\n        constructor(radius1: number, radius2: number, segment1: number, segment2: number) {\r\n            const ps: Vec4[] = [];\r\n            const d1 = Math.PI * 2 / segment1;\r\n            const d2 = Math.PI * 2 / segment2;\r\n            for (let i = 0, ii = 0; i < segment1; i++, ii += d1) {\r\n                for (let j = 0, jj = 0; j < segment2; j++, jj += d2) {\r\n                    ps.push(new Vec4(Math.sin(ii) * radius1, Math.sin(jj) * radius2, Math.cos(jj) * radius2, Math.cos(ii) * radius1));\r\n                }\r\n            }\r\n            super(ps);\r\n            this.radius1 = radius1; this.radius2 = radius2;\r\n            this.segment1 = segment1; this.segment2 = segment2;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            let isoratio = this.radius1 / this.radius2;\r\n            rigid.inertiaIsotroy = isoratio > 0.95 && isoratio < 1.05;\r\n            if (rigid.inertiaIsotroy) {\r\n                rigid.inertia.xy = rigid.mass * (this.radius1 + this.radius2) * (this.radius1 + this.radius2) * 0.2;\r\n            } else {\r\n                let x = this.radius1 * this.radius1;\r\n                let y = this.radius2 * this.radius2;\r\n                let z = y;\r\n                let w = x;\r\n                rigid.inertia.set(x + y, x + z, x + w, y + z, y + w, z + w).mulfs(rigid.mass * 0.2);\r\n            }\r\n        }\r\n    }\r\n    /** equation: dot(normal,positon) == offset\r\n     *  => when offset > 0, plane is shifted to normal direction\r\n     *  from origin by distance = offset\r\n     */\r\n    export class Plane extends RigidGeometry {\r\n        normal: Vec4;\r\n        offset: number;\r\n        constructor(normal?: Vec4, offset?: number) {\r\n            super();\r\n            this.normal = normal ?? Vec4.y.clone();\r\n            this.offset = offset ?? 0;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            if (rigid.mass) console.warn(\"Infinitive Plane cannot have a finitive mass.\");\r\n            rigid.mass = undefined;\r\n            rigid.invMass = 0;\r\n            rigid.inertia = undefined;\r\n            rigid.invInertia = undefined;\r\n        }\r\n    }\r\n    export class GlomicCavity extends RigidGeometry {\r\n        radius: number;\r\n        constructor(radius: number) {\r\n            super();\r\n            this.radius = radius;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            if (rigid.mass) console.warn(\"GlomicCavity cannot have a finitive mass.\");\r\n            rigid.mass = undefined;\r\n            rigid.invMass = 0;\r\n            rigid.inertia = undefined;\r\n            rigid.invInertia = undefined;\r\n        }\r\n    }\r\n    /** default orientation: XW */\r\n    export class Spheritorus extends RigidGeometry {\r\n        majorRadius: number;\r\n        minorRadius: number;\r\n        /** majorRadius: cirle's radius, minorRadius: sphere's radius */\r\n        constructor(majorRadius: number, minorRadius: number) {\r\n            super();\r\n            this.majorRadius = majorRadius;\r\n            this.minorRadius = minorRadius;\r\n            this.obb = new AABB(\r\n                new Vec4(\r\n                    -majorRadius - minorRadius, -minorRadius, -minorRadius, -majorRadius - minorRadius\r\n                ),\r\n                new Vec4(\r\n                    majorRadius + minorRadius, minorRadius, minorRadius, majorRadius + minorRadius\r\n                ),\r\n            );\r\n            this.boundingGlome = majorRadius + minorRadius;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            rigid.inertiaIsotroy = false;\r\n            let maj = this.majorRadius * this.majorRadius;\r\n            let min = this.minorRadius * this.minorRadius;\r\n            let half = maj + 5 * min;\r\n            let parallel = 2 * maj + 6 * min;\r\n            let perp = 4 * min;\r\n            rigid.inertia.set(half, half, parallel, perp, half, half).mulfs(rigid.mass! * 0.1);\r\n        }\r\n    }\r\n    /** default orientation: XZW */\r\n    export class Torisphere extends RigidGeometry {\r\n        majorRadius: number;\r\n        minorRadius: number;\r\n        /** majorRadius: sphere's radius, minorRadius: cirle's radius */\r\n        constructor(majorRadius: number, minorRadius: number) {\r\n            super();\r\n            this.majorRadius = majorRadius;\r\n            this.minorRadius = minorRadius;\r\n            this.obb = new AABB(\r\n                new Vec4(\r\n                    -majorRadius - minorRadius, -minorRadius, -majorRadius - minorRadius, -majorRadius - minorRadius\r\n                ),\r\n                new Vec4(\r\n                    majorRadius + minorRadius, minorRadius, majorRadius + minorRadius, majorRadius + minorRadius\r\n                ),\r\n            );\r\n            this.boundingGlome = majorRadius + minorRadius;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            rigid.inertiaIsotroy = false;\r\n            let maj = this.majorRadius * this.majorRadius;\r\n            let min = this.minorRadius * this.minorRadius;\r\n            let half = 2 * maj + 5 * min;\r\n            let parallel = 3 * maj + 6 * min;\r\n            rigid.inertia.set(half, parallel, parallel, half, half, parallel).mulfs(rigid.mass! * 0.1);\r\n        }\r\n    }\r\n    /** default orientation: 1:XY, 2:ZW */\r\n    export class Tiger extends RigidGeometry {\r\n        majorRadius1: number;\r\n        majorRadius2: number;\r\n        minorRadius: number;\r\n        /** majorRadius: sphere's radius, minorRadius: cirle's radius */\r\n        constructor(majorRadius1: number, majorRadius2: number, minorRadius: number) {\r\n            super();\r\n            this.majorRadius1 = majorRadius1;\r\n            this.majorRadius2 = majorRadius2;\r\n            this.minorRadius = minorRadius;\r\n            this.obb = new AABB(\r\n                new Vec4(-majorRadius1 - minorRadius, -majorRadius1 - minorRadius, -majorRadius2 - minorRadius, -majorRadius2 - minorRadius),\r\n                new Vec4(majorRadius1 + minorRadius, majorRadius1 + minorRadius, majorRadius2 + minorRadius, majorRadius2 + minorRadius),\r\n            );\r\n\r\n            this.boundingGlome = Math.max(majorRadius1, majorRadius2) + minorRadius;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            rigid.inertiaIsotroy = false;\r\n            let maj1 = this.majorRadius1 * this.majorRadius1;\r\n            let maj2 = this.majorRadius2 * this.majorRadius2;\r\n            let min = this.minorRadius * this.minorRadius;\r\n            let half = maj1 + maj2 + min * 6;\r\n            rigid.inertia.set(2 * maj1 + min * 5, half, half, half, half, 2 * maj2 + min * 5).mulfs(rigid.mass! * 0.5);\r\n        }\r\n    }\r\n    /** default orientation: (xy-z)-w */\r\n    export class Ditorus extends RigidGeometry {\r\n        majorRadius: number;\r\n        middleRadius: number;\r\n        minorRadius: number;\r\n        /** majorRadius, minorRadius: torus's radius, minorRadius: cirle's radius */\r\n        constructor(majorRadius: number, middleRadius: number, minorRadius: number) {\r\n            super();\r\n            this.majorRadius = majorRadius;\r\n            this.minorRadius = minorRadius;\r\n            this.middleRadius = middleRadius;\r\n            let minorRadius12 = minorRadius + middleRadius;\r\n            this.obb = new AABB(\r\n                new Vec4(-majorRadius - minorRadius12, -majorRadius - minorRadius12, -minorRadius12, -minorRadius),\r\n                new Vec4(majorRadius + minorRadius12, majorRadius + minorRadius12, minorRadius12, minorRadius)\r\n            );\r\n\r\n            this.boundingGlome = majorRadius + minorRadius12;\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            rigid.inertiaIsotroy = false;\r\n            let maj1 = this.majorRadius * this.majorRadius;\r\n            let maj2 = this.majorRadius * this.middleRadius;\r\n            let min = this.middleRadius * this.middleRadius;\r\n            let min2 = this.minorRadius * this.middleRadius;\r\n            let half = maj1 + maj2 + min * 6;\r\n            rigid.inertia.set(2 * maj1 + min * 5, maj1 + min * 6 + min2, maj1 + min2, maj1 + min * 6 + min2, maj1 + min2, 2 * min + min2).mulfs(rigid.mass * 0.2);\r\n        }\r\n    }\r\n    // todo\r\n    export class ThickHexahedronGrid extends RigidGeometry {\r\n        grid1: Vec4[][][];\r\n        grid2: Vec4[][][];\r\n        convex: Convex[];\r\n        constructor(\r\n            grid1: Vec4[][][], grid2: Vec4[][][],\r\n        ) {\r\n            super();\r\n            this.grid1 = grid1;\r\n            this.grid2 = grid2;\r\n            this.convex = [];\r\n            for (let w = 0, lw = grid1.length - 1; w < lw; w++) {\r\n                let grd1w = grid1[w];\r\n                let grd2w = grid2[w];\r\n                let grd1w1 = grid1[w + 1];\r\n                let grd2w1 = grid2[w + 1];\r\n                for (let z = 0, lz = grid1[0].length - 1; z < lz; z++) {\r\n                    let grd1wz = grd1w[z];\r\n                    let grd2wz = grd2w[z];\r\n                    let grd1wz1 = grd1w[z + 1];\r\n                    let grd2wz1 = grd2w[z + 1];\r\n                    let grd1w1z = grd1w1[z];\r\n                    let grd2w1z = grd2w1[z];\r\n                    let grd1w1z1 = grd1w1[z + 1];\r\n                    let grd2w1z1 = grd2w1[z + 1];\r\n                    for (let x = 0, lx = grid1[0][0].length - 1; x < lx; x++) {\r\n                        let c = [\r\n                            grd1wz[x],\r\n                            grd1wz[x + 1],\r\n                            grd1wz1[x],\r\n                            grd1wz1[x + 1],\r\n                            grd1w1z[x],\r\n                            grd1w1z[x + 1],\r\n                            grd1w1z1[x],\r\n                            grd1w1z1[x + 1],\r\n                            grd2wz[x],\r\n                            grd2wz[x + 1],\r\n                            grd2wz1[x],\r\n                            grd2wz1[x + 1],\r\n                            grd2w1z[x],\r\n                            grd2w1z[x + 1],\r\n                            grd2w1z1[x],\r\n                            grd2w1z1[x + 1],\r\n                        ];\r\n                        let sum = new Vec4();\r\n                        c.reduceRight((a, b) => { return sum.addset(a, b) }).divfs(16);\r\n                        this.convex.push(new Convex(c.map(c => c.sub(sum))));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            if (rigid.mass) console.warn(\"HeightField doesnt support a finitive mass.\");\r\n            rigid.mass = undefined;\r\n            rigid.invMass = 0;\r\n            rigid.inertia = undefined;\r\n            rigid.invInertia = undefined;\r\n        }\r\n    }\r\n    /** todo */\r\n    export class LoftedConvex extends Union {\r\n        constructor(\r\n            sp: Spline, section: Vec4[], step: number\r\n        ) {\r\n            const { points, rotors } = sp.generate(step);\r\n            const components: Rigid[] = [];\r\n            for (let j = 1; j < rotors.length; j++) {\r\n                let r = rotors[j];\r\n                let p = points[j];\r\n                let r0 = rotors[j - 1];\r\n                let p0 = points[j - 1];\r\n                let ps = section.map(v => v.rotate(r).adds(p));\r\n                let ps0 = section.map(v => v.rotate(r0).adds(p0));\r\n                ps.push(...ps0);\r\n                components.push(new Rigid({ geometry: new Convex(ps), mass: 0, material: new Material(1, 0.6) }));\r\n\r\n            }\r\n            super(components);\r\n        }\r\n        initializeMassInertia(rigid: Rigid) {\r\n            if (rigid.mass) console.warn(\"LoftedConvex doesnt support a finitive mass.\");\r\n            rigid.mass = undefined;\r\n            rigid.invMass = 0;\r\n            rigid.inertia = undefined;\r\n            rigid.invInertia = undefined;\r\n        }\r\n    }\r\n}","import { math } from \"../tesserxel.js\";\r\nimport { World } from \"./engine.js\";\r\nimport { Rigid, rigid } from \"./rigid.js\";\r\n\r\nexport interface BroadPhaseConstructor {\r\n    new(): BroadPhase;\r\n};\r\nexport type BroadPhaseList = [Rigid, Rigid][];\r\nexport abstract class BroadPhase {\r\n    checkList: BroadPhaseList = [];\r\n    ignorePair: BroadPhaseList = [];\r\n    protected clearCheckList() {\r\n        this.checkList = [];\r\n    }\r\n    abstract run(world: World): void;\r\n    protected verifyCheckList() {\r\n        this.checkList = this.checkList.filter(([a, b]) => -1 === this.ignorePair.findIndex(([x, y]) => (a === x && b === y) || (a === y && b === x)));\r\n    }\r\n}\r\nexport class BoundingGlomeBroadPhase extends BroadPhase {\r\n    checkBoundingGlome(ri: Rigid, rj: Rigid) {\r\n        let gi = ri.geometry instanceof rigid.Glome;\r\n        let gj = rj.geometry instanceof rigid.Glome;\r\n        let pi = ri.geometry instanceof rigid.Plane;\r\n        let pj = rj.geometry instanceof rigid.Plane;\r\n        let directDetect = (gi || pi) && (gj || pj);\r\n        let radi = ri.geometry.boundingGlome;\r\n        let radj = rj.geometry.boundingGlome;\r\n        if (!directDetect && radi && radj) {\r\n            let r = radi + radj;\r\n            if (ri.position.distanceSqrTo(rj.position) > r * r) {\r\n                return false;\r\n            }\r\n        } else if (pi && radj) {\r\n            let d = radj - (rj.position.dot((ri.geometry as rigid.Plane).normal) - (ri.geometry as rigid.Plane).offset)\r\n            if (d < 0) return false;\r\n        } else if (pj && radi) {\r\n            let d = radi - (ri.position.dot((rj.geometry as rigid.Plane).normal) - (rj.geometry as rigid.Plane).offset)\r\n            if (d < 0) return false;\r\n        }\r\n        return true;\r\n    }\r\n    run(world: World) {\r\n        this.clearCheckList();\r\n        for (let i = 0; i < world.rigids.length; i++) {\r\n            for (let j = i + 1; j < world.rigids.length; j++) {\r\n                let ri = world.rigids[i], rj = world.rigids[j];\r\n                if (!ri.mass && !rj.mass) continue;\r\n                if (!this.checkBoundingGlome(ri, rj)) continue;\r\n                let iU = ri.geometry instanceof rigid.Union;\r\n                let jU = rj.geometry instanceof rigid.Union;\r\n                if (!iU && !jU) {\r\n                    this.checkList.push([ri, rj]);\r\n                } else if (iU && !jU) {\r\n                    for (let r of (ri.geometry as rigid.Union).components) {\r\n\r\n                        if (!this.checkBoundingGlome(r, rj)) continue;\r\n                        this.checkList.push([r, rj]);\r\n                    }\r\n                } else if (!iU && jU) {\r\n                    for (let r of (rj.geometry as rigid.Union).components) {\r\n                        if (!this.checkBoundingGlome(r, ri)) continue;\r\n                        this.checkList.push([r, ri]);\r\n                    }\r\n                } else {\r\n                    for (let r1 of (ri.geometry as rigid.Union).components) {\r\n                        for (let r2 of (rj.geometry as rigid.Union).components) {\r\n                            if (!this.checkBoundingGlome(r1, r2)) continue;\r\n                            this.checkList.push([r1, r2]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\ntype BoundingGlomeTreeNode = {\r\n    position: math.Vec4;\r\n    radius: number;\r\n    surcell: number;\r\n    child1: BoundingGlomeTreeNode | Rigid;\r\n    child2?: BoundingGlomeTreeNode | Rigid;\r\n    parent?: BoundingGlomeTreeNode;\r\n    rigidIndex?: number;\r\n};\r\nexport class BoundingGlomeTreeBroadPhase extends BroadPhase {\r\n    tree: BoundingGlomeTreeNode;\r\n    exclude: Rigid[];\r\n    include: Rigid[];\r\n    buildTree(world: World) {\r\n        this.tree = undefined;\r\n        this.exclude = [];\r\n        this.include = [];\r\n        let rigidIndex = -1;\r\n        for (let i = 0; i < world.rigids.length; i++) {\r\n            let ri = world.rigids[i];\r\n            if (ri.geometry instanceof rigid.Plane || ri.geometry instanceof rigid.GlomicCavity) {\r\n                this.exclude.push(ri);\r\n            } else {\r\n                this.include.push(ri);\r\n                rigidIndex++;\r\n                let riRadius = ri.geometry.boundingGlome;\r\n                let newRigidNode: BoundingGlomeTreeNode = {\r\n                    radius: riRadius, position: ri.position.clone(),\r\n                    surcell: riRadius * riRadius,\r\n                    child1: ri, rigidIndex\r\n                };\r\n                if (!this.tree) {\r\n                    // create initial tree: node->rigid[0]\r\n                    this.tree = newRigidNode;\r\n                } else {\r\n                    let node = this.tree;\r\n                    let nodeNeedUpdate = true;\r\n                    let done = false;\r\n                    while (!done) {\r\n                        if (node.child1 instanceof Rigid) {\r\n                            // insert a new leaf node for rigid\r\n                            let radius = node.child1.geometry.boundingGlome;\r\n                            let surcell = nodeNeedUpdate ? node.surcell : radius * radius;\r\n                            let wrapNode: BoundingGlomeTreeNode = {\r\n                                radius, position: node.child1.position.clone(), surcell,\r\n                                child1: node.child1, parent: node, rigidIndex: node.rigidIndex\r\n                            };\r\n                            node.child1 = wrapNode;\r\n                            node.child2 = newRigidNode;\r\n                            newRigidNode.parent = node;\r\n                            node.rigidIndex = undefined;\r\n                            done = true;\r\n                        }\r\n                        if (nodeNeedUpdate) {\r\n                            // update node's bounding glome\r\n                            let distance = node.position.distanceTo(newRigidNode.position);\r\n                            let newRadius = (distance + riRadius + node.radius) * 0.5;\r\n                            if (newRadius <= Math.min(riRadius, node.radius)) {\r\n                                if (newRadius <= riRadius) {\r\n                                    node.position.copy(ri.position);\r\n                                    node.radius = riRadius;\r\n                                    node.surcell = newRigidNode.surcell;\r\n                                }\r\n                            } else {\r\n                                node.position.subs(ri.position).mulfs((newRadius - riRadius) / distance).adds(ri.position);\r\n                                node.radius = newRadius;\r\n                                node.surcell = node.radius * node.radius;\r\n                            }\r\n                        }\r\n                        if (!done && node.child2) {\r\n                            let distance1 = ri.position.distanceTo(node.child1.position);\r\n                            let d1 = distance1 + riRadius + node.child1.radius;\r\n                            let surcell1 = d1 * d1 * 0.25;\r\n                            let distance2 = ri.position.distanceTo(node.child2.position);\r\n                            let d2 = distance2 + riRadius + (node.child2 as BoundingGlomeTreeNode).radius;\r\n                            let surcell2 = d2 * d2 * 0.25;\r\n                            let surcell = Math.min(surcell1, surcell2);\r\n                            let radius: number, distance: number;\r\n                            if (surcell1 - node.child1.surcell < surcell2 - (node.child2 as BoundingGlomeTreeNode).surcell) {\r\n                                node = node.child1;\r\n                                radius = d1 * 0.5;\r\n                                distance = distance1;\r\n                            } else {\r\n                                node = node.child2 as BoundingGlomeTreeNode;\r\n                                radius = d2 * 0.5;\r\n                                distance = distance2;\r\n                            }\r\n                            node.position.subs(ri.position).mulfs((radius - riRadius) / distance).adds(ri.position);\r\n                            node.radius = radius;\r\n                            node.surcell = surcell;\r\n                            nodeNeedUpdate = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    run(world: World) { // todo: union\r\n        this.clearCheckList();\r\n        this.buildTree(world);\r\n        for (let includeIdx = 0; includeIdx < this.include.length; includeIdx++) {\r\n            const stack = [this.tree];\r\n            const i = this.include[includeIdx];\r\n            while (stack.length) {\r\n                const node = stack.pop();\r\n                if (node.child1 instanceof Rigid) {\r\n                    if (node.rigidIndex <= includeIdx) {\r\n                        continue;\r\n                    }\r\n                }\r\n                let r = i.geometry.boundingGlome + node.radius;\r\n                if (i.position.distanceSqrTo(node.position) < r * r) {\r\n                    if (node.child2) {\r\n                        stack.push(node.child1 as BoundingGlomeTreeNode, node.child2 as BoundingGlomeTreeNode);\r\n                    } else {\r\n                        this.checkList.push([i, node.child1 as Rigid]);\r\n                    }\r\n                }\r\n            }\r\n            for (let e of this.exclude) {\r\n                this.checkList.push([i, e]);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\nexport class NaiveBroadPhase extends BroadPhase {\r\n    run(world: World) {\r\n        this.clearCheckList();\r\n        for (let i = 0; i < world.rigids.length; i++) {\r\n            for (let j = i + 1; j < world.rigids.length; j++) {\r\n                let ri = world.rigids[i], rj = world.rigids[j];\r\n                if (!ri.mass && !rj.mass) continue;\r\n                let iU = ri.geometry instanceof rigid.Union;\r\n                let jU = rj.geometry instanceof rigid.Union;\r\n                if (!iU && !jU) {\r\n                    this.checkList.push([ri, rj]);\r\n                } else if (iU && !jU) {\r\n                    for (let r of (ri.geometry as rigid.Union).components) {\r\n                        this.checkList.push([r, rj]);\r\n                    }\r\n                } else if (!iU && jU) {\r\n                    for (let r of (rj.geometry as rigid.Union).components) {\r\n                        this.checkList.push([r, ri]);\r\n                    }\r\n                } else {\r\n                    for (let r1 of (ri.geometry as rigid.Union).components) {\r\n                        for (let r2 of (rj.geometry as rigid.Union).components) {\r\n                            this.checkList.push([r1, r2]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.verifyCheckList();\r\n    }\r\n}\r\nexport class IgnoreAllBroadPhase extends BroadPhase {\r\n    run(world: World) {\r\n        this.clearCheckList();\r\n    }\r\n}","import { Bivec, bivecPool } from \"../math/algebra/bivec.js\";\r\nimport { Mat4, mat4Pool } from \"../math/algebra/mat4.js\";\r\nimport { Matrix } from \"../math/algebra/matrix.js\";\r\nimport { Rotor } from \"../math/algebra/rotor.js\";\r\nimport { Vec4, vec4Pool } from \"../math/algebra/vec4.js\";\r\nimport { mulBivec, World } from \"./engine.js\";\r\nimport { Rigid } from \"./rigid.js\";\r\n\r\nexport interface ForceAccumulatorConstructor {\r\n    new(): ForceAccumulator;\r\n};\r\nexport abstract class ForceAccumulator {\r\n    abstract run(world: World, dt: number): void;\r\n    private _biv1 = new Bivec;\r\n    private _biv2 = new Bivec;\r\n    private readonly _bivec0 = new Bivec;\r\n    getState(world: World) {\r\n        // clear\r\n        for (let o of world.rigids) {\r\n            if (!o.invMass) continue;\r\n            o.force.set();\r\n            o.torque.set();\r\n        }\r\n        // apply force\r\n        for (let f of world.forces) {\r\n            f.apply(world.time);\r\n        }\r\n        for (let o of world.rigids) {\r\n            if (!o.invMass) continue;\r\n            o.acceleration.copy(world.gravity);\r\n            if (o.force.norm1() > 0) {\r\n                o.acceleration.addmulfs(o.force, o.invMass);\r\n            }\r\n            if (o.inertiaIsotroy) {\r\n                if (o.torque.norm1() > 0) o.angularAcceleration.set().addmulfs(o.torque, o.invInertia.xy);\r\n            } else {\r\n                // Euler equation of motion\r\n                let localT = (o.torque.norm1() > 0) ? this._biv2.rotateconjset(o.torque, o.rotation) : this._bivec0;\r\n                let localW = this._biv1.rotateconjset(o.angularVelocity, o.rotation);\r\n                let localL = mulBivec(o.angularAcceleration, localW, o.inertia);\r\n                mulBivec(o.angularAcceleration, localL.crossrs(localW).negs().adds(localT), o.invInertia);\r\n                o.angularAcceleration.rotates(o.rotation);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport namespace force_accumulator {\r\n    export class Euler2 extends ForceAccumulator {\r\n        private _bivec = new Bivec;\r\n        private _rotor = new Rotor;\r\n        run(world: World, dt: number) {\r\n            for (let o of world.rigids) {\r\n                if (!o.invMass) continue;\r\n                o.rotation.norms();\r\n            }\r\n            this.getState(world);\r\n            world.time += dt;\r\n            let dtsqrhalf = dt * dt / 2;\r\n            for (let o of world.rigids) {\r\n                if (o.sleep || !o.position) continue;\r\n                // x1 = x0 + v0 t + a0 t^2/2\r\n                // v1 = v0 + a0 t/2\r\n                o.position.addmulfs(o.velocity, dt).addmulfs(o.acceleration, dtsqrhalf);\r\n                o.velocity.addmulfs(o.acceleration, dt);\r\n                if (!o.rotation) continue;\r\n                o.rotation.mulsl(this._rotor.expset(\r\n                    this._bivec.copy(o.angularVelocity).mulfs(dt).addmulfs(o.angularAcceleration, dtsqrhalf)\r\n                ));\r\n                o.angularVelocity.addmulfs(o.angularAcceleration, dt);\r\n            }\r\n        }\r\n    }\r\n    export class Predict3 extends ForceAccumulator {\r\n        private _bivec1 = new Bivec;\r\n        private _bivec2 = new Bivec;\r\n        private _rotor = new Rotor;\r\n        private _vec = new Vec4;\r\n        run(world: World, dt: number) {\r\n            for (let o of world.rigids) {\r\n                if (!o.invMass) continue;\r\n                o.rotation.norms();\r\n            }\r\n            let prevStates = world.rigids.map(obj => ({\r\n                acceleration: obj.acceleration.clone(),\r\n                angularAcceleration: obj.angularAcceleration.clone(),\r\n            }));\r\n            this.getState(world);\r\n            world.time += dt;\r\n            let dthalf = dt * 0.5;\r\n            let dtsqrdiv6 = dt * dthalf / 3;\r\n            for (let idx = 0, len = world.rigids.length; idx < len; idx++) {\r\n                let o = world.rigids[idx];\r\n                let prevO = prevStates[idx];\r\n                if (o.sleep || !o.position) continue;\r\n                // if we know a1, then:\r\n                // x1 = x0 + v0 t + (2/3 a0 + 1/3 a1) t^2/2\r\n                // v1 = v0 + (a0 + a1) t/2\r\n                // predict a1 = 2a0 - a{-1}, got:\r\n                // x1 = x0 + v0 t + (4/3 a0 - 1/3 a{-1}) t^2/2\r\n                // v1 = v0 + (3/2 a0 - 1/2 a{-1}) t\r\n                o.position.addmulfs(o.velocity, dt).addmulfs(\r\n                    this._vec.copy(prevO.acceleration).addmulfs(o.acceleration, -4), -dtsqrdiv6\r\n                );\r\n                o.velocity.addmulfs(prevO.acceleration.addmulfs(o.acceleration, -3), -dthalf);\r\n                if (!o.rotation) continue;\r\n                o.rotation.mulsl(this._rotor.expset(\r\n                    this._bivec1.copy(o.angularVelocity).mulfs(dt).addmulfs(\r\n                        this._bivec2.copy(prevO.angularAcceleration).addmulfs(o.angularAcceleration, -4), -dtsqrdiv6\r\n                    )\r\n                ));\r\n                o.angularVelocity.addmulfs(prevO.angularAcceleration.addmulfs(o.angularAcceleration, -3), -dthalf);\r\n            }\r\n        }\r\n    }\r\n    interface State {\r\n        position: Vec4;\r\n        rotation: Rotor;\r\n        velocity: Vec4;\r\n        angularVelocity: Bivec;\r\n        acceleration: Vec4;\r\n        angularAcceleration: Bivec;\r\n    }\r\n    export class RK4 extends ForceAccumulator {\r\n        private _bivec1 = new Bivec;\r\n        private _rotor = new Rotor;\r\n        run(world: World, dt: number) {\r\n            for (let o of world.rigids) {\r\n                if (!o.invMass) continue;\r\n                o.rotation.norms();\r\n            }\r\n            let dthalf = dt * 0.5;\r\n            let dtdiv6 = dt / 6;\r\n            let self = this;\r\n            function storeState(states: State[][]) {\r\n                self.getState(world);\r\n                states.push(world.rigids.map(obj => ({\r\n                    position: obj.position?.clone(),\r\n                    rotation: obj.rotation?.clone(),\r\n                    velocity: obj.velocity.clone(),\r\n                    angularVelocity: obj.angularVelocity.clone(),\r\n                    acceleration: obj.acceleration.clone(),\r\n                    angularAcceleration: obj.angularAcceleration.clone(),\r\n                })));\r\n            }\r\n            function loadState(states: State[][], index: number) {\r\n                let state = states[index];\r\n                for (let idx = 0, len = world.rigids.length; idx < len; idx++) {\r\n                    let o = world.rigids[idx];\r\n                    let s = state[idx];\r\n                    o.position?.copy(s?.position);\r\n                    o.rotation?.copy(s?.rotation);\r\n                    o.velocity.copy(s.velocity);\r\n                    o.angularVelocity.copy(s.angularVelocity);\r\n                    o.acceleration.copy(s.acceleration);\r\n                    o.angularAcceleration.copy(s.angularAcceleration);\r\n                }\r\n            }\r\n            let states: State[][] = [];\r\n            storeState(states); // 0: k1 = f(yn, tn)\r\n            for (let o of world.rigids) {\r\n                if (o.sleep || !o.position) continue;\r\n                o.position.addmulfs(o.velocity, dthalf);\r\n                o.velocity.addmulfs(o.acceleration, dthalf);\r\n                if (!o.rotation) continue;\r\n                o.rotation.mulsl(\r\n                    this._rotor.expset(this._bivec1.copy(o.angularVelocity).mulfs(dthalf))\r\n                );\r\n                o.angularVelocity.addmulfs(o.angularAcceleration, dthalf);\r\n            }\r\n            world.time += dthalf;\r\n            storeState(states); // 1: k2 = f(yn + h/2 k1, tn + h/2)\r\n            loadState(states, 0);\r\n            let state = states[1];\r\n            for (let idx = 0, len = world.rigids.length; idx < len; idx++) {\r\n                let o = world.rigids[idx];\r\n                if (o.sleep || !o.position) continue;\r\n                let s = state[idx];\r\n                o.position.addmulfs(s.velocity, dthalf);\r\n                o.velocity.addmulfs(s.acceleration, dthalf);\r\n                if (!o.rotation) continue;\r\n                o.rotation.mulsl(\r\n                    this._rotor.expset(this._bivec1.copy(s.angularVelocity).mulfs(dthalf))\r\n                );\r\n                o.angularVelocity.addmulfs(s.angularAcceleration, dthalf);\r\n            }\r\n            storeState(states); // 2: k3 = f(yn + h/2 k2, tn + h/2)\r\n            loadState(states, 0);\r\n            state = states[2];\r\n            for (let idx = 0, len = world.rigids.length; idx < len; idx++) {\r\n                let o = world.rigids[idx];\r\n                if (o.sleep || !o.position) continue;\r\n                let s = state[idx];\r\n                o.position.addmulfs(s.velocity, dt);\r\n                o.velocity.addmulfs(s.acceleration, dt);\r\n                if (!o.rotation) continue;\r\n                o.rotation.mulsl(\r\n                    this._rotor.expset(this._bivec1.copy(s.angularVelocity).mulfs(dt))\r\n                );\r\n                o.angularVelocity.addmulfs(s.angularAcceleration, dt);\r\n            }\r\n            world.time += dthalf;\r\n            storeState(states); // 3: k4 = f(yn + h k3, tn + h)\r\n            loadState(states, 0);\r\n            for (let idx = 0, len = world.rigids.length; idx < len; idx++) {\r\n                let o = world.rigids[idx];\r\n                if (o.sleep || !o.position) continue;\r\n                let k1 = states[0][idx];\r\n                let k2 = states[1][idx];\r\n                let k3 = states[2][idx];\r\n                let k4 = states[3][idx];\r\n                o.position.addmulfs(\r\n                    k1.velocity.adds(k4.velocity).addmulfs(\r\n                        k2.velocity.adds(k3.velocity), 2\r\n                    ), dtdiv6\r\n                );\r\n                o.velocity.addmulfs(\r\n                    k1.acceleration.adds(k4.acceleration).addmulfs(\r\n                        k2.acceleration.adds(k3.acceleration), 2\r\n                    ), dtdiv6\r\n                );\r\n                if (!o.rotation) continue;\r\n                o.rotation.mulsl(this._rotor.expset(\r\n                    k1.angularVelocity.adds(k4.angularVelocity).addmulfs(\r\n                        k2.angularVelocity.adds(k3.angularVelocity), 2\r\n                    ).mulfs(dtdiv6)\r\n                ));\r\n                o.angularVelocity.addmulfs(\r\n                    k1.angularAcceleration.adds(k4.angularAcceleration).addmulfs(\r\n                        k2.angularAcceleration.adds(k3.angularAcceleration), 2\r\n                    ), dtdiv6\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\nexport abstract class Force {\r\n    abstract apply(time: number): void;\r\n}\r\n/** apply a spring force between object a and b\r\n *  pointA and pointB are in local coordinates,\r\n *  refering connect point of spring's two ends.\r\n *  b can be null for attaching spring to a fixed point in the world.\r\n *  f = k dx - damp * dv */\r\nexport class Spring extends Force {\r\n    a: Rigid;\r\n    pointA: Vec4;\r\n    b: Rigid | null;\r\n    pointB: Vec4;\r\n    k: number;\r\n    damp: number;\r\n    length: number;\r\n    private _vec4f = new Vec4();\r\n    private _vec4a = new Vec4();\r\n    private _vec4b = new Vec4();\r\n    private _bivec = new Bivec();\r\n    constructor(\r\n        a: Rigid, b: Rigid | null,\r\n        pointA: Vec4, pointB: Vec4,\r\n        k: number, length: number = 0, damp: number = 0) {\r\n        super();\r\n        this.a = a; this.b = b; this.k = k; this.damp = damp;\r\n        this.pointA = pointA; this.pointB = pointB;\r\n        this.length = length;\r\n    }\r\n    apply(time: number) {\r\n        const pa = this.a.position;\r\n        const pb = this.b?.position;\r\n        this._vec4a.copy(this.pointA).rotates(this.a.rotation).adds(pa);\r\n        this._vec4b.copy(this.pointB);\r\n        if (this.b) this._vec4b.rotates(this.b.rotation).adds(pb);\r\n        let k = this.k;\r\n        this._vec4f.subset(this._vec4b, this._vec4a);\r\n        if (this.length > 0) {\r\n            let len = this._vec4f.norm();\r\n            k *= (len - this.length) / len;\r\n        }\r\n\r\n        if (this.damp) {\r\n            const len2 = this._vec4f.normsqr();\r\n            if (len2 > 1e-9) {\r\n                const va = vec4Pool.pop();\r\n                this.a.getlinearVelocity(va, this._vec4a);\r\n                const vb = vec4Pool.pop().set();\r\n                if (this.b) {\r\n                    this.b.getlinearVelocity(vb, this._vec4b);\r\n                }\r\n                k -= va.subs(vb).dot(this._vec4f) / len2 * this.damp;\r\n                let oma = va.subs(vb).dot(this._vec4f);\r\n                if (Math.abs(oma) > 0.4) console.log(oma);\r\n                va.pushPool(); vb.pushPool();\r\n            }\r\n        }\r\n        this._vec4a.subs(pa);\r\n        if (this.b) this._vec4b.subs(pb);\r\n        //_vec4 is force from a to b\r\n        this._vec4f.mulfs(k);\r\n        // add force\r\n        this.a.force.adds(this._vec4f);\r\n        if (this.b) this.b.force.subs(this._vec4f);\r\n        // add torque\r\n        this.a.torque.subs(this._bivec.wedgevvset(this._vec4f, this._vec4a));\r\n        if (this.b) this.b.torque.adds(this._bivec.wedgevvset(this._vec4f, this._vec4b));\r\n\r\n    }\r\n}\r\n/** apply a spring torque between object a and b\r\n *  planeA and planeB are in local coordinates, must be simple and normalised,\r\n *  b can be null for attaching spring to a fixed plane in the world.\r\n *  torque = k (planeA x planeB) - damp * dw */\r\nexport class TorqueSpring extends Force {\r\n\r\n    a: Rigid;\r\n    planeA: Bivec;\r\n    b: Rigid | null;\r\n    planeB: Bivec;\r\n    k: number;\r\n    damp: number;\r\n    length: number;\r\n    private _bivf = new Bivec();\r\n    private _biva = new Bivec();\r\n    private _bivb = new Bivec();\r\n    private _bivec = new Bivec();\r\n    constructor(\r\n        a: Rigid, b: Rigid | null, planeA: Bivec, planeB: Bivec,\r\n        k: number, damp: number = 0) {\r\n        super();\r\n        this.a = a; this.b = b; this.k = k; this.damp = damp;\r\n        this.planeA = planeA;\r\n        this.planeB = planeB;\r\n    }\r\n    apply(time: number): void {\r\n        const srcB = this._biva.copy(this.planeA).rotates(this.a.rotation);\r\n        const dstB = this._bivb.copy(this.planeB);\r\n        if (this.b) dstB.rotates(this.b.rotation);\r\n        let k = this.k;\r\n        this._bivf.crossset(srcB, dstB);\r\n        if (this.damp && this._bivf.norm1() > 1e-3) {\r\n            let dw = (this.b ? this._bivec.subset(this.a.angularVelocity, this.b.angularVelocity) : this.a.angularVelocity).dot(this._bivf);\r\n            // if (Math.abs(dw) > 0.2) console.log(dw);\r\n            // if (dw > 0.3) dw = 0.3;\r\n            // if (dw < - 0.3) dw = - 0.3;\r\n            // if (Math.abs(dw) > 0.2) console.log(dw);\r\n            // if(this._bivf.norm()>10) console.log(this._bivf.norm());\r\n            k -= dw / this._bivf.normsqr() * this.damp;\r\n        }\r\n        this._bivf.mulfs(k);\r\n        this.a.torque.adds(this._bivf);\r\n        if (this.b) this.b.torque.subs(this._bivf);\r\n    }\r\n}\r\nexport class Damping extends Force {\r\n    objects: Rigid[] = [];\r\n    linearFactor: number;\r\n    // assume angular damp matrix(6x6) has the same eigen vector with inertia matrix\r\n    // this is diagonalized angular damp matrix\r\n    angularFactor: Bivec;\r\n    // todo isotopy simplification\r\n\r\n    private _bivec = new Bivec();\r\n    apply(time: number) {\r\n        for (let o of this.objects) {\r\n            o.force.addmulfs(o.velocity, -this.linearFactor);\r\n            o.torque.subs(mulBivec(this._bivec,\r\n                this._bivec.copy(o.angularVelocity).rotatesconj(o.rotation), this.angularFactor\r\n            ).rotates(o.rotation));\r\n        }\r\n    }\r\n    constructor(linearFactor: number, angularFactor: number | Bivec) {\r\n        super();\r\n        this.linearFactor = linearFactor;\r\n        this.angularFactor = angularFactor instanceof Bivec ? angularFactor : new Bivec(\r\n            angularFactor, angularFactor, angularFactor, angularFactor, angularFactor, angularFactor\r\n        );\r\n    }\r\n    add(...objects: Rigid[]) {\r\n        for (let o of objects) {\r\n            this.objects.push(o);\r\n        }\r\n    }\r\n}\r\nexport type ElectricCharge = { rigid: Rigid | null, position: Vec4, worldPos?: Vec4, charge: number };\r\nexport type ElectricDipole = { rigid: Rigid | null, position: Vec4, worldPos?: Vec4, moment: Vec4, worldMoment?: Vec4 };\r\nexport type MagneticDipole = { rigid: Rigid | null, position: Vec4, worldPos?: Vec4, moment: Bivec, worldMoment?: Bivec };\r\nexport type CurrentElement = { rigid: Rigid | null, position: Vec4, worldPos?: Vec4, current: Vec4 };\r\nexport type CurrentCircuit = { rigid: Rigid | null, position: Vec4, worldPos?: Vec4, current: Vec4, radius: number };\r\nexport class MaxWell extends Force {\r\n    electricCharge: ElectricCharge[] = [];\r\n    electricDipole: ElectricDipole[] = [];\r\n    magneticDipole: MagneticDipole[] = [];\r\n    currentElement: CurrentElement[] = [];\r\n    currentCircuit: CurrentCircuit[] = [];\r\n    permittivity = 8.854187817e-12;\r\n    permeability = Math.PI * 4e-7;\r\n    constantElectricField = new Vec4;\r\n    /** magnetic field direction is defined by positive charge's velocity wedge it's lorentz force */\r\n    constantMagneticField = new Bivec;\r\n    private _vecE = new Vec4;\r\n    private _vecdE = new Mat4().set();\r\n    private _vecB = new Bivec;\r\n    private _vecdB = new Matrix(4, 6);\r\n    private _vecP = new Vec4;\r\n    addElectricCharge(s: ElectricCharge) {\r\n        this.electricCharge.push(s);\r\n    }\r\n    addElectricDipole(s: ElectricDipole) {\r\n        this.electricDipole.push(s);\r\n    }\r\n    addMagneticDipole(s: MagneticDipole) {\r\n        this.magneticDipole.push(s);\r\n    }\r\n    getEAt(p: Vec4, dE: boolean, ignore: Rigid | Vec4 | undefined) {\r\n        let electricField = this._vecE.copy(this.constantElectricField);\r\n        this._vecdE.set();\r\n        for (let s of this.electricCharge) {\r\n            if (ignore === s.position || ignore === s?.rigid) continue;\r\n            this.addEOfElectricCharge(electricField, dE ? this._vecdE : undefined, p, s);\r\n        }\r\n        for (let s of this.electricDipole) {\r\n            if (ignore === s.position || ignore === s?.rigid) continue;\r\n            this.addEOfElectricDipole(electricField, dE ? this._vecdE : undefined, p, s);\r\n        }\r\n        return this._vecE;\r\n    }\r\n    getBAt(p: Vec4, dB: boolean, ignore: Rigid | Vec4 | undefined) {\r\n        let magneticField = this._vecB.copy(this.constantMagneticField);\r\n        this._vecdB.elem.fill(0);\r\n        for (let s of this.magneticDipole) {\r\n            if (ignore === s.position || ignore === s?.rigid) continue;\r\n            this.addBOfMagneticDipole(magneticField, dB ? this._vecdB : undefined, p, s);\r\n        }\r\n        return magneticField;\r\n    }\r\n    apply(time: number): void {\r\n        for (let q of this.electricCharge) {\r\n            q.worldPos ??= new Vec4;\r\n            if (q.rigid)\r\n                q.worldPos.copy(q.position).rotates(q.rigid.rotation).adds(q.rigid.position);\r\n            else\r\n                q.worldPos.copy(q.position);\r\n        }\r\n        for (let q of this.electricDipole) {\r\n            q.worldPos ??= new Vec4;\r\n            q.worldMoment ??= new Vec4;\r\n            if (q.rigid) {\r\n                q.worldPos.copy(q.position).rotates(q.rigid.rotation).adds(q.rigid.position);\r\n                q.worldMoment.copy(q.moment).rotates(q.rigid.rotation);\r\n            } else {\r\n                q.worldMoment.copy(q.moment);\r\n            }\r\n        }\r\n        for (let q of this.magneticDipole) {\r\n            q.worldPos ??= new Vec4;\r\n            q.worldMoment ??= new Bivec;\r\n            if (q.rigid) {\r\n                q.worldPos.copy(q.position).rotates(q.rigid.rotation).adds(q.rigid.position);\r\n                q.worldMoment.copy(q.moment).rotates(q.rigid.rotation);\r\n            } else {\r\n                q.worldMoment.copy(q.moment);\r\n            }\r\n        }\r\n        // outter loop: test point, inner loop: source point\r\n\r\n        let force = this._vecP;\r\n        for (let q of this.electricCharge) {\r\n            if (!q.rigid || !q.rigid.mass) continue;\r\n            this.getEAt(q.worldPos!, false, q.rigid ?? q.position);\r\n            this.getBAt(q.worldPos!, false, undefined);\r\n            let zeroB = (this._vecB.norm1() === 0);\r\n            let zeroTorque = q.position.norm1() === 0;\r\n            if (zeroB && zeroTorque) {\r\n                q.rigid.force.addmulfs(this._vecE, q.charge);\r\n                continue;\r\n            }\r\n            if (!zeroB) {\r\n                if (zeroTorque) {\r\n                    force.copy(q.rigid.velocity);\r\n                } else {\r\n                    q.rigid.getlinearVelocity(force, q.worldPos!);\r\n                }\r\n                // F = q(E+B.v)\r\n                force.dotbsr(this._vecB).adds(this._vecE).mulfs(q.charge);\r\n            } else {\r\n                force.copy(this._vecE).mulfs(q.charge);\r\n            }\r\n            q.rigid.force.adds(force);\r\n            q.rigid.torque.adds(this._vecB.wedgevvset(\r\n                this._vecE.subset(q.worldPos!, q.rigid.position), force\r\n            ));\r\n        }\r\n        let v4 = force;\r\n        let biv = bivecPool.pop();\r\n        for (let q of this.electricDipole) {\r\n            if (!q.rigid || !q.rigid.mass) continue;\r\n            this.getEAt(q.worldPos!, true, q.rigid ?? q.position);\r\n            let zeroTorque = q.position.norm1() === 0;\r\n            v4.mulmatvset(this._vecdE, q.worldMoment!);\r\n            biv.wedgevvset(this._vecE, q.worldMoment!);\r\n            q.rigid.torque.adds(biv);\r\n            q.rigid.force.adds(v4);\r\n            if (zeroTorque) continue;\r\n            q.rigid.torque.adds(this._vecB.wedgevvset(\r\n                this._vecE.subset(q.worldPos!, q.rigid.position), v4\r\n            ));\r\n        }\r\n\r\n        for (let q of this.magneticDipole) {\r\n            if (!q.rigid || !q.rigid.mass) continue;\r\n            this.getBAt(q.worldPos!, true, q.rigid ?? q.position);\r\n            let zeroTorque = q.position.norm1() === 0;\r\n\r\n            let db = this._vecdB.elem;\r\n            v4.dotbset(Vec4.x, q.worldMoment!);\r\n            v4.dotbset(v4, biv.set(db[0], db[4], db[8], db[12], db[16], db[20]));\r\n            q.rigid.force.adds(v4);\r\n            v4.dotbset(Vec4.y, q.worldMoment!);\r\n            v4.dotbset(v4, biv.set(db[1], db[5], db[9], db[13], db[17], db[21]));\r\n            q.rigid.force.adds(v4);\r\n            v4.dotbset(Vec4.z, q.worldMoment!);\r\n            v4.dotbset(v4, biv.set(db[2], db[6], db[10], db[14], db[18], db[22]));\r\n            q.rigid.force.adds(v4);\r\n            v4.dotbset(Vec4.w, q.worldMoment!);\r\n            v4.dotbset(v4, biv.set(db[3], db[7], db[11], db[15], db[19], db[23]));\r\n            q.rigid.force.adds(v4);\r\n\r\n            biv.crossset(q.worldMoment!, this._vecB);\r\n            q.rigid.torque.adds(biv);\r\n            if (zeroTorque) continue;\r\n            q.rigid.torque.adds(this._vecB.wedgevvset(\r\n                this._vecE.subset(q.worldPos!, q.rigid.position), v4\r\n            ));\r\n        }\r\n        biv.pushPool();\r\n    }\r\n    private addEOfElectricCharge(vecE: Vec4, dE: Mat4 | undefined, p: Vec4, s: ElectricCharge) {\r\n\r\n        let r = vec4Pool.pop().subset(p, s.worldPos!);\r\n        let r2 = 1 / r.normsqr();\r\n        let qr4 = s.charge * r2 * r2;\r\n        vecE.addmulfs(r, qr4);\r\n        if (!dE) { r.pushPool(); return; }\r\n        let qr6_neg4 = -4 * qr4 * r2;\r\n        let qrr = r.mulfs(qr6_neg4);\r\n        let xy = qrr.x * r.y, xz = qrr.x * r.z, xt = qrr.x * r.w, yz = qrr.y * r.z, yt = qrr.y * r.w, zt = qrr.z * r.w;\r\n        let mat = mat4Pool.pop();\r\n        dE.adds(mat.set(\r\n            qr4 + qrr.x * r.x, xy, xz, xt,\r\n            xy, qr4 + qrr.y * r.y, yz, yt,\r\n            xz, yz, qr4 + qrr.z * r.z, zt,\r\n            xt, yt, zt, qr4 + qrr.w * r.w\r\n        ));\r\n        mat.pushPool();\r\n        r.pushPool();\r\n    }\r\n    private addBOfMagneticDipole(vecB: Bivec, dB: Matrix | undefined, pos: Vec4, s: MagneticDipole) {\r\n        let k = vec4Pool.pop().subset(pos, s.worldPos!);\r\n        let q = s.worldMoment!.dual();\r\n        let x = k.x, y = k.y, z = k.z, w = k.w;\r\n        let xx = x * x, yy = y * y, zz = z * z, ww = w * w;\r\n        let kxy = q.xy, kxz = q.xz, kxw = q.xw, kyz = q.yz, kyw = q.yw, kzw = q.zw;\r\n        let kyx = -q.xy, kzx = -q.xz, kwx = -q.xw, kzy = -q.yz, kwy = -q.yw, kwz = -q.zw;\r\n        let r2 = xx + yy + zz + ww;\r\n        let kxy2 = kzw * (-xx - yy + zz + ww);\r\n        let kxz2 = kyw * (-xx + yy - zz + ww);\r\n        let kxw2 = kyz * (-xx + yy + zz - ww);\r\n        let kyz2 = kxw * (xx - yy - zz + ww);\r\n        let kyw2 = kxz * (xx - yy + zz - ww);\r\n        let kzw2 = kxy * (xx + yy - zz - ww);\r\n\r\n        let rr = 1 / r2;\r\n        let rr2 = rr * rr;\r\n        let rr34 = 4 * rr2 * rr;\r\n        let rr4 = rr34 * rr;\r\n        let xy = x * y,\r\n            xz = x * z,\r\n            xw = x * w,\r\n            yz = y * z,\r\n            yw = y * w,\r\n            zw = z * w;\r\n\r\n        vecB.xy += rr34 * ((-kxz * xw - kyz * yw + kxw * xz + kyw * yz) + 0.5 * kxy2);\r\n        vecB.xz += -rr34 * ((-kxy * xw - kzy * zw + kxw * xy + kzw * yz) + 0.5 * kxz2);\r\n        vecB.xw += -rr34 * ((-kxz * xy - kwz * yw + kxy * xz + kwy * zw) - 0.5 * kxw2);\r\n        vecB.yz += rr34 * ((kxy * yw - kzx * zw + kyw * xy + kzw * xz) + 0.5 * kyz2);\r\n        vecB.yw += -rr34 * ((kxy * yz - kwx * zw + kyz * xy - kzw * xw) + 0.5 * kyw2);\r\n        vecB.zw += rr34 * ((kxz * yz - kwx * yw - kyz * xz - kyw * xw) + 0.5 * kzw2);\r\n        if (!dB) return;\r\n        let r2m6xx = r2 - 6 * xx;\r\n        let r2m6yy = r2 - 6 * yy;\r\n        let r2m6zz = r2 - 6 * zz;\r\n        let r2m6ww = r2 - 6 * ww;\r\n        x *= rr4; y *= rr4; z *= rr4; w *= rr4;\r\n        xy *= 6; xz *= 6; xw *= 6; yz *= 6; yw *= 6; zw *= 6;\r\n        let kxy_x = kxy * x, kxz_x = kxz * x, kxw_x = kxw * x, kyz_x = kyz * x, kyw_x = kyw * x, kzw_x = kzw * x;\r\n        let kxy_y = kxy * y, kxz_y = kxz * y, kxw_y = kxw * y, kyz_y = kyz * y, kyw_y = kyw * y, kzw_y = kzw * y;\r\n        let kxy_z = kxy * z, kxz_z = kxz * z, kxw_z = kxw * z, kyz_z = kyz * z, kyw_z = kyw * z, kzw_z = kzw * z;\r\n        let kxy_w = kxy * w, kxz_w = kxz * w, kxw_w = kxw * w, kyz_w = kyz * w, kyw_w = kyw * w, kzw_w = kzw * w;\r\n\r\n        dB!.adds(new Matrix(4, 6).setElements(\r\n            (xy * (kyz_w - kyw_z) + 2 * kzw_x * (xx + yy - 2 * (zz + ww)) + (kxw_z - kxz_w) * (r2m6xx)),\r\n            (xy * (kxz_w - kxw_z) + 2 * kzw_y * (xx + yy - 2 * (zz + ww)) + (kyw_z - kyz_w) * (r2m6yy)),\r\n            (zw * (kxz_x + kyz_y) - 2 * kzw_z * (zz + ww - 2 * (xx + yy)) + (kxw_x + kyw_y) * (r2m6zz)),\r\n            - (zw * (kxw_x + kyw_y) + 2 * kzw_w * (zz + ww - 2 * (xx + yy)) + (kxz_x + kyz_y) * (r2m6ww)),\r\n\r\n            - (xz * (-kyz_w - kzw_y) + 2 * kyw_x * (xx + zz - 2 * (yy + ww)) + (kxw_y - kxy_w) * (r2m6xx)),\r\n            - (yw * (kxy_x - kyz_z) - 2 * kyw_y * (yy + ww - 2 * (xx + zz)) + (kxw_x + kzw_z) * (r2m6yy)),\r\n            - (xz * (kxy_w - kxw_y) + 2 * kyw_z * (xx + zz - 2 * (yy + ww)) + (kzw_y + kyz_w) * (r2m6zz)),\r\n            (yw * (kxw_x + kzw_z) + 2 * kyw_w * (yy + ww - 2 * (xx + zz)) + (kxy_x - kyz_z) * (r2m6ww)),\r\n\r\n            - (xw * (-kzw_y + kyw_z) - 2 * kyz_x * (xx + ww - 2 * (zz + yy)) + (kxy_z - kxz_y) * (r2m6xx)),\r\n            (yz * (kxy_x - kyw_w) - 2 * kyz_y * (zz + yy - 2 * (xx + ww)) + (kxz_x - kzw_w) * (r2m6yy)),\r\n            -(yz * (kxz_x - kzw_w) + 2 * kyz_z * (zz + yy - 2 * (xx + ww)) + (kxy_x - kyw_w) * (r2m6zz)),\r\n            - (xw * (kxz_y - kxy_z) - 2 * kyz_w * (xx + ww - 2 * (zz + yy)) + (-kyw_z + kzw_y) * (r2m6ww)),\r\n\r\n            (xw * (-kxy_y - kxz_z) - 2 * kxw_x * (xx + ww - 2 * (yy + zz)) + (kyw_y + kzw_z) * (r2m6xx)),\r\n            (yz * (-kxz_w - kzw_x) + 2 * kxw_y * (yy + zz - 2 * (xx + ww)) + (kyw_x + kxy_w) * (r2m6yy)),\r\n            (yz * (-kxy_w - kyw_x) + 2 * kxw_z * (yy + zz - 2 * (xx + ww)) + (kzw_x + kxz_w) * (r2m6zz)),\r\n            - (xw * (kyw_y + kzw_z) + 2 * kxw_w * (xx + ww - 2 * (yy + zz)) + (-kxy_y - kxz_z) * (r2m6ww)),\r\n\r\n            - (xz * (-kxy_y - kxw_w) - 2 * kxz_x * (xx + zz - 2 * (yy + ww)) + (kyz_y - kzw_w) * (r2m6xx)),\r\n            - (yw * (-kxw_z + kzw_x) + 2 * kxz_y * (yy + ww - 2 * (xx + zz)) + (kyz_x + kxy_z) * (r2m6yy)),\r\n            (xz * (kyz_y - kzw_w) + 2 * kxz_z * (xx + zz - 2 * (yy + ww)) + (-kxy_y - kxw_w) * (r2m6zz)),\r\n            - (yw * (-kxy_z - kyz_x) + 2 * kxz_w * (yy + ww - 2 * (xx + zz)) + (-kzw_x + kxw_z) * (r2m6ww)),\r\n\r\n            (xy * (-kxz_z - kxw_w) - 2 * kxy_x * (xx + yy - 2 * (zz + ww)) + (-kyz_z - kyw_w) * (r2m6xx)),\r\n            - (xy * (-kyz_z - kyw_w) + 2 * kxy_y * (xx + yy - 2 * (zz + ww)) + (-kxz_z - kxw_w) * (r2m6yy)),\r\n            (zw * (-kxw_y + kyw_x) + 2 * kxy_z * (zz + ww - 2 * (xx + yy)) + (-kyz_x + kxz_y) * (r2m6zz)),\r\n            (zw * (-kxz_y + kyz_x) + 2 * kxy_w * (zz + ww - 2 * (xx + yy)) + (-kyw_x + kxw_y) * (r2m6ww))\r\n        ));\r\n    }\r\n    private addEOfElectricDipole(vecE: Vec4, dE: Mat4 | undefined, pos: Vec4, s: ElectricDipole) {\r\n        let r = vec4Pool.pop().subset(pos, s.worldPos!);\r\n        let p = s.worldMoment!;\r\n        // u =  r.s / (r.r)^2\r\n        let pxx = p.x * r.x, pyy = p.y * r.y, pzz = p.z * r.z, pww = p.w * r.w;\r\n        let p2 = pxx + pyy + pzz + pww;\r\n        let rxx = r.x * r.x, ryy = r.y * r.y, rzz = r.z * r.z, rww = r.w * r.w;\r\n        let r2 = rxx + ryy + rzz + rww;\r\n        let r2inv = 1 / r2;\r\n        let r4 = r2inv * r2inv;\r\n        let p2_r2_4 = 4 * p2 * r2inv;\r\n        vecE.x += r4 * (p.x - p2_r2_4 * r.x);\r\n        vecE.y += r4 * (p.y - p2_r2_4 * r.y);\r\n        vecE.z += r4 * (p.z - p2_r2_4 * r.z);\r\n        vecE.w += r4 * (p.w - p2_r2_4 * r.w);\r\n\r\n        if (!dE) return; // if no need for calc dE\r\n        let r8_neg4 = -4 * r4 * r4;\r\n        let p2_6 = p2 * 6;\r\n\r\n        let xy = r8_neg4 * ((p.x * r.y + p.y * r.x) * r2 - p2_6 * r.x * r.y),\r\n            xz = r8_neg4 * ((p.x * r.z + p.z * r.x) * r2 - p2_6 * r.x * r.z),\r\n            xw = r8_neg4 * ((p.x * r.w + p.w * r.x) * r2 - p2_6 * r.x * r.w),\r\n            yz = r8_neg4 * ((p.y * r.z + p.z * r.y) * r2 - p2_6 * r.y * r.z),\r\n            yw = r8_neg4 * ((p.y * r.w + p.w * r.y) * r2 - p2_6 * r.y * r.w),\r\n            zw = r8_neg4 * ((p.z * r.w + p.w * r.z) * r2 - p2_6 * r.z * r.w);\r\n        let mat = mat4Pool.pop();\r\n        dE.adds(mat.set(\r\n            (p2 * (r2 - 6 * rxx) + 2 * pxx * r2) * r8_neg4, xy, xz, xw,\r\n            xy, (p2 * (r2 - 6 * ryy) + 2 * pyy * r2) * r8_neg4, yz, yw,\r\n            xz, yz, (p2 * (r2 - 6 * rzz) + 2 * pzz * r2) * r8_neg4, zw,\r\n            xw, yw, zw, (p2 * (r2 - 6 * rww) + 2 * pww * r2) * r8_neg4\r\n        ).negs());\r\n        mat.pushPool();\r\n        r.pushPool();\r\n\r\n    }\r\n}\r\nexport class Gravity extends Force {\r\n    _vecG = new Vec4;\r\n    rigids: Rigid[] = [];\r\n    lawIndex = -3;\r\n    gravitonMass = 0;\r\n    constructor(lawIndex = -3, gravitonMass = 0) {\r\n        super();\r\n        this.lawIndex = lawIndex;\r\n        this.gravitonMass = gravitonMass;\r\n    }\r\n    gain = 10;\r\n    add(s: Rigid) {\r\n        this.rigids.push(s);\r\n    }\r\n    getGAt(p: Vec4, ignore: Rigid | Vec4 | undefined) {\r\n        this._vecG.set();\r\n        for (let s of this.rigids) {\r\n            if (ignore === s.position || ignore === s) continue;\r\n            this.addGOfMass(this._vecG, p, s);\r\n        }\r\n        return this._vecG;\r\n    }\r\n    apply(time: number): void {\r\n\r\n        // outter loop: test point, inner loop: source point\r\n\r\n        for (let q of this.rigids) {\r\n            if (!q || !q.mass) continue;\r\n            q.force.addmulfs(this.getGAt(q.position, q), q.mass);\r\n        }\r\n    }\r\n    data = [-247.562, -213.642, -185.622, -162.273, -142.662, -126.071, -111.941, -99.8327, -89.3977, -80.357, -72.4858, -65.6012, -59.5538, -54.2202, -49.4985, -45.3036, -41.5642, -38.2204, -35.2212, -32.5236, -30.0908, -27.891, -25.8973, -24.0861, -22.4371, -20.9326, -19.5572, -18.2974, -17.1415, -16.0788, -15.1004, -14.198, -13.3644, -12.5933, -11.879, -11.2163, -10.6007, -10.0282, -9.495, -8.99788, -8.53384, -8.10021, -7.69457, -7.3147, -6.95861, -6.62449, -6.31069, -6.01571, -5.73816, -5.4768, -5.23047, -4.99813, -4.7788, -4.5716, -4.37572, -4.1904, -4.01494, -3.84872, -3.69114, -3.54165, -3.39975, -3.26497, -3.13688, -3.01508, -2.89918, -2.78885, -2.68376, -2.5836, -2.4881, -2.39699, -2.31003, -2.22699, -2.14766, -2.07183, -1.99932, -1.92995, -1.86357, -1.8, -1.73911, -1.68077, -1.62484, -1.5712, -1.51974, -1.47036, -1.42295, -1.37742, -1.33367, -1.29163, -1.25121, -1.21234, -1.17494, -1.13896, -1.10432, -1.07097, -1.03884, -1.00789, -0.97806, -0.949304, -0.921575, -0.894829, -0.869024, -0.844121, -0.820083, -0.796872, -0.774456, -0.752801, -0.731877, -0.711655, -0.692106, -0.673203, -0.654921, -0.637236, -0.620125, -0.603565, -0.587535, -0.572016, -0.556987, -0.542431, -0.528329, -0.514665, -0.501423, -0.488587, -0.476143, -0.464076, -0.452373, -0.44102, -0.430007, -0.419319, -0.408947, -0.398879, -0.389104, -0.379613, -0.370395, -0.361442, -0.352745, -0.344294, -0.336082, -0.328101, -0.320343, -0.312801, -0.305467, -0.298335, -0.291399, -0.284652, -0.278088, -0.271702, -0.265487, -0.259438, -0.25355, -0.247819, -0.242238, -0.236804, -0.231513, -0.226359, -0.221338, -0.216447, -0.211682, -0.207038, -0.202513, -0.198103, -0.193803, -0.189612, -0.185526, -0.181542, -0.177656, -0.173867, -0.170171, -0.166566, -0.163048, -0.159617, -0.156268, -0.153, -0.149811, -0.146699, -0.14366, -0.140694, -0.137798, -0.134971, -0.13221, -0.129513, -0.12688, -0.124308, -0.121795, -0.119341, -0.116942, -0.114599, -0.11231, -0.110072, -0.107886, -0.105749, -0.10366, -0.101617, -0.0996211, -0.0976693, -0.0957608, -0.0938947, -0.0920698, -0.0902851, -0.0885396, -0.0868323, -0.0851623, -0.0835285, -0.0819302, -0.0803665, -0.0788364, -0.0773392, -0.075874, -0.0744402, -0.0730369, -0.0716633, -0.0703189, -0.0690028, -0.0677143, -0.066453, -0.065218, -0.0640088, -0.0628247, -0.0616652, -0.0605297, -0.0594176, -0.0583284, -0.0572615, -0.0562164, -0.0551927, -0.0541898, -0.0532073, -0.0522447, -0.0513015, -0.0503772, -0.0494716, -0.0485841, -0.0477143, -0.0468619, -0.0460264, -0.0452075, -0.0444047, -0.0436179, -0.0428465, -0.0420902, -0.0413488, -0.0406218, -0.0399091, -0.0392102, -0.0385248, -0.0378527, -0.0371936, -0.0365472, -0.0359132, -0.0352914, -0.0346815, -0.0340832, -0.0334963, -0.0329206, -0.0323557, -0.0318016, -0.0312579, -0.0307245, -0.0302011, -0.0296875, -0.0291835, -0.0286889, -0.0282036, -0.0277273, -0.0272598, -0.026801, -0.0263506, -0.0259086, -0.0254746, -0.0250487, -0.0246306, -0.0242201, -0.0238171, -0.0234214, -0.023033, -0.0226516, -0.0222771, -0.0219094, -0.0215483, -0.0211937, -0.0208455, -0.0205035, -0.0201676, -0.0198378, -0.0195138, -0.0191956, -0.0188831, -0.0185761, -0.0182745, -0.0179783, -0.0176873, -0.0174014, -0.0171206, -0.0168446, -0.0165736, -0.0163072, -0.0160455, -0.0157884, -0.0155357, -0.0152874, -0.0150434, -0.0148037, -0.0145681, -0.0143365, -0.014109, -0.0138853, -0.0136655, -0.0134495, -0.0132371, -0.0130284, -0.0128232, -0.0126216, -0.0124233, -0.0122285, -0.0120369, -0.0118485, -0.0116634, -0.0114814, -0.0113024, -0.0111264, -0.0109534, -0.0107833, -0.0106161, -0.0104516, -0.0102899, -0.0101309, -0.00997447, -0.00982069, -0.00966946, -0.00952073, -0.00937446, -0.00923061, -0.00908912, -0.00894997, -0.00881311, -0.00867849, -0.00854608, -0.00841584, -0.00828773, -0.0081617, -0.00803774, -0.00791579, -0.00779582, -0.00767781, -0.0075617, -0.00744748, -0.0073351, -0.00722454, -0.00711576, -0.00700874, -0.00690343, -0.00679982, -0.00669787, -0.00659755, -0.00649884, -0.0064017, -0.00630612, -0.00621206, -0.0061195, -0.00602841, -0.00593876, -0.00585054, -0.00576372, -0.00567827, -0.00559417, -0.00551139, -0.00542992, -0.00534974, -0.00527081, -0.00519313, -0.00511666, -0.0050414, -0.00496731, -0.00489437, -0.00482258, -0.00475191, -0.00468234, -0.00461385, -0.00454642, -0.00448004, -0.00441469, -0.00435036, -0.00428701, -0.00422465, -0.00416325, -0.0041028, -0.00404328, -0.00398467, -0.00392697, -0.00387015, -0.0038142, -0.00375911, -0.00370486, -0.00365144, -0.00359884, -0.00354704, -0.00349602, -0.00344579, -0.00339632, -0.0033476, -0.00329962, -0.00325236, -0.00320583, -0.00315999, -0.00311485, -0.00307039, -0.0030266, -0.00298347, -0.00294099, -0.00289915, -0.00285794, -0.00281734, -0.00277736, -0.00273797, -0.00269917, -0.00266095, -0.00262331, -0.00258622, -0.00254969, -0.0025137, -0.00247824, -0.00244332, -0.00240891, -0.00237501, -0.00234161, -0.00230871, -0.0022763, -0.00224436, -0.0022129, -0.0021819, -0.00215135, -0.00212126, -0.00209161, -0.0020624, -0.00203361, -0.00200525, -0.0019773, -0.00194976, -0.00192263, -0.00189589, -0.00186954, -0.00184357, -0.00181799, -0.00179278, -0.00176793, -0.00174345, -0.00171932, -0.00169554, -0.00167211, -0.00164902, -0.00162626, -0.00160383, -0.00158172, -0.00155994, -0.00153846, -0.0015173, -0.00149645, -0.00147589, -0.00145563, -0.00143566, -0.00141598, -0.00139658, -0.00137746, -0.00135861, -0.00134003, -0.00132172, -0.00130367, -0.00128587, -0.00126834, -0.00125105, -0.00123401, -0.00121721, -0.00120065, -0.00118432, -0.00116823, -0.00115236, -0.00113672, -0.00112131, -0.00110611, -0.00109112, -0.00107635, -0.00106179];\r\n    private addGOfMass(vecG: Vec4, p: Vec4, s: Rigid) {\r\n        let r = vec4Pool.pop().subset(p, s.position);\r\n        let r2 = 1 / r.normsqr();\r\n        let qr4 = this.lawIndex === -3 || this.lawIndex === -2 ? -s.mass * r2 * r2 : 0;\r\n        if (this.lawIndex === -2) qr4 *= r.norm();\r\n        if (this.lawIndex === -3 && this.gravitonMass !== 0) {\r\n            const scaleFactor = 1.5;\r\n            const x = r.norm() * scaleFactor;\r\n            let res = 0;\r\n            if (x >= 0.2 && x <= 5) {\r\n                const idx = (x - 0.2) * 100;\r\n                const index = Math.floor(idx);\r\n                res = this.data[this.data.length - 1];\r\n                if (index >= 0 && index < this.data.length - 1) {\r\n                    res = this.data[index] * (idx - index) + this.data[index + 1] * (index + 1 - idx);\r\n                }\r\n            } else if (x > 5) {\r\n                const rx = 1 / x;\r\n                res = Math.exp(-x) * Math.sqrt(rx) * rx * (-1.25331 - rx * (2.34996 + rx * 1.02811));\r\n            } else {\r\n                const rx = 1 / x;\r\n                res = rx * (0.5 - 2 * rx * rx) + x * (-0.865932 + Math.log(x)) * 0.125;\r\n            };\r\n            qr4 += res / r.norm() * this.gravitonMass;\r\n        }\r\n        vecG.addmulfs(r, qr4 * this.gain);\r\n        r.pushPool();\r\n        return;\r\n    }\r\n}","import { bivecPool } from \"../math/algebra/bivec.js\";\r\nimport { Vec4, vec4Pool } from \"../math/algebra/vec4.js\";\r\n\r\n// Convex Collision Detection algorithms (GJK Distance + EPA)\r\n        const maxEpaStep = 16;\r\n        const maxGjkStep = 32;\r\n        type Convex = Vec4[];\r\n        function support(c: Convex, dir: Vec4) {\r\n            let support = -Infinity;\r\n            let point: Vec4;\r\n            for (let p of c) {\r\n                let value = p.dot(dir);\r\n                if (value > support) {\r\n                    support = value;\r\n                    point = p;\r\n                }\r\n            }\r\n            return point!;\r\n        }\r\n        function supportNeg(c: Convex, dir: Vec4) {\r\n            let support = -Infinity;\r\n            let point: Vec4;\r\n            for (let p of c) {\r\n                let value = -p.dot(dir);\r\n                if (value > support) {\r\n                    support = value;\r\n                    point = p;\r\n                }\r\n            }\r\n            return point!;\r\n        }\r\n        function supportDiff(c1: Convex, c2: Convex, dir: Vec4) {\r\n            if (!dir) {\r\n                console.error(\"Convex Collision Detector: Undefined support direction\");\r\n            }\r\n            let support = -Infinity;\r\n            let point1: Vec4;\r\n            let point2: Vec4;\r\n            for (let p of c1) {\r\n                let value = p.dot(dir);\r\n                if (value > support) {\r\n                    support = value;\r\n                    point1 = p;\r\n                }\r\n            }\r\n            support = -Infinity;\r\n            for (let p of c2) {\r\n                let value = -p.dot(dir);\r\n                if (value > support) {\r\n                    support = value;\r\n                    point2 = p;\r\n                }\r\n            }\r\n            return [point1!, point2!];\r\n        }\r\n        function supportDiffTest(c1: Convex, c2: Convex, dir: Vec4) {\r\n            let support1 = -Infinity;\r\n            let point1: Vec4;\r\n            let point2: Vec4;\r\n            for (let p of c1) {\r\n                let value = p.dot(dir);\r\n                if (value > support1) {\r\n                    support1 = value;\r\n                    point1 = p;\r\n                }\r\n            }\r\n            let support2 = -Infinity;\r\n            for (let p of c2) {\r\n                let value = -p.dot(dir);\r\n                if (value > support2) {\r\n                    support2 = value;\r\n                    point2 = p;\r\n                }\r\n            }\r\n            if (support1 + support2 < 0) return [];\r\n            return [point1!, point2!];\r\n        }\r\n        // /** get closest point on line segment ab */\r\n        // function closestToOrigin2(a: Vec4, b: Vec4) {\r\n        //     let adb = a.dot(b);\r\n        //     let la = b.normsqr() - adb; if (la < 0) return b;\r\n        //     let lb = a.normsqr() - adb; if (lb < 0) return a;\r\n        //     return vec4Pool.pop().set().addmulfs(a, la).addmulfs(b, lb).divfs(la + lb);\r\n        // }\r\n        // /** get line ab's normal pointing to origin, 20 muls */\r\n        // function normalToOrigin2(out: Vec4, a: Vec4, b: Vec4) {\r\n        //     let adb = a.dot(b);\r\n        //     let la = b.normsqr() - adb;\r\n        //     let lb = a.normsqr() - adb;\r\n        //     return out.set().addmulfs(a, -la).addmulfs(b, -lb);\r\n        // }\r\n        // /** get plane abc's normal point to origin, 36 muls */\r\n        // function normalToOrigin3(out: Vec4, a: Vec4, b: Vec4, c: Vec4) {\r\n        //     let vec = vec4Pool.pop();\r\n        //     let biv = bivecPool.pop().wedgevvset(\r\n        //         out.subset(b, a), vec.subset(c, a)\r\n        //     );\r\n        //     vec.pushPool();\r\n        //     out.wedgevbset(a, biv).wedgevbset(out, biv);\r\n        //     biv.pushPool();\r\n        //     return out;\r\n        // }\r\n        function getClosestPointOrNormal2(a: Vec4, b: Vec4) {\r\n            let adb = a.dot(b);\r\n            let la = b.normsqr() - adb; if (la < 0) return b;\r\n            let lb = a.normsqr() - adb; if (lb < 0) return a;\r\n            return vec4Pool.pop().set().addmulfs(a, -la).addmulfs(b, -lb);\r\n        }\r\n        function getClosestPointOrNormal3(a: Vec4, b: Vec4, c: Vec4) {\r\n            let ca = vec4Pool.pop().subset(a, c);\r\n            let cb = vec4Pool.pop().subset(b, c);\r\n            if (c.dot(ca) > 0 && c.dot(cb) > 0) {\r\n                vec4Pool.push(ca, cb);\r\n                return [c];\r\n            }\r\n            let biv = bivecPool.pop().wedgevvset(ca, cb);\r\n            if (ca.dotbset(ca, biv).dot(c) > 0) {\r\n                vec4Pool.push(ca, cb);\r\n                return [a, c];\r\n            }\r\n            // cb's sign is not consisted with ca's because of biv = ca x cb\r\n            if (cb.dotbset(cb, biv).dot(c) < 0) {\r\n                vec4Pool.push(ca, cb);\r\n                return [b, c];\r\n            }\r\n            let out = ca;\r\n            out.wedgevbset(a, biv).wedgevbset(out, biv);\r\n            biv.pushPool();\r\n            vec4Pool.push(cb);\r\n            return out;\r\n        }\r\n        function getClosestPointOrNormal4(a: Vec4, b: Vec4, c: Vec4, d: Vec4) {\r\n            let da = vec4Pool.pop().subset(a, d);\r\n            let db = vec4Pool.pop().subset(b, d);\r\n            let dc = vec4Pool.pop().subset(c, d);\r\n            // vertex\r\n            if (d.dot(da) > 0 && d.dot(db) > 0 && d.dot(dc) > 0) {\r\n                vec4Pool.push(da, db, dc);\r\n                return [d];\r\n            }\r\n            // edge\r\n            let dab = bivecPool.pop().wedgevvset(da, db);\r\n            let dbc = bivecPool.pop().wedgevvset(db, dc);\r\n            let dca = bivecPool.pop().wedgevvset(dc, da);\r\n            let temp = vec4Pool.pop();\r\n            if (temp.dotbset(da, dab).dot(d) > 0 && temp.dotbset(da, dca).dot(d) < 0) {\r\n                vec4Pool.push(da, db, dc, temp);\r\n                bivecPool.push(dab, dbc, dca);\r\n                return [a, d];\r\n            }\r\n            if (temp.dotbset(db, dbc).dot(d) > 0 && temp.dotbset(db, dab).dot(d) < 0) {\r\n                vec4Pool.push(da, db, dc, temp);\r\n                bivecPool.push(dab, dbc, dca);\r\n                return [b, d];\r\n            }\r\n            if (temp.dotbset(dc, dca).dot(d) > 0 && temp.dotbset(dc, dbc).dot(d) < 0) {\r\n                vec4Pool.push(da, db, dc, temp);\r\n                bivecPool.push(dab, dbc, dca);\r\n                return [c, d];\r\n            }\r\n            // face\r\n            // dabc is normal vector\r\n            let dabc = vec4Pool.pop().wedgevbset(da, dbc);\r\n            if (temp.wedgevbset(dabc, dab).dot(d) < 0) {\r\n                vec4Pool.push(da, db, dc, dabc, temp);\r\n                bivecPool.push(dab, dbc, dca);\r\n                return [a, b, d];\r\n            }\r\n            if (temp.wedgevbset(dabc, dbc).dot(d) < 0) {\r\n                vec4Pool.push(da, db, dc, dabc, temp);\r\n                bivecPool.push(dab, dbc, dca);\r\n                return [b, c, d];\r\n            }\r\n            if (temp.wedgevbset(dabc, dca).dot(d) < 0) {\r\n                vec4Pool.push(da, db, dc, dabc, temp);\r\n                bivecPool.push(dab, dbc, dca);\r\n                return [a, c, d];\r\n            }\r\n            // new direction is already normal dabc\r\n            // but need to point to origin:\r\n            // dabc.mulfs(-a.dot(dabc));\r\n            // we do it outside of this fn\r\n            // because we need this important orientation information\r\n            // to construct corrected ordered 5-simplex\r\n            vec4Pool.push(da, db, dc, temp);\r\n            bivecPool.push(dab, dbc, dca);\r\n            return dabc;\r\n        }\r\n        function getClosestPoint5(a: Vec4, b: Vec4, c: Vec4, d: Vec4, e: Vec4, reverseOrder: boolean) {\r\n            // about reverseOrder:\r\n            // if reverseOrder == false\r\n            // da^db^dc (dabc) is pointing to outside\r\n            // else dabc is pointing to e (inside)\r\n\r\n            let ea = vec4Pool.pop().subset(a, e);\r\n            let eb = vec4Pool.pop().subset(b, e);\r\n            let ec = vec4Pool.pop().subset(c, e);\r\n            let ed = vec4Pool.pop().subset(d, e);\r\n            // vertex\r\n            if (e.dot(ea) > 0 && e.dot(eb) > 0 && e.dot(ec) > 0 && e.dot(ed) > 0) {\r\n                vec4Pool.push(ea, eb, ec, ed);\r\n                return [e];\r\n            }\r\n            // edge\r\n            let eab = bivecPool.pop().wedgevvset(ea, eb);\r\n            let ebc = bivecPool.pop().wedgevvset(eb, ec);\r\n            let eac = bivecPool.pop().wedgevvset(ea, ec);\r\n            let ead = bivecPool.pop().wedgevvset(ea, ed);\r\n            let ebd = bivecPool.pop().wedgevvset(eb, ed);\r\n            let ecd = bivecPool.pop().wedgevvset(ec, ed);\r\n            let temp = vec4Pool.pop();\r\n            if (temp.dotbset(ea, eab).dot(e) > 0 && temp.dotbset(ea, eac).dot(e) > 0 && temp.dotbset(ea, ead).dot(e) > 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [a, e];\r\n            }\r\n            if (temp.dotbset(eb, eab).dot(e) < 0 && temp.dotbset(eb, ebc).dot(e) > 0 && temp.dotbset(eb, ebd).dot(e) > 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [b, e];\r\n            }\r\n            if (temp.dotbset(ec, eac).dot(e) < 0 && temp.dotbset(ec, ebc).dot(e) < 0 && temp.dotbset(ec, ecd).dot(e) > 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [c, e];\r\n            }\r\n            if (temp.dotbset(ed, ead).dot(e) < 0 && temp.dotbset(ed, ebd).dot(e) < 0 && temp.dotbset(ed, ecd).dot(e) < 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [d, e];\r\n            }\r\n            // face\r\n            // normal vectors for 4 cells, be careful with directions\r\n            //  dabc\r\n            let eabc = vec4Pool.pop().wedgevbset(ea, ebc); // -\r\n            let eabd = vec4Pool.pop().wedgevbset(ea, ebd); // +\r\n            let eacd = vec4Pool.pop().wedgevbset(ea, ecd); // -\r\n            let ebcd = vec4Pool.pop().wedgevbset(eb, ecd); // +\r\n            if (temp.wedgevbset(eabc, eab).dot(e) < 0 && temp.wedgevbset(eabd, eab).dot(e) < 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, eabc, eabd, eacd, ebcd, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [a, b, e];\r\n            }\r\n            if (temp.wedgevbset(eabc, eac).dot(e) > 0 && temp.wedgevbset(eacd, eac).dot(e) < 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, eabc, eabd, eacd, ebcd, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [a, c, e];\r\n            }\r\n            if (temp.wedgevbset(eabd, ead).dot(e) > 0 && temp.wedgevbset(eacd, ead).dot(e) > 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, eabc, eabd, eacd, ebcd, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [a, d, e];\r\n            }\r\n            if (temp.wedgevbset(eabc, ebc).dot(e) < 0 && temp.wedgevbset(ebcd, ebc).dot(e) < 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, eabc, eabd, eacd, ebcd, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [b, c, e];\r\n            }\r\n            if (temp.wedgevbset(eabd, ebd).dot(e) < 0 && temp.wedgevbset(ebcd, ebd).dot(e) > 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, eabc, eabd, eacd, ebcd, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [b, d, e];\r\n            }\r\n            if (temp.wedgevbset(eacd, ecd).dot(e) < 0 && temp.wedgevbset(ebcd, ecd).dot(e) < 0) {\r\n                vec4Pool.push(ea, eb, ec, ed, eabc, eabd, eacd, ebcd, temp);\r\n                bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n                return [c, d, e];\r\n            }\r\n            vec4Pool.push(ea, eb, ec, ed, temp);\r\n            bivecPool.push(eab, ebc, eac, ead, ebd, ecd);\r\n            // cell\r\n            // turn all face normals outside\r\n            if (reverseOrder) {\r\n                eabd.negs(); ebcd.negs();\r\n            } else {\r\n                eabc.negs(); eacd.negs();\r\n            }\r\n            if (eabc.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return [a, b, c, e];\r\n            }\r\n            if (eabd.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return [a, b, d, e];\r\n            }\r\n            if (eacd.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return [a, c, d, e];\r\n            }\r\n            if (ebcd.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return [b, c, d, e];\r\n            }\r\n            // otherwise origin is inside, return data for epa algorithm\r\n            return { reverseOrder, normals: [ebcd, eacd, eabd, eabc] };\r\n        }\r\n        export function gjkOutDistance(convex: Convex, initSimplex?: Vec4[]): {\r\n            simplex?: Vec4[];\r\n            reverseOrder?: boolean;\r\n            normals?: Vec4[];\r\n            normal?: Vec4;\r\n            distance?: number;\r\n        } {\r\n            if (!initSimplex) {\r\n                initSimplex = [convex[0]];\r\n            }\r\n            // datas for states\r\n            let steps = 0;\r\n            let s = initSimplex;\r\n            let reverseOrder5: boolean; // only used when s.length == 5 (store 5-simplex orientation)\r\n            // temp vars:\r\n            let p: Vec4;\r\n            let pn: Vec4 | Vec4[] | { normals: Vec4[], reverseOrder: boolean };\r\n            // let steps = [];\r\n            while (steps++ < maxGjkStep) {\r\n                // steps.push(s.length);\r\n                switch (s.length) {\r\n                    case 1:\r\n                        // steps.push(s[0].norm());//dbg\r\n                        p = supportNeg(convex, s[0]);\r\n                        if (p === s[0]) {\r\n                            return {\r\n                                simplex: s,\r\n                                normal: vec4Pool.pop().copy(s[0]).negs(),\r\n                                distance: s[0].norm()\r\n                            };\r\n                        }\r\n                        s.push(p); //keep s[0] older\r\n                        break;\r\n                    case 2:\r\n                        pn = getClosestPointOrNormal2(s[0], s[1]);\r\n                        // ignore far point and go on with single point\r\n                        if (pn === s[1]) { s[0] = s[1]; s.pop(); continue; }\r\n                        // degenerated case: exact contact simplex\r\n                        if (pn.norm1() === 0) { return {}; }\r\n                        // steps.push(-pn.clone().norms().dot(s[0]));//dbg\r\n                        p = support(convex, pn);\r\n                        // simplex can't move on, terminate\r\n                        if (p === s[0] || p === s[1]) { return { simplex: s, normal: pn.norms(), distance: -s[0].dot(pn) }; }\r\n                        pn.pushPool();\r\n                        s.push(p);\r\n                        break;\r\n                    case 3:\r\n                        pn = getClosestPointOrNormal3(s[0], s[1], s[2]);\r\n                        if ((pn as Vec4[]).length) {\r\n                            // ignore far points and go on with fewer points\r\n                            s = pn as Vec4[]; continue;\r\n                        }\r\n                        // degenerated case: exact contact simplex\r\n                        if ((pn as Vec4).norm1() === 0) { return {}; }\r\n\r\n                        // steps.push(-(pn as Vec4).clone().norms().dot(s[0]));//dbg\r\n                        p = support(convex, pn as Vec4);\r\n                        // simplex can't move on, terminate\r\n                        if (p === s[0] || p === s[1] || p === s[2]) {\r\n                            return { simplex: s, normal: (pn as Vec4).norms(), distance: -s[0].dot((pn as Vec4)) };\r\n                        }\r\n                        (pn as Vec4).pushPool();\r\n                        s.push(p);\r\n                        break;\r\n                    case 4:\r\n                        pn = getClosestPointOrNormal4(s[0], s[1], s[2], s[3]);\r\n                        if ((pn as Vec4[]).length) {\r\n                            // ignore far points and go on with fewer points\r\n                            s = pn as Vec4[]; continue;\r\n                        }\r\n                        let normal = pn as Vec4;\r\n                        let dotFactor = -normal.dot(s[0]);\r\n                        reverseOrder5 = dotFactor > 0; // if true, normal obtained by da^db^dc towards origin\r\n                        normal.mulfs(dotFactor); // use mul to detect nomal or dotFactor is zero\r\n                        // degenerated case: exact contact simplex\r\n                        if (normal.norm1() === 0) { return {} }\r\n\r\n                        // steps.push(-(pn as Vec4).clone().norms().dot(s[0]));//dbg\r\n                        p = support(convex, normal);\r\n                        // simplex can't move on, terminate\r\n                        if (p === s[0] || p === s[1] || p === s[2] || p === s[3]) { return { simplex: s, normal: normal.norms(), distance: -normal.dot(s[0]) }; }\r\n                        normal.pushPool();\r\n                        s.push(p);\r\n                        break;\r\n                    case 5:\r\n                        // we won't go to 5th dimension, so no normal to find anymore\r\n                        pn = getClosestPoint5(s[0], s[1], s[2], s[3], s[4], reverseOrder5!);\r\n                        if ((pn as Vec4[]).length) {\r\n                            // ignore far points and go on with fewer points\r\n                            s = pn as Vec4[]; continue;\r\n                        } else {\r\n                            // interior of simplex, stop\r\n                            let info = pn as {\r\n                                reverseOrder: boolean;\r\n                                normals: Vec4[];\r\n                            };\r\n                            let out = { simplex: s, reverseOrder: info.reverseOrder, normals: info.normals };\r\n                            return out;\r\n                        }\r\n\r\n                    default: console.assert(false, \"simplex points error\");\r\n                }\r\n            }\r\n            console.warn(\"Physics engin's GJK algorithm has been interupped by too many steps.\"); return {};\r\n        }\r\n        /** test convex1 - convex2 to origin */\r\n        export function gjkDiffTest(convex1: Convex, convex2: Convex, initSimplex1?: Vec4[], initSimplex2?: Vec4[]): {\r\n            simplex1?: Vec4[];\r\n            simplex2?: Vec4[];\r\n            normals?: Vec4[];\r\n            reverseOrder?: boolean;\r\n        } {\r\n            if (!initSimplex1) {\r\n                initSimplex1 = [convex1[0]];\r\n            }\r\n            if (!initSimplex2) {\r\n                initSimplex2 = [convex2[0]];\r\n            }\r\n            // datas for states\r\n            let s1 = initSimplex1;\r\n            let s2 = initSimplex2;\r\n            let reverseOrder5: boolean;\r\n            // temp vars:\r\n            let p1: Vec4;\r\n            let p2: Vec4;\r\n            let normal: Vec4;\r\n            let _vec4 = vec4Pool.pop();\r\n            // while (true) {\r\n            // switch (s1.length) {\r\n            // case 1:\r\n            [p1, p2] = supportDiffTest(convex1, convex2, _vec4.subset(s2[0], s1[0]));\r\n            if (!p1 || (p1 === s1[0] && p2 === s2[0])) {\r\n                return {};\r\n            }\r\n            s1.push(p1); s2.push(p2);\r\n            //     break;\r\n            // case 2:\r\n            normal = getDiffNormal2(s1[0], s1[1], s2[0], s2[1]);\r\n            if (normal.norm1() === 0) { return {}; }\r\n            [p1, p2] = supportDiffTest(convex1, convex2, normal);\r\n            // simplex can't move on, terminate\r\n            if (!p1 || (p1 === s1[0] && p2 === s2[0]) || (p1 === s1[1] && p2 === s2[1])) { return {}; }\r\n            normal.pushPool();\r\n            s1.push(p1); s2.push(p2);\r\n            //     break;\r\n            // case 3:\r\n            normal = getDiffNormal3(s1[0], s1[1], s1[2], s2[0], s2[1], s2[2]);\r\n            if (normal.norm1() === 0) { return {}; }\r\n            [p1, p2] = supportDiffTest(convex1, convex2, normal);\r\n            // simplex can't move on, terminate\r\n            if (!p1 || (p1 === s1[0] && p2 === s2[0]) || (p1 === s1[1] && p2 === s2[1]) || (p1 === s1[2] && p2 === s2[2])) {\r\n                return {};\r\n            }\r\n            normal.pushPool();\r\n            s1.push(p1); s2.push(p2);\r\n            //     break;\r\n            // case 4:\r\n            normal = getDiffNormal4(s1[0], s1[1], s1[2], s1[3], s2[0], s2[1], s2[2], s2[3]);\r\n            let originDir = vec4Pool.pop().subset(s1[0], s2[0]);\r\n            let dotFactor = -normal.dot(originDir); originDir.pushPool();\r\n            normal.mulfs(dotFactor); // use mul to detect nomal or dotFactor is zero\r\n            if (normal.norm1() === 0) { return {}; }\r\n            reverseOrder5 = dotFactor > 0;\r\n            [p1, p2] = supportDiffTest(convex1, convex2, normal);\r\n            // simplex can't move on, terminate\r\n            if (!p1 || (p1 === s1[0] && p2 === s2[0]) || (p1 === s1[1] && p2 === s2[1]) || (p1 === s1[2] && p2 === s2[2]) || (p1 === s1[3] && p2 === s2[3])) {\r\n                return {};\r\n            }\r\n            normal.pushPool();\r\n            s1.push(p1); s2.push(p2);\r\n            while (true) {\r\n                let res = getDiffNormal5(\r\n                    s1[0], s1[1], s1[2], s1[3], s1[4],\r\n                    s2[0], s2[1], s2[2], s2[3], s2[4], reverseOrder5\r\n                );\r\n                if (!res.normal) {\r\n                    // interior, pass data to epadiff\r\n                    return { simplex1: s1, simplex2: s2, normals: res.normals, reverseOrder: res.reverseOrder };\r\n                }\r\n                reverseOrder5 = res.reverseOrder;\r\n                [p1, p2] = supportDiffTest(convex1, convex2, res.normal);\r\n                // simplex can't move on, terminate\r\n                if (!p1 || (p1 === s1[0] && p2 === s2[0]) || (p1 === s1[1] && p2 === s2[1]) || (p1 === s1[2] && p2 === s2[2]) || (p1 === s1[3] && p2 === s2[3]) || (p1 === s1[4] && p2 === s2[4])) {\r\n                    return {};\r\n                }\r\n                s1 = res.simplex1; s1.push(p1);\r\n                s2 = res.simplex2; s2.push(p2);\r\n            }\r\n        }\r\n        function getDiffNormal2(a1: Vec4, b1: Vec4, a2: Vec4, b2: Vec4) {\r\n            let a = vec4Pool.pop().subset(a1, a2);\r\n            let b = vec4Pool.pop().subset(b1, b2);\r\n            let adb = a.dot(b);\r\n            let la = b.normsqr() - adb;\r\n            let lb = a.normsqr() - adb;\r\n            let out = vec4Pool.pop().set().addmulfs(a, -la).addmulfs(b, -lb);\r\n            vec4Pool.push(a, b);\r\n            return out;\r\n        }\r\n        function getDiffNormal3(\r\n            a1: Vec4, b1: Vec4, c1: Vec4,\r\n            a2: Vec4, b2: Vec4, c2: Vec4\r\n        ) {\r\n            let a = vec4Pool.pop().subset(a1, a2);\r\n            let b = vec4Pool.pop().subset(b1, b2);\r\n            let c = vec4Pool.pop().subset(c1, c2);\r\n            let ca = vec4Pool.pop().subset(a, c);\r\n            let cb = vec4Pool.pop().subset(b, c);\r\n\r\n            let biv = bivecPool.pop().wedgevvset(ca, cb);\r\n            let out = ca;\r\n            out.wedgevbset(a, biv).wedgevbset(out, biv);\r\n            vec4Pool.push(a, b, c, cb); biv.pushPool();\r\n            return out;\r\n        }\r\n        function getDiffNormal4(\r\n            a1: Vec4, b1: Vec4, c1: Vec4, d1: Vec4,\r\n            a2: Vec4, b2: Vec4, c2: Vec4, d2: Vec4\r\n        ) {\r\n            let a = vec4Pool.pop().subset(a1, a2);\r\n            let b = vec4Pool.pop().subset(b1, b2);\r\n            let c = vec4Pool.pop().subset(c1, c2);\r\n            let d = vec4Pool.pop().subset(d1, d2);\r\n            let da = vec4Pool.pop().subset(a, d);\r\n            let db = vec4Pool.pop().subset(b, d);\r\n            let dc = vec4Pool.pop().subset(c, d);\r\n\r\n            let dbc = bivecPool.pop().wedgevvset(db, dc);\r\n            let dabc = vec4Pool.pop().wedgevbset(da, dbc);\r\n            dbc.pushPool();\r\n            vec4Pool.push(a, b, c, d, da, db, dc);\r\n            return dabc;\r\n        }\r\n        function getDiffNormal5(\r\n            a1: Vec4, b1: Vec4, c1: Vec4, d1: Vec4, e1: Vec4,\r\n            a2: Vec4, b2: Vec4, c2: Vec4, d2: Vec4, e2: Vec4,\r\n            reverseOrder: boolean\r\n        ) {\r\n            let a = vec4Pool.pop().subset(a1, a2);\r\n            let b = vec4Pool.pop().subset(b1, b2);\r\n            let c = vec4Pool.pop().subset(c1, c2);\r\n            let d = vec4Pool.pop().subset(d1, d2);\r\n            let e = vec4Pool.pop().subset(e1, e2);\r\n            let ea = vec4Pool.pop().subset(a, e);\r\n            let eb = vec4Pool.pop().subset(b, e);\r\n            let ec = vec4Pool.pop().subset(c, e);\r\n            let ed = vec4Pool.pop().subset(d, e);\r\n\r\n            let ebc = bivecPool.pop().wedgevvset(eb, ec);\r\n            let ebd = bivecPool.pop().wedgevvset(eb, ed);\r\n            let ecd = bivecPool.pop().wedgevvset(ec, ed);\r\n\r\n            let eabc = vec4Pool.pop().wedgevbset(ea, ebc); // -\r\n            let eabd = vec4Pool.pop().wedgevbset(ea, ebd); // +\r\n            let eacd = vec4Pool.pop().wedgevbset(ea, ecd); // -\r\n            let ebcd = vec4Pool.pop().wedgevbset(eb, ecd); // +\r\n            if (reverseOrder) {\r\n                eabd.negs(); ebcd.negs();\r\n            } else {\r\n                eabc.negs(); eacd.negs();\r\n            }\r\n            if (eabc.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return { simplex1: [a1, b1, c1, e1], simplex2: [a2, b2, c2, e2], normal: eabc, reverseOrder: reverseOrder };\r\n            }\r\n            if (eabd.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return { simplex1: [a1, b1, d1, e1], simplex2: [a2, b2, d2, e2], normal: eabd, reverseOrder: !reverseOrder };\r\n            }\r\n            if (eacd.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return { simplex1: [a1, c1, d1, e1], simplex2: [a2, c2, d2, e2], normal: eacd, reverseOrder: reverseOrder };\r\n            }\r\n            if (ebcd.dot(e) < 0) {\r\n                vec4Pool.push(eabc, eabd, eacd, ebcd);\r\n                return { simplex1: [b1, c1, d1, e1], simplex2: [b2, c2, d2, e2], normal: ebcd, reverseOrder: !reverseOrder };\r\n            }\r\n            bivecPool.push(ebc, ebd, ecd);\r\n            vec4Pool.push(a, b, c, d, e, ea, eb, ec, ed);\r\n            // otherwise origin is inside, return data for epa algorithm\r\n            return { reverseOrder, normals: [ebcd, eacd, eabd, eabc] };\r\n        }\r\n        /** expanding polytope algorithm */\r\n        export function epa(convex: Convex, initCondition: {\r\n            simplex: Vec4[],\r\n            reverseOrder: boolean,\r\n            normals: Vec4[] // normal must towards outside (away from origin)\r\n        }) {\r\n            let simplex = initCondition.simplex;\r\n            let normals = initCondition.normals;\r\n            if (initCondition.reverseOrder) {\r\n                let temp = simplex[0]; simplex[0] = simplex[1]; simplex[1] = temp;\r\n                let temp2 = normals[0]; normals[0] = normals[1]; normals[1] = temp2;\r\n            }\r\n            if (normals.length === 4) {\r\n                let da = vec4Pool.pop().subset(simplex[0], simplex[3]);\r\n                let db = vec4Pool.pop().subset(simplex[1], simplex[3]);\r\n                let dc = vec4Pool.pop().subset(simplex[2], simplex[3]);\r\n\r\n                let dbc = bivecPool.pop().wedgevvset(db, dc);\r\n                normals.push(vec4Pool.pop().wedgevbset(da, dbc));\r\n                dbc.pushPool();\r\n                vec4Pool.push(da, db, dc);\r\n            }\r\n            // tetrahedral cell list\r\n            let cs = [\r\n                [simplex[1], simplex[2], simplex[4], simplex[3]],\r\n                [simplex[2], simplex[0], simplex[4], simplex[3]],\r\n                [simplex[0], simplex[1], simplex[4], simplex[3]],\r\n                [simplex[0], simplex[2], simplex[4], simplex[1]],\r\n                [simplex[0], simplex[1], simplex[3], simplex[2]],\r\n            ]\r\n            // normal list\r\n            let ns = normals;\r\n            // distance list\r\n            let ds:number[] = [];\r\n            let mind = Infinity;\r\n            let minid: number;\r\n            for (let i = 0; i < 5; i++) {\r\n                ns[i].norms();\r\n                let val = ns[i].dot(cs[i][0]);\r\n                ds.push(val);\r\n                console.assert(val > 0, \"wrong init orientation\");\r\n                if (val < mind) {\r\n                    minid = i;\r\n                    mind = val;\r\n                }\r\n            }\r\n            let pa = vec4Pool.pop();\r\n            let pb = vec4Pool.pop();\r\n            let pc = vec4Pool.pop();\r\n            let pab = bivecPool.pop();\r\n\r\n            let steps = 0;\r\n            while (steps++ < maxEpaStep) {\r\n                let cell = cs[minid!];\r\n                let p = support(convex, ns[minid!]);\r\n                console.log(`Step: ${steps} Distance:${mind}`);\r\n                if (p === cell[0] || p === cell[1] || p === cell[2] || p === cell[3]) {\r\n                    // can't move on, found\r\n                    // vec4Pool.push(pa, pb, pc, pd);\r\n                    // bivecPool.push(pab, pac, pbc);\r\n                    for (let n of ns) {\r\n                        if (n !== ns[minid!]) n.pushPool();\r\n                    }\r\n                    vec4Pool.push(pa, pb, pc);\r\n                    bivecPool.push(pab);\r\n                    return { simplex: cell, distance: -mind, normal: ns[minid!] }\r\n                }\r\n\r\n                mind = Infinity;\r\n                // construct new convexhull after adding point p\r\n\r\n                let newcs: Vec4[][] = [];\r\n                let newns: Vec4[] = [];\r\n                let newds: number[] = [];\r\n                // borderformat [v1,v2,v3], v1,v2,v3's order is for orientation\r\n                // mark v1 null if duplicate need to remove, \r\n                let border: [Vec4|undefined, Vec4|undefined, Vec4|undefined][] = [];\r\n                function checkBorder(a: Vec4, b: Vec4, c: Vec4) {\r\n                    for (let i of border) {\r\n                        // if (i[0] === a) {\r\n                        //     if (i[1] === b) {\r\n                        //         if (i[2] === c) {\r\n                        //             // console.assert(false);\r\n                        //         }\r\n                        //     } else if (i[1] === c) {\r\n                        //         if (i[2] === b) {\r\n                        //             i[0] = null; return;\r\n                        //         }\r\n                        //     }\r\n                        // }\r\n                        if (\r\n                            (i[0] === a && i[1] === c && i[2] === b) ||\r\n                            (i[0] === b && i[1] === a && i[2] === c) ||\r\n                            (i[0] === c && i[1] === b && i[2] === a)\r\n                        ) {\r\n                            i[0] = undefined; return;\r\n                        }\r\n                    }\r\n                    border.push([a, b, c]);\r\n                }\r\n                for (let idx = 0, csl = cs.length; idx < csl; idx++) {\r\n                    let cell = cs[idx];\r\n                    let a = cell[0];\r\n                    let b = cell[1];\r\n                    let c = cell[2];\r\n                    let d = cell[3];\r\n                    let determinant = ns[idx].dot(pa.subset(p, a));\r\n                    if (determinant > 0) {\r\n                        checkBorder(d, b, c); // +\r\n                        checkBorder(d, c, a); // -\r\n                        checkBorder(d, a, b); // +\r\n                        checkBorder(c, b, a); // -\r\n                    } else {\r\n                        newcs.push(cell);\r\n                        newns.push(ns[idx]);\r\n                        newds.push(ds[idx]);\r\n                        if (ds[idx] < mind) {\r\n                            mind = ds[idx]; minid = newns.length - 1;\r\n                        }\r\n                    }\r\n                }\r\n                for (let b of border) {\r\n                    if (!b[0]) continue;\r\n                    pa.subset(p, b[0]);\r\n                    pb.subset(p, b[1]!);\r\n                    pc.subset(p, b[2]!);\r\n                    pab.wedgevvset(pa, pb);\r\n                    newcs.push([p, b[0], b[1]!, b[2]!]);\r\n                    let n = vec4Pool.pop().wedgevbset(pc, pab).negs().norms();\r\n                    let d = n.dot(p);\r\n                    console.assert(d >= 0, \"new normal needs negs\");\r\n                    if (d < mind) {\r\n                        mind = d; minid = newds.length;\r\n                    }\r\n                    newns.push(n);\r\n                    newds.push(d);\r\n                }\r\n                ns = newns;\r\n                cs = newcs;\r\n                ds = newds;\r\n            }\r\n            console.warn(\"Physics engin's GJK-EPA algorithm has been interupped by too many steps.\"); return {};\r\n        }\r\n\r\n        /** expanding polytope algorithm for minkovsky difference */\r\n        export function epaDiff(convex1: Convex, convex2: Convex, initCondition: {\r\n            simplex1: Vec4[],\r\n            simplex2: Vec4[],\r\n            reverseOrder: boolean,\r\n            normals: Vec4[] // normal must towards outside (away from origin)\r\n        }) {\r\n            let s1 = initCondition.simplex1;\r\n            let s2 = initCondition.simplex2;\r\n            let normals = initCondition.normals;\r\n            if (initCondition.reverseOrder) {\r\n                let temp = s1[0]; s1[0] = s1[1]; s1[1] = temp;\r\n                temp = s2[0]; s2[0] = s2[1]; s2[1] = temp;\r\n                let temp2 = normals[0]; normals[0] = normals[1]; normals[1] = temp2;\r\n            }\r\n            if (normals.length === 4) {\r\n                let da = vec4Pool.pop().subset(s1[0], s1[3]).subs(s2[0]).adds(s2[3]);\r\n                let db = vec4Pool.pop().subset(s1[1], s1[3]).subs(s2[1]).adds(s2[3]);\r\n                let dc = vec4Pool.pop().subset(s1[2], s1[3]).subs(s2[2]).adds(s2[3]);\r\n\r\n                let dbc = bivecPool.pop().wedgevvset(db, dc);\r\n                normals.push(vec4Pool.pop().wedgevbset(da, dbc));\r\n                dbc.pushPool();\r\n                vec4Pool.push(da, db, dc);\r\n            }\r\n            // tetrahedral cell list\r\n            let cs1 = [\r\n                [s1[1], s1[2], s1[4], s1[3]],\r\n                [s1[2], s1[0], s1[4], s1[3]],\r\n                [s1[0], s1[1], s1[4], s1[3]],\r\n                [s1[0], s1[2], s1[4], s1[1]],\r\n                [s1[0], s1[1], s1[3], s1[2]],\r\n            ]\r\n            let cs2 = [\r\n                [s2[1], s2[2], s2[4], s2[3]],\r\n                [s2[2], s2[0], s2[4], s2[3]],\r\n                [s2[0], s2[1], s2[4], s2[3]],\r\n                [s2[0], s2[2], s2[4], s2[1]],\r\n                [s2[0], s2[1], s2[3], s2[2]],\r\n            ]\r\n            // normal list\r\n            let ns = normals;\r\n            // distance list\r\n            let ds:number[] = [];\r\n            let mind = Infinity;\r\n            let minid: number;\r\n\r\n            let pa = vec4Pool.pop();\r\n            let pb = vec4Pool.pop();\r\n            let pc = vec4Pool.pop();\r\n            let p12 = vec4Pool.pop();\r\n            let pab = bivecPool.pop();\r\n            for (let i = 0; i < 5; i++) {\r\n                ns[i].norms();\r\n                let val = ns[i].dot(pa.subset(cs1[i][0], cs2[i][0]));\r\n                ds.push(val);\r\n                console.assert(val > 0, \"wrong init orientation\");\r\n                if (val < mind) {\r\n                    minid = i;\r\n                    mind = val;\r\n                }\r\n            }\r\n\r\n            let steps = 0;\r\n            while (steps++ < maxEpaStep) {\r\n                let cell1 = cs1[minid!];\r\n                let cell2 = cs2[minid!];\r\n                let [p1, p2] = supportDiff(convex1, convex2, ns[minid!]);\r\n                p12.subset(p1, p2);\r\n                if (ns[minid!].dot(p12) <= mind ||\r\n                    (p1 === cell1[0] && p2 === cell2[0]) ||\r\n                    (p1 === cell1[1] && p2 === cell2[1]) ||\r\n                    (p1 === cell1[2] && p2 === cell2[2]) ||\r\n                    (p1 === cell1[3] && p2 === cell2[3])\r\n                ) {\r\n                    // can't move on, found\r\n                    for (let n of ns) {\r\n                        if (n !== ns[minid!]) n.pushPool();\r\n                    }\r\n                    vec4Pool.push(pa, pb, pc);\r\n                    bivecPool.push(pab);\r\n\r\n                    // console.log(`Step: ${steps}`);\r\n                    return { simplex1: cell1, simplex2: cell2, distance: -mind, normal: ns[minid!] }\r\n                }\r\n\r\n                mind = Infinity;\r\n                // construct new convexhull after adding point p\r\n\r\n                let newcs1: Vec4[][] = [];\r\n                let newcs2: Vec4[][] = [];\r\n                let newns: Vec4[] = [];\r\n                let newds: number[] = [];\r\n                // borderformat [a1,a2,a3, b1,b2,b3], order is for orientation\r\n                // a, b are convex A's points a - convex B's points b\r\n                // mark a1 null if duplicate need to remove, \r\n                let border: [Vec4|undefined, Vec4|undefined, Vec4|undefined, Vec4|undefined, Vec4|undefined, Vec4|undefined][] = [];\r\n                function checkBorder(\r\n                    a1: Vec4, b1: Vec4, c1: Vec4,\r\n                    a2: Vec4, b2: Vec4, c2: Vec4\r\n                ) {\r\n                    for (let i of border) {\r\n                        if (\r\n                            (i[0] === a1 && i[3] === a2 && i[1] === c1 && i[4] === c2 && i[5] === b2 && i[2] === b1) ||\r\n                            (i[0] === b1 && i[3] === b2 && i[1] === a1 && i[4] === a2 && i[5] === c2 && i[2] === c1) ||\r\n                            (i[0] === c1 && i[3] === c2 && i[1] === b1 && i[4] === b2 && i[5] === a2 && i[2] === a1)\r\n                        ) {\r\n                            i[0] = undefined; return;\r\n                        }\r\n                    }\r\n                    border.push([a1, b1, c1, a2, b2, c2]);\r\n                }\r\n                for (let idx = 0, csl = cs1.length; idx < csl; idx++) {\r\n                    let cell1 = cs1[idx];\r\n                    let cell2 = cs2[idx];\r\n                    let a1 = cell1[0]; let a2 = cell2[0];\r\n                    let b1 = cell1[1]; let b2 = cell2[1];\r\n                    let c1 = cell1[2]; let c2 = cell2[2];\r\n                    let d1 = cell1[3]; let d2 = cell2[3];\r\n                    let determinant = ns[idx].dot(pa.subset(p12, a1).adds(a2));\r\n                    if (determinant > 0) {\r\n                        checkBorder(d1, b1, c1, d2, b2, c2); // +\r\n                        checkBorder(d1, c1, a1, d2, c2, a2); // -\r\n                        checkBorder(d1, a1, b1, d2, a2, b2); // +\r\n                        checkBorder(c1, b1, a1, c2, b2, a2); // -\r\n                    } else {\r\n                        newcs1.push(cell1);\r\n                        newcs2.push(cell2);\r\n                        newns.push(ns[idx]);\r\n                        newds.push(ds[idx]);\r\n                        if (ds[idx] < mind) {\r\n                            mind = ds[idx]; minid = newns.length - 1;\r\n                        }\r\n                    }\r\n                }\r\n                for (let b of border) {\r\n                    if (!b[0]) continue;\r\n                    pa.subset(p12, b[0]).adds(b[3]!);\r\n                    pb.subset(p12, b[1]!).adds(b[4]!);\r\n                    pc.subset(p12, b[2]!).adds(b[5]!);\r\n                    pab.wedgevvset(pa, pb);\r\n                    newcs1.push([p1, b[0], b[1]!, b[2]!]);\r\n                    newcs2.push([p2, b[3]!, b[4]!, b[5]!]);\r\n                    let n = vec4Pool.pop().wedgevbset(pc, pab).negs().norms();\r\n                    let d = n.dot(p12);\r\n                    if (d < 0) return;\r\n                    // console.assert(d >= 0, \"new normal needs negs\");\r\n                    if (d < mind) {\r\n                        mind = d; minid = newds.length;\r\n                    }\r\n                    newns.push(n);\r\n                    newds.push(d);\r\n                }\r\n                ns = newns;\r\n                cs1 = newcs1;\r\n                cs2 = newcs2;\r\n                ds = newds;\r\n            }\r\n            // console.warn(\"Physics engin's GJK-EPA algorithm has been interupped by too many steps.\"); return {};\r\n        }","import { Rotor } from \"../math/algebra/rotor.js\";\r\nimport { Vec4, vec4Pool } from \"../math/algebra/vec4.js\";\r\nimport { _COS30, _TAN30 } from \"../math/const.js\";\r\nimport { BroadPhaseList } from \"./broadPhase.js\";\r\nimport { epaDiff, gjkDiffTest, gjkOutDistance } from \"./gjk.js\";\r\nimport { rigid, Rigid } from \"./rigid.js\";\r\n\r\nexport interface Collision {\r\n    point: Vec4;\r\n    depth: number;\r\n    /** normal is defined from a to b */\r\n    normal: Vec4;\r\n    a: Rigid;\r\n    b?: Rigid;\r\n}\r\n// cache\r\nlet _vec4 = new Vec4;\r\nlet _r = new Rotor;\r\nexport class NarrowPhase {\r\n    collisionList: Collision[] = [];\r\n    /** max iteration for sdf methods in detectCollision */\r\n    maxIteration = 5;\r\n    clearCollisionList() {\r\n        this.collisionList = [];\r\n    }\r\n    run(list: BroadPhaseList) {\r\n        this.clearCollisionList();\r\n        for (let [a, b] of list) {\r\n            this.detectCollision(a, b);\r\n        }\r\n    }\r\n    detectCollision(rigidA: Rigid, rigidB: Rigid) {\r\n        let a = rigidA.geometry, b = rigidB.geometry;\r\n        if (a instanceof rigid.GlomicCavity) {\r\n            if (b instanceof rigid.Glome) return this.detectGlomeGlomiccavity(b, a);\r\n        }\r\n        if (a instanceof rigid.Glome) {\r\n            if (b instanceof rigid.Glome) return this.detectGlomeGlome(a, b);\r\n            if (b instanceof rigid.Plane) return this.detectGlomePlane(a, b);\r\n            if (b instanceof rigid.Convex) return this.detectConvexGlome(b, a);\r\n            if (b instanceof rigid.Spheritorus) return this.detectSpheritorusGlome(b, a);\r\n            if (b instanceof rigid.Torisphere) return this.detectTorisphereGlome(b, a);\r\n            if (b instanceof rigid.Tiger) return this.detectTigerGlome(b, a);\r\n            if (b instanceof rigid.Ditorus) return this.detectDitorusGlome(b, a);\r\n            if (b instanceof rigid.GlomicCavity) return this.detectGlomeGlomiccavity(a, b);\r\n        }\r\n        if (a instanceof rigid.Plane) {\r\n            if (b instanceof rigid.Glome) return this.detectGlomePlane(b, a);\r\n            if (b instanceof rigid.Convex) return this.detectConvexPlane(b, a);\r\n            if (b instanceof rigid.Spheritorus) return this.detectSpheritorusPlane(b, a);\r\n            if (b instanceof rigid.Torisphere) return this.detectTorispherePlane(b, a);\r\n            if (b instanceof rigid.Tiger) return this.detectTigerPlane(b, a);\r\n            if (b instanceof rigid.Ditorus) return this.detectDitorusPlane(b, a);\r\n        }\r\n        if (a instanceof rigid.Convex) {\r\n            if (b instanceof rigid.Plane) return this.detectConvexPlane(a, b);\r\n            if (b instanceof rigid.Glome) return this.detectConvexGlome(a, b);\r\n            if (b instanceof rigid.Convex) {\r\n                // (arg1,arg2) convert arg2 to arg1's coord\r\n                if (b.points.length > a.points.length)\r\n                    return this.detectConvexConvex(b, a);\r\n                return this.detectConvexConvex(a, b);\r\n            }\r\n        }\r\n        if (a instanceof rigid.Spheritorus) {\r\n            if (b instanceof rigid.Spheritorus) return this.detectSpheritorusSpheritorus(a, b);\r\n            if (b instanceof rigid.Torisphere) return this.detectTorisphereSpheritorus(b, a);\r\n            if (b instanceof rigid.Plane) return this.detectSpheritorusPlane(a, b);\r\n            if (b instanceof rigid.Glome) return this.detectSpheritorusGlome(a, b);\r\n            if (b instanceof rigid.Tiger) return this.detectTigerSpheritorus(b, a);\r\n            if (b instanceof rigid.Ditorus) return this.detectDitorusSpheritorus(b, a);\r\n        }\r\n        if (a instanceof rigid.Torisphere) {\r\n            if (b instanceof rigid.Torisphere) return this.detectTorisphereTorisphere(a, b);\r\n            if (b instanceof rigid.Spheritorus) return this.detectTorisphereSpheritorus(a, b);\r\n            if (b instanceof rigid.Plane) return this.detectTorispherePlane(a, b);\r\n            if (b instanceof rigid.Glome) return this.detectTorisphereGlome(a, b);\r\n            if (b instanceof rigid.Tiger) return this.detectTigerTorisphere(b, a);\r\n            if (b instanceof rigid.Ditorus) return this.detectDitorusTorisphere(b, a);\r\n\r\n        }\r\n        if (a instanceof rigid.Tiger) {\r\n            if (b instanceof rigid.Tiger) return this.detectTigerTiger(a, b);\r\n            if (b instanceof rigid.Spheritorus) return this.detectTigerSpheritorus(a, b);\r\n            if (b instanceof rigid.Torisphere) return this.detectTigerTorisphere(a, b);\r\n            if (b instanceof rigid.Ditorus) return this.detectDitorusTiger(b, a);\r\n            if (b instanceof rigid.Plane) return this.detectTigerPlane(a, b);\r\n            if (b instanceof rigid.Glome) return this.detectTigerGlome(a, b);\r\n        }\r\n        if (a instanceof rigid.Ditorus) {\r\n            if (b instanceof rigid.Plane) return this.detectDitorusPlane(a, b);\r\n            if (b instanceof rigid.Glome) return this.detectDitorusGlome(a, b);\r\n            if (b instanceof rigid.Spheritorus) return this.detectDitorusSpheritorus(a, b);\r\n            if (b instanceof rigid.Torisphere) return this.detectDitorusTorisphere(a, b);\r\n            if (b instanceof rigid.Tiger) return this.detectDitorusTiger(a, b);\r\n            if (b instanceof rigid.Ditorus) return this.detectDitorusDitorus(a, b);\r\n        }\r\n    }\r\n    private detectGlomeGlome(a: rigid.Glome, b: rigid.Glome) {\r\n        _vec4.subset(b.rigid.position, a.rigid.position);\r\n        let d = _vec4.norm();\r\n        let depth = a.radius + b.radius - d;\r\n        if (depth < 0) return null;\r\n        // todo: check whether clone can be removed\r\n        let normal = _vec4.divfs(d).clone();\r\n        let point: Vec4;\r\n        if (a.radius === b.radius) {\r\n            point = a.rigid.position.clone().adds(b.rigid.position).mulfs(0.5);\r\n        } else {\r\n            const totalinv = 1 / (a.radius + b.radius);\r\n            point = a.rigid.position.mulf(totalinv * b.radius).addmulfs(b.rigid.position, totalinv * a.radius);\r\n        }\r\n        this.collisionList.push({ point, normal, depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectGlomeGlomiccavity(a: rigid.Glome, b: rigid.GlomicCavity) {\r\n        _vec4.subset(b.rigid.position, a.rigid.position);\r\n        let d = _vec4.norm();\r\n        let depth = a.radius - b.radius + d;\r\n        if (depth < 0) return null;\r\n        // todo: check whether clone can be removed\r\n        let normal = _vec4.divf(-d);\r\n        let point = b.rigid.position.clone().addmulfs(normal, b.radius + depth / 2);\r\n\r\n        this.collisionList.push({ point, normal, depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectGlomePlane(a: rigid.Glome, b: rigid.Plane) {\r\n        let depth = a.radius - (a.rigid.position.dot(b.normal) - b.offset);\r\n        if (depth < 0) return null;\r\n        let point = a.rigid.position.clone().addmulfs(b.normal, depth * 0.5 - a.radius);\r\n        this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectConvexPlane(a: rigid.Convex, b: rigid.Plane) {\r\n        // convert plane to convex's coord\r\n        let normal = _vec4.copy(b.normal).rotatesconj(a.rigid.rotation);\r\n        let offset = a.rigid.position.dot(b.normal) - b.offset;\r\n        for (let v of a.points) {\r\n            let depth = -(v.dot(normal) + offset);\r\n            if (depth < 0) continue;\r\n            let point = v.clone().rotates(a.rigid.rotation).adds(a.rigid.position).addmulfs(b.normal, depth / 2);\r\n            this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n        }\r\n    }\r\n    private detectConvexGlome(a: rigid.Convex, b: rigid.Glome) {\r\n        _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        if (a._cachePoints) {\r\n            for (let p = 0, l = a.points.length; p < l; p++) {\r\n                a._cachePoints[p].subset(a.points[p], _vec4);\r\n            }\r\n        } else {\r\n            a._cachePoints = a.points.map(p => vec4Pool.pop().subset(p, _vec4));\r\n        }\r\n        let result = gjkOutDistance(a._cachePoints);\r\n        if (result.normal && result.distance) {\r\n\r\n            let depth = b.radius - result.distance;\r\n            if (depth < 0) return;\r\n            result.normal.rotates(a.rigid.rotation);\r\n            let point = vec4Pool.pop().copy(b.rigid.position).addmulfs(result.normal, -(b.radius + result.distance) * 0.5)\r\n            this.collisionList.push({ point, normal: result.normal, depth, a: a.rigid, b: b.rigid });\r\n        }\r\n        // todo: EPA\r\n    }\r\n    private detectConvexConvex(a: rigid.Convex, b: rigid.Convex) {\r\n        // calculate in a's frame\r\n        _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        if (!isFinite(_vec4.norm1() + _r.l.norm() + _r.r.norm())) {\r\n            console.assert(isFinite(_vec4.norm1() + _r.l.norm() + _r.r.norm()), \"oxoor\");\r\n        }\r\n        if (b._cachePoints) {\r\n            for (let p = 0, l = b.points.length; p < l; p++) {\r\n                b._cachePoints[p].copy(b.points[p]).rotates(_r).adds(_vec4);\r\n            }\r\n        } else {\r\n            b._cachePoints = b.points.map(\r\n                p => vec4Pool.pop().copy(p).rotates(_r).adds(_vec4)\r\n            );\r\n        }\r\n        // gjk intersection test\r\n        let inter = gjkDiffTest(a.points, b._cachePoints);\r\n        if (!inter.normals) return;\r\n        // epa collision generation\r\n        let result = epaDiff(a.points, b._cachePoints, inter as {\r\n            simplex1: Vec4[];\r\n            simplex2: Vec4[];\r\n            reverseOrder: boolean;\r\n            normals: Vec4[];\r\n        });\r\n        if (result?.normal) {\r\n            let depth = - result.distance;\r\n            let [a1, b1, c1, d1] = result.simplex1;\r\n            let [a2, b2, c2, d2] = result.simplex2;\r\n            let point = vec4Pool.pop();\r\n            if (a1 === b1 && a1 === c1 && a1 === d1) {\r\n                // vertex - ?\r\n                point.copy(a1).addmulfs(result.normal, result.distance * 0.5);\r\n            } else if (a2 === b2 && a2 === c2 && a2 === d2) {\r\n                // ? - vertex\r\n                point.copy(a2).addmulfs(result.normal, -result.distance * 0.5);\r\n            } else {\r\n                let A: Vec4[] = [], B: Vec4[] = [];\r\n                for (let i of result.simplex1) if (A.indexOf(i) === -1) A.push(i);\r\n                for (let i of result.simplex2) if (B.indexOf(i) === -1) B.push(i);\r\n                if ((A.length === 2 && B.length === 3) || (B.length === 2 && A.length === 3)) {\r\n                    // edge - face || face - edge\r\n                    let deltaD = result.distance * 0.5;\r\n                    if (B.length === 2) {\r\n                        let temp = A; A = B; B = temp;\r\n                        deltaD = -deltaD;\r\n                    }\r\n                    let p1a = _vec4.subset(B[0], A[0]);\r\n                    let p1p2 = vec4Pool.pop().subset(A[1], A[0]);\r\n                    let ab = vec4Pool.pop().subset(B[1], B[0]);\r\n                    let ac = vec4Pool.pop().subset(B[2], B[0]);\r\n                    let _a1 = p1p2.dot(p1a), _b1 = p1p2.dot(ab), _c1 = p1p2.dot(ac), _d1 = p1p2.dot(p1p2);\r\n                    let _a2 = ab.dot(p1a), _b2 = ab.dot(ab), _c2 = ab.dot(ac), _d2 = _b1;\r\n                    let _a3 = ac.dot(p1a), _b3 = _c2, _c3 = ac.dot(ac), _d3 = _c1;\r\n\r\n                    let det = (_b3 * _c2 - _b2 * _c3) * _d1 + (- _b3 * _c1 + _b1 * _c3) * _d2 + (_b2 * _c1 - _b1 * _c2) * _d3;\r\n                    if (det === 0) return;\r\n                    let detInv = 1 / det;\r\n                    let s = ((_a3 * _b2 - _a2 * _b3) * _c1 + (- _a3 * _b1 + _a1 * _b3) * _c2 + (_a2 * _b1 - _a1 * _b2) * _c3) * detInv;\r\n\r\n                    point.copy(A[0]).addmulfs(p1p2, s).addmulfs(result.normal, deltaD);\r\n                }\r\n            }\r\n            // if (!isFinite(point.norm1() + result.normal.norm1() + depth)) { console.warn(\"wrong convex collision numeric result\"); return; }\r\n            this.collisionList.push({\r\n                point: point.rotates(a.rigid.rotation).adds(a.rigid.position),\r\n                normal: result.normal.rotates(a.rigid.rotation),\r\n                depth, a: a.rigid, b: b.rigid\r\n            });\r\n        }\r\n    }\r\n    private detectSpheritorusPlane(a: rigid.Spheritorus, b: rigid.Plane) {\r\n        // convert plane to st's coord\r\n        let normal = _vec4.copy(b.normal).rotatesconj(a.rigid.rotation);\r\n        let offset = a.rigid.position.dot(b.normal) - b.offset;\r\n        let len = Math.hypot(normal.x, normal.w);\r\n        let depth = a.minorRadius - offset + len * a.majorRadius;\r\n        if (depth < 0) return;\r\n        // find support of circle along normal\r\n        if (normal.x === 0 && normal.w === 0) {\r\n            // deal perpendicular case: reduce contact to bottom center point\r\n            let point = a.rigid.position.clone().addmulfs(b.normal, (a.minorRadius + offset) * 0.5);\r\n            this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n        } else {\r\n            // point on circle\r\n            let point = new Vec4(normal.x, 0, 0, normal.w).mulfs(-a.majorRadius / len);\r\n            // then to world coord and add normal\r\n            point.rotates(a.rigid.rotation).adds(a.rigid.position).addmulfs(b.normal, depth * 0.5 - a.minorRadius);\r\n            this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n        }\r\n    }\r\n    private detectSpheritorusGlome(a: rigid.Spheritorus, b: rigid.Glome) {\r\n        // convert glome to st's coord\r\n        let p = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let xw = p.x * p.x + p.w * p.w;\r\n        let yz = p.y * p.y + p.z * p.z;\r\n        let sqrtxw = Math.sqrt(xw);\r\n        let distance = Math.sqrt(a.majorRadius * a.majorRadius + xw + yz - 2 * sqrtxw * a.majorRadius);\r\n        let depth = a.minorRadius + b.radius - distance;\r\n        if (depth < 0) return;\r\n        // find support of circle along normal\r\n        if (xw === 0) {\r\n            // deal perpendicular case: reduce contact to center point\r\n            let k = 1.0 - (b.radius - depth * 0.5) / distance;\r\n            let point = new Vec4(0, k * p.y, k * p.z).rotates(a.rigid.rotation);\r\n            let normal = point.clone().norms();\r\n            point.adds(a.rigid.position);\r\n            this.collisionList.push({ point, normal, depth: depth / Math.sqrt(yz) * distance, a: a.rigid, b: b.rigid });\r\n        } else {\r\n            let k = a.majorRadius / sqrtxw;\r\n            let point = new Vec4(p.x * k, 0, 0, p.w * k).rotates(a.rigid.rotation);\r\n            let normal = point.adds(a.rigid.position).sub(b.rigid.position).norms().negs();\r\n            point.addmulfs(normal, a.minorRadius - depth * 0.5);\r\n            this.collisionList.push({ point, normal, depth, a: a.rigid, b: b.rigid });\r\n        }\r\n    }\r\n\r\n    private detectSpheritorusSpheritorus(a: rigid.Spheritorus, b: rigid.Spheritorus) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let tempa = b.majorRadius * 0.5;\r\n        let tempb = b.majorRadius * _COS30;\r\n        // choose 3 initial points (120 degree) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(tempa, 0, 0, tempb),\r\n            vec4Pool.pop().set(tempa, 0, 0, -tempb),\r\n            vec4Pool.pop().set(-b.majorRadius)\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            let needContinue = false;\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let k = a.majorRadius / Math.hypot(newP.x, newP.w);\r\n                if (!isFinite(k)) { needContinue = true; break; }\r\n                // project to a\r\n                newP.set(newP.x * k, 0, 0, newP.w * k);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                k = b.majorRadius / Math.hypot(newP.x, newP.w);\r\n                if (!isFinite(k)) { needContinue = true; break; }\r\n                // project to b\r\n                newP.set(newP.x * k, 0, 0, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dw < epsilon) { break; }\r\n            }\r\n            if (needContinue) continue;\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            // console.log(converge);\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n        vec4Pool.push(...initialPB);\r\n    }\r\n\r\n    private detectTorispherePlane(a: rigid.Torisphere, b: rigid.Plane) {\r\n        // convert plane to ts's coord\r\n        let normal = _vec4.copy(b.normal).rotatesconj(a.rigid.rotation);\r\n        let offset = a.rigid.position.dot(b.normal) - b.offset;\r\n        let len = Math.hypot(normal.x, normal.z, normal.w);\r\n        let depth = a.minorRadius - offset + len * a.majorRadius;\r\n        if (depth < 0) return;\r\n        // find support of circle along normal\r\n        if (normal.x === 0 && normal.w === 0 && normal.z === 0) {\r\n            // deal perpendicular case: reduce contact to bottom center point\r\n            let point = a.rigid.position.clone().addmulfs(b.normal, (a.minorRadius + offset) * 0.5);\r\n            this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n        } else {\r\n            // point on sphere\r\n            let point = new Vec4(normal.x, 0, normal.z, normal.w).mulfs(-a.majorRadius / len);\r\n            // then to world coord and add normal\r\n            point.rotates(a.rigid.rotation).adds(a.rigid.position).addmulfs(b.normal, depth * 0.5 - a.minorRadius);\r\n            this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n        }\r\n    }\r\n    private detectTorisphereGlome(a: rigid.Torisphere, b: rigid.Glome) {\r\n        // convert glome to st's coord\r\n        let p = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let xzw = p.x * p.x + p.z * p.z + p.w * p.w;\r\n        let y = p.y * p.y;\r\n        let sqrtxzw = Math.sqrt(xzw);\r\n        let distance = Math.sqrt(a.majorRadius * a.majorRadius + xzw + y - 2 * sqrtxzw * a.majorRadius);\r\n        let depth = a.minorRadius + b.radius - distance;\r\n        if (depth < 0) return;\r\n        // find support of circle along normal\r\n        if (xzw === 0) {\r\n            // deal perpendicular case: reduce contact to center point\r\n            let k = 1.0 - (b.radius - depth * 0.5) / distance;\r\n            let point = new Vec4(0, k * p.y).rotates(a.rigid.rotation);\r\n            let normal = point.clone().norms();\r\n            point.adds(a.rigid.position);\r\n            this.collisionList.push({ point, normal, depth: depth / Math.abs(p.y) * distance, a: a.rigid, b: b.rigid });\r\n        } else {\r\n            let k = a.majorRadius / sqrtxzw;\r\n            let point = new Vec4(p.x * k, 0, p.z * k, p.w * k).rotates(a.rigid.rotation);\r\n            let normal = point.adds(a.rigid.position).sub(b.rigid.position).norms().negs();\r\n            point.addmulfs(normal, a.minorRadius - depth * 0.5);\r\n            this.collisionList.push({ point, normal, depth, a: a.rigid, b: b.rigid });\r\n        }\r\n    }\r\n\r\n    private detectTorisphereTorisphere(a: rigid.Torisphere, b: rigid.Torisphere) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let temp = b.majorRadius * _TAN30;\r\n        // choose 4 initial points (regular tetrahedron) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(temp, 0, temp, temp),\r\n            vec4Pool.pop().set(-temp, 0, -temp, temp),\r\n            vec4Pool.pop().set(-temp, 0, temp, -temp),\r\n            vec4Pool.pop().set(temp, 0, -temp, -temp),\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let k = a.majorRadius / Math.hypot(newP.x, newP.z, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to a\r\n                newP.set(newP.x * k, 0, newP.z * k, newP.w * k);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                k = b.majorRadius / Math.hypot(newP.x, newP.z, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to b\r\n                newP.set(newP.x * k, 0, newP.z * k, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dz = Math.abs(newP.z - p.z);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dz + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n\r\n    private detectTorisphereSpheritorus(a: rigid.Torisphere, b: rigid.Spheritorus) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let tempa = b.majorRadius * 0.5;\r\n        let tempb = b.majorRadius * _COS30;\r\n        // choose 3 initial points (120 degree) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(tempa, 0, 0, tempb),\r\n            vec4Pool.pop().set(tempa, 0, 0, -tempb),\r\n            vec4Pool.pop().set(-b.majorRadius)\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let k = a.majorRadius / Math.hypot(newP.x, newP.z, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to a\r\n                newP.set(newP.x * k, 0, newP.z * k, newP.w * k);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                k = b.majorRadius / Math.hypot(newP.x, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to b\r\n                newP.set(newP.x * k, 0, 0, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dw < epsilon) break;\r\n            }\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n    private detectTigerPlane(a: rigid.Tiger, b: rigid.Plane) {\r\n        // convert plane to ts's coord\r\n        let normal = _vec4.copy(b.normal).rotatesconj(a.rigid.rotation);\r\n        let offset = a.rigid.position.dot(b.normal) - b.offset;\r\n        let len1 = Math.hypot(normal.x, normal.y);\r\n        let len2 = Math.hypot(normal.z, normal.w);\r\n        let depth = a.minorRadius - offset + len1 * a.majorRadius1 + len2 * a.majorRadius2;\r\n        if (depth < 0) return;\r\n        // point on flat torus\r\n        let s1 = len1 ? -a.majorRadius1 / len1 : 0;\r\n        let s2 = len2 ? -a.majorRadius2 / len2 : 0;\r\n        let point = new Vec4(normal.x * s1, normal.y * s1, normal.z * s2, normal.w * s2);\r\n        // then to world coord and add normal\r\n        point.rotates(a.rigid.rotation).adds(a.rigid.position).addmulfs(b.normal, depth * 0.5 - a.minorRadius);\r\n        this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectTigerGlome(a: rigid.Tiger, b: rigid.Glome) {\r\n        // convert glome to st's coord\r\n        let p = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let xy = p.x * p.x + p.y * p.y;\r\n        let zw = p.z * p.z + p.w * p.w;\r\n        let sqrtxy = Math.sqrt(xy);\r\n        let sqrtzw = Math.sqrt(zw);\r\n        let distance = Math.sqrt(\r\n            a.majorRadius1 * a.majorRadius1 + a.majorRadius2 * a.majorRadius2\r\n            + xy + zw - 2 * (sqrtxy * a.majorRadius1 + sqrtzw * a.majorRadius2)\r\n        );\r\n        let depth = a.minorRadius + b.radius - distance;\r\n        if (depth < 0) return;\r\n        // find support of circle along normal\r\n        let k1 = sqrtxy ? a.majorRadius1 / sqrtxy : 0;\r\n        let k2 = sqrtzw ? a.majorRadius2 / sqrtzw : 0;\r\n        let point = new Vec4(p.x * k1, p.y * k1, p.z * k2, p.w * k2).rotates(a.rigid.rotation);\r\n        let normal = point.adds(a.rigid.position).sub(b.rigid.position).norms().negs();\r\n        point.addmulfs(normal, a.minorRadius - depth * 0.5);\r\n        this.collisionList.push({ point, normal, depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectTigerTiger(a: rigid.Tiger, b: rigid.Tiger) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let temp1 = b.majorRadius1;\r\n        let temp2 = b.majorRadius2;\r\n        // choose 8 initial points (w1=0.5,w2=1/4+1/4i) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(temp1, 0, temp2, 0),\r\n            vec4Pool.pop().set(temp1, 0, -temp2, 0),\r\n            vec4Pool.pop().set(-temp1, 0, temp2, 0),\r\n            vec4Pool.pop().set(-temp1, 0, -temp2, 0),\r\n            vec4Pool.pop().set(0, temp1, 0, temp2),\r\n            vec4Pool.pop().set(0, temp1, 0, -temp2),\r\n            vec4Pool.pop().set(0, -temp1, 0, temp2),\r\n            vec4Pool.pop().set(0, -temp1, 0, -temp2),\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let k1 = a.majorRadius1 / Math.hypot(newP.x, newP.y);\r\n                if (!isFinite(k1)) break;\r\n                let k2 = a.majorRadius2 / Math.hypot(newP.z, newP.w);\r\n                if (!isFinite(k2)) break;\r\n                // project to a\r\n                newP.set(newP.x * k1, newP.y * k1, newP.z * k2, newP.w * k2);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                k1 = b.majorRadius1 / Math.hypot(newP.x, newP.y);\r\n                if (!isFinite(k1)) break;\r\n                k2 = b.majorRadius2 / Math.hypot(newP.z, newP.w);\r\n                if (!isFinite(k2)) break;\r\n                // project to b\r\n                newP.set(newP.x * k1, newP.y * k1, newP.z * k2, newP.w * k2);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dy = Math.abs(newP.y - p.y);\r\n                let dz = Math.abs(newP.z - p.z);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dy + dz + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n    private detectTigerTorisphere(a: rigid.Tiger, b: rigid.Torisphere) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let temp = b.majorRadius * _TAN30;\r\n        // choose 4 initial points (regular tetrahedron) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(temp, 0, temp, temp),\r\n            vec4Pool.pop().set(-temp, 0, -temp, temp),\r\n            vec4Pool.pop().set(-temp, 0, temp, -temp),\r\n            vec4Pool.pop().set(temp, 0, -temp, -temp),\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let k1 = a.majorRadius1 / Math.hypot(newP.x, newP.y);\r\n                if (!isFinite(k1)) break;\r\n                let k2 = a.majorRadius2 / Math.hypot(newP.z, newP.w);\r\n                if (!isFinite(k2)) break;\r\n                // project to a\r\n                newP.set(newP.x * k1, newP.y * k1, newP.z * k2, newP.w * k2);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                let k = b.majorRadius / Math.hypot(newP.x, newP.z, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to b\r\n                newP.set(newP.x * k, 0, newP.z * k, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dz = Math.abs(newP.z - p.z);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dz + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n    private detectTigerSpheritorus(a: rigid.Tiger, b: rigid.Spheritorus) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let tempa = b.majorRadius * 0.5;\r\n        let tempb = b.majorRadius * _COS30;\r\n        // choose 3 initial points (120 degree) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(tempa, 0, 0, tempb),\r\n            vec4Pool.pop().set(tempa, 0, 0, -tempb),\r\n            vec4Pool.pop().set(-b.majorRadius)\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let k1 = a.majorRadius1 / Math.hypot(newP.x, newP.y);\r\n                if (!isFinite(k1)) break;\r\n                let k2 = a.majorRadius2 / Math.hypot(newP.z, newP.w);\r\n                if (!isFinite(k2)) break;\r\n                // project to a\r\n                newP.set(newP.x * k1, newP.y * k1, newP.z * k2, newP.w * k2);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                let k = b.majorRadius / Math.hypot(newP.x, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to b\r\n                newP.set(newP.x * k, 0, 0, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n    private detectDitorusPlane(a: rigid.Ditorus, b: rigid.Plane) {\r\n        // convert plane to ts's coord\r\n        let normal = _vec4.copy(b.normal).rotatesconj(a.rigid.rotation);\r\n        let offset = a.rigid.position.dot(b.normal) - b.offset;\r\n        let len1 = Math.hypot(normal.x, normal.y);\r\n        let len2 = Math.hypot(normal.z, len1);\r\n        let depth = a.minorRadius - offset + len1 * a.majorRadius + len2 * a.middleRadius;\r\n        if (depth < 0) return;\r\n        // point on torus\r\n        let s2 = len2 ? -a.middleRadius / len2 : 0;\r\n        let s1 = (len1 ? -a.majorRadius / len1 : 0) + s2;\r\n\r\n        let point = new Vec4(normal.x * s1, normal.y * s1, normal.z * s2, 0);\r\n        // then to world coord and add normal\r\n        point.rotates(a.rigid.rotation).adds(a.rigid.position).addmulfs(b.normal, depth * 0.5 - a.minorRadius);\r\n        this.collisionList.push({ point, normal: b.normal.neg(), depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectDitorusGlome(a: rigid.Ditorus, b: rigid.Glome) {\r\n        // convert glome to dt's coord\r\n        let p = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let sqrtxy = Math.hypot(p.x, p.y);\r\n        let d1 = sqrtxy - a.majorRadius; // distance to circle in xy plane\r\n        let d13 = Math.hypot(d1, p.z); // distance to circle in xyz cell\r\n        let d2 = d13 - a.middleRadius; // distance to torus in xyz cell\r\n        let distance = Math.sqrt(d2 * d2 + p.w * p.w); // distance to torus in R4\r\n        let depth = a.minorRadius + b.radius - distance;\r\n        let kz = a.middleRadius / d13;\r\n        let kxy = a.majorRadius / sqrtxy;\r\n        kxy += (1 - kxy) * kz;\r\n        if (depth < 0) return;\r\n        let point = new Vec4(p.x * kxy, p.y * kxy, p.z * kz, 0).rotates(a.rigid.rotation);\r\n        let normal = point.adds(a.rigid.position).sub(b.rigid.position).norms().negs();\r\n        point.addmulfs(normal, a.minorRadius - depth * 0.5);\r\n        this.collisionList.push({ point, normal, depth, a: a.rigid, b: b.rigid });\r\n    }\r\n    private detectDitorusSpheritorus(a: rigid.Ditorus, b: rigid.Spheritorus) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let tempa = b.majorRadius * 0.5;\r\n        let tempb = b.majorRadius * _COS30;\r\n        // choose 3 initial points (120 degree) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(tempa, 0, 0, tempb),\r\n            vec4Pool.pop().set(tempa, 0, 0, -tempb),\r\n            vec4Pool.pop().set(-b.majorRadius)\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let sqrtxy = Math.hypot(newP.x, newP.y);\r\n                let d1 = sqrtxy - a.majorRadius; // distance to circle in xy plane\r\n                let d13 = Math.hypot(d1, newP.z); // distance to circle in xyz cell\r\n                let kz = a.middleRadius / d13;\r\n                if (!isFinite(kz)) break;\r\n                let kxy = a.majorRadius / sqrtxy;\r\n                if (!isFinite(kxy)) break;\r\n                kxy += (1 - kxy) * kz;\r\n                // project to a\r\n                newP.set(newP.x * kxy, newP.y * kxy, newP.z * kz, 0);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                let k = b.majorRadius / Math.hypot(newP.x, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to b\r\n                newP.set(newP.x * k, 0, 0, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n    private detectDitorusTorisphere(a: rigid.Ditorus, b: rigid.Torisphere) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let temp = b.majorRadius * _TAN30;\r\n        // choose 4 initial points (regular tetrahedron) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(temp, 0, temp, temp),\r\n            vec4Pool.pop().set(-temp, 0, -temp, temp),\r\n            vec4Pool.pop().set(-temp, 0, temp, -temp),\r\n            vec4Pool.pop().set(temp, 0, -temp, -temp),\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let sqrtxy = Math.hypot(newP.x, newP.y);\r\n                let d1 = sqrtxy - a.majorRadius; // distance to circle in xy plane\r\n                let d13 = Math.hypot(d1, newP.z); // distance to circle in xyz cell\r\n                let kz = a.middleRadius / d13;\r\n                if (!isFinite(kz)) break;\r\n                let kxy = a.majorRadius / sqrtxy;\r\n                if (!isFinite(kxy)) break;\r\n                kxy += (1 - kxy) * kz;\r\n                // project to a\r\n                newP.set(newP.x * kxy, newP.y * kxy, newP.z * kz, 0);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                let k = b.majorRadius / Math.hypot(newP.x, newP.z, newP.w);\r\n                if (!isFinite(k)) break;\r\n                // project to b\r\n                newP.set(newP.x * k, 0, newP.z * k, newP.w * k);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dz = Math.abs(newP.z - p.z);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dz + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n\r\n    private detectDitorusTiger(a: rigid.Ditorus, b: rigid.Tiger) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let temp1 = b.majorRadius1;\r\n        let temp2 = b.majorRadius2;\r\n        // choose 8 initial points (w1=0.5,w2=1/4+1/4i) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(temp1, 0, temp2, 0),\r\n            vec4Pool.pop().set(temp1, 0, -temp2, 0),\r\n            vec4Pool.pop().set(-temp1, 0, temp2, 0),\r\n            vec4Pool.pop().set(-temp1, 0, -temp2, 0),\r\n            vec4Pool.pop().set(0, temp1, 0, temp2),\r\n            vec4Pool.pop().set(0, temp1, 0, -temp2),\r\n            vec4Pool.pop().set(0, -temp1, 0, temp2),\r\n            vec4Pool.pop().set(0, -temp1, 0, -temp2),\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let sqrtxy = Math.hypot(newP.x, newP.y);\r\n                let d1 = sqrtxy - a.majorRadius; // distance to circle in xy plane\r\n                let d13 = Math.hypot(d1, newP.z); // distance to circle in xyz cell\r\n                let kz = a.middleRadius / d13;\r\n                if (!isFinite(kz)) break;\r\n                let kxy = a.majorRadius / sqrtxy;\r\n                if (!isFinite(kxy)) break;\r\n                kxy += (1 - kxy) * kz;\r\n                // project to a\r\n                newP.set(newP.x * kxy, newP.y * kxy, newP.z * kz, 0);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                let k1 = b.majorRadius1 / Math.hypot(newP.x, newP.y);\r\n                if (!isFinite(k1)) break;\r\n                let k2 = b.majorRadius2 / Math.hypot(newP.z, newP.w);\r\n                if (!isFinite(k2)) break;\r\n                // project to b\r\n                newP.set(newP.x * k1, newP.y * k1, newP.z * k2, newP.w * k2);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dy = Math.abs(newP.y - p.y);\r\n                let dz = Math.abs(newP.z - p.z);\r\n                let dw = Math.abs(newP.w - p.w);\r\n                p.copy(newP);\r\n                if (dx + dy + dz + dw < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n\r\n    private detectDitorusDitorus(a: rigid.Ditorus, b: rigid.Ditorus) {\r\n        // position and rotation are b in a's frame \r\n        let position = _vec4.subset(b.rigid.position, a.rigid.position).rotatesconj(a.rigid.rotation);\r\n        let rotation = _r.copy(b.rigid.rotation).mulslconj(a.rigid.rotation);\r\n        let temp1 = b.majorRadius;\r\n        let temp2 = b.middleRadius;\r\n        // choose 8 initial points (w1=0.5,w2=1/4+1/4i) on b for iteration\r\n        let initialPB = [\r\n            vec4Pool.pop().set(temp1 + temp2),\r\n            vec4Pool.pop().set(temp1 - temp2),\r\n            vec4Pool.pop().set(-temp1 + temp2),\r\n            vec4Pool.pop().set(-temp1 - temp2),\r\n            vec4Pool.pop().set(0, temp1, temp2),\r\n            vec4Pool.pop().set(0, temp1, -temp2),\r\n            vec4Pool.pop().set(0, -temp1, temp2),\r\n            vec4Pool.pop().set(0, -temp1, -temp2),\r\n        ];\r\n        let newP = vec4Pool.pop();\r\n        let prevPInA = vec4Pool.pop();\r\n        let epsilon = Math.min(a.minorRadius, b.minorRadius) * 0.01;\r\n        for (let p of initialPB) {\r\n            // newP and p are in b\r\n            newP.copy(p);\r\n            for (let iterationCount = 0; iterationCount < this.maxIteration; iterationCount++) {\r\n                // from b to a\r\n                newP.rotates(rotation).adds(position);\r\n                let sqrtxy = Math.hypot(newP.x, newP.y);\r\n                let d1 = sqrtxy - a.majorRadius; // distance to circle in xy plane\r\n                let d13 = Math.hypot(d1, newP.z); // distance to circle in xyz cell\r\n                let kz = a.middleRadius / d13;\r\n                if (!isFinite(kz)) break;\r\n                let kxy = a.majorRadius / sqrtxy;\r\n                if (!isFinite(kxy)) break;\r\n                kxy += (1 - kxy) * kz;\r\n                // project to a\r\n                newP.set(newP.x * kxy, newP.y * kxy, newP.z * kz, 0);\r\n                prevPInA.copy(newP);\r\n                // from a to b\r\n                newP.subs(position).rotatesconj(rotation);\r\n                sqrtxy = Math.hypot(newP.x, newP.y);\r\n                d1 = sqrtxy - a.majorRadius; // distance to circle in xy plane\r\n                d13 = Math.hypot(d1, newP.z); // distance to circle in xyz cell\r\n                kz = a.middleRadius / d13;\r\n                if (!isFinite(kz)) break;\r\n                kxy = a.majorRadius / sqrtxy;\r\n                if (!isFinite(kxy)) break;\r\n                kxy += (1 - kxy) * kz;\r\n                // project to b\r\n                newP.set(newP.x * kxy, newP.y * kxy, newP.z * kz, 0);\r\n                // test if iteration still moves\r\n                let dx = Math.abs(newP.x - p.x);\r\n                let dy = Math.abs(newP.y - p.y);\r\n                let dz = Math.abs(newP.z - p.z);\r\n                p.copy(newP);\r\n                if (dx + dy + dz < epsilon) break;\r\n            }\r\n            // console.log(converge);\r\n            // else there might be collision\r\n            // transform newP to a, then compare newP and prevPInA\r\n            newP.rotates(rotation).adds(position);\r\n            let normal = newP.sub(prevPInA);\r\n            let depth = a.minorRadius + b.minorRadius - normal.norm();\r\n            if (depth < 0) continue;\r\n            normal.rotates(a.rigid.rotation).norms();\r\n            let point = newP.rotate(a.rigid.rotation).adds(a.rigid.position);\r\n            point.addmulfs(normal, -b.minorRadius + depth * 0.5);\r\n            this.collisionList.push({\r\n                normal, point, depth, a: a.rigid, b: b.rigid\r\n            })\r\n        }\r\n    }\r\n}\r\n","import { Bivec, bivecPool } from \"../math/algebra/bivec.js\";\r\nimport { Mat4, mat4Pool } from \"../math/algebra/mat4.js\";\r\nimport { rotorPool } from \"../math/algebra/rotor.js\";\r\nimport { Vec4, vec4Pool } from \"../math/algebra/vec4.js\";\r\nimport { _DEG2RAD } from \"../math/const.js\";\r\nimport { Constrain, Material, mulBivec, PointConstrain } from \"./engine.js\";\r\nimport { Collision } from \"./narrowphase.js\";\r\nimport { Rigid, SubRigid } from \"./rigid.js\";\r\n\r\nexport interface SolverConstructor {\r\n    new(): Solver;\r\n};\r\nexport abstract class Solver {\r\n    abstract run(collisionList: Collision[], constrainList: Constrain[]): void;\r\n}\r\nexport interface PreparedCollision extends Collision {\r\n    separateSpeed: number;\r\n    relativeVelocity: Vec4;\r\n    materialA: Material;\r\n    materialB?: Material;\r\n    dvA?: Vec4;\r\n    dvB?: Vec4;\r\n    dwA?: Bivec;\r\n    dwB?: Bivec;\r\n    pointConstrain?: PointConstrain;\r\n}\r\nexport class IterativeImpulseSolver extends Solver {\r\n    maxPositionIterations: number = 32;\r\n    maxVelocityIterations: number = 32;\r\n    maxResolveRotationAngle = 45 * _DEG2RAD;\r\n    separateSpeedEpsilon = 0.01;\r\n    PositionRelaxationFactor = 0.5;\r\n    collisionList: PreparedCollision[];\r\n    private _vec41 = new Vec4;\r\n    private _vec42 = new Vec4;\r\n    private pointConstrainMaterial = new Material(Infinity, 0);\r\n    run(collisionList: Collision[], constrainList: Constrain[]) {\r\n        if (!collisionList.length && !constrainList.length) return;\r\n        this.prepare(collisionList, constrainList);\r\n        this.resolveVelocity();\r\n        this.resolvePosition();\r\n    }\r\n    prepare(collisionList: Collision[], constrainList: Constrain[]) {\r\n        this.collisionList = collisionList.map(e => {\r\n            let { point, a, b, normal } = e;\r\n            let collision = e as PreparedCollision;\r\n            collision.materialA = a.material;\r\n            collision.materialB = b?.material;\r\n            // after got material, we solve union regardless of it's collision parts\r\n            if ((a as SubRigid).parent) collision.a = (a as SubRigid).parent!;\r\n            if ((b as SubRigid).parent) collision.b = (b as SubRigid).parent!;\r\n            collision.relativeVelocity = collision.b.getlinearVelocity(vec4Pool.pop(), point).subs(\r\n                collision.a.getlinearVelocity(this._vec41, point)\r\n            );\r\n            collision.separateSpeed = collision.relativeVelocity.dot(normal);\r\n            return collision;\r\n        });\r\n        for (let c of constrainList) {\r\n            if (c instanceof PointConstrain) {\r\n                let { a, b, pointA, pointB } = c;\r\n                this._vec41.copy(pointA).rotates(a.rotation);\r\n                let relativeVelocity = vec4Pool.pop().dotbset(\r\n                    this._vec41, a.angularVelocity\r\n                ).adds(a.velocity);\r\n                let normal: Vec4;\r\n                let point: Vec4;\r\n                if (b) {\r\n                    this._vec42.copy(pointB).rotates(b.rotation);\r\n                    relativeVelocity.subs(this._vec42.dotbset(\r\n                        this._vec42, b.angularVelocity\r\n                    ).adds(b.velocity));\r\n                    normal = this._vec41.adds(a.position).sub(this._vec42.adds(b.position));\r\n                    point = this._vec41.add(this._vec42).mulfs(0.5);\r\n                } else {\r\n                    normal = this._vec41.adds(a.position).sub(pointB);\r\n                    point = this._vec41.adds(pointB).mulfs(0.5);\r\n                }\r\n                let depth = normal.norm(); if (depth === 0) continue; normal.divfs(depth);\r\n                relativeVelocity.negs();\r\n                this.collisionList.push({\r\n                    a, b, normal, depth,\r\n                    materialA: this.pointConstrainMaterial,\r\n                    materialB: this.pointConstrainMaterial,\r\n                    relativeVelocity,\r\n                    separateSpeed: -relativeVelocity.norm(),\r\n                    point,\r\n                    pointConstrain: c\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveVelocity() {\r\n        // iteratively solve lowest separateSpeed\r\n        for (let i = 0; i < this.maxVelocityIterations; i++) {\r\n            let collision = this.collisionList.sort((a, b) => (\r\n                (a.pointConstrain ? (-Math.abs(a.separateSpeed)) : a.separateSpeed)\r\n                - (b.pointConstrain ? (-Math.abs(b.separateSpeed)) : b.separateSpeed)\r\n            ))[0];\r\n            if(!collision) return;\r\n            let { point, a, b, separateSpeed, normal, relativeVelocity, materialA, materialB } = collision;\r\n            if (!collision.pointConstrain) {\r\n                if (separateSpeed >= 0) return;\r\n            } else if (Math.abs(separateSpeed) < this.separateSpeedEpsilon) { return; }\r\n            let { restitution, friction } = Material.getContactMaterial(materialA, materialB!);\r\n            if (separateSpeed > -this.separateSpeedEpsilon) restitution = 0;\r\n            let normalVelocity = vec4Pool.pop().copy(normal).mulfs(separateSpeed);\r\n            let tangentVelocity = vec4Pool.pop().subset(relativeVelocity, normalVelocity);\r\n            let tangentSpeed = tangentVelocity.norm();\r\n            // newVn = Vn * -restitution;\r\n            // newVt = Vt * tangentFactor;\r\n            // when slide: deltaVt === friction * deltaVn => solve tangentFactor\r\n            // convert f = mu * N to delta(tangentSpeed) = mu * delta(normalVelocity)\r\n            // then calculate friction reduce how many tangentSpeed, result is presented by a tangentFactor\r\n            // tangentFactor must > 0, otherwise it's still friction\r\n            let tangentFactor = tangentSpeed > 0 ? Math.max(\r\n                1 + friction * (1 + restitution) * separateSpeed / tangentSpeed, 0\r\n            ) : 0;\r\n            let targetDeltaVelocityByImpulse = tangentVelocity.mulfs(tangentFactor - 1).addmulfs(normalVelocity, -restitution - 1);\r\n            let pointInA: Vec4, pointInB: Vec4;\r\n            let matA = mat4Pool.pop(), matB = mat4Pool.pop()\r\n            if (a.mass > 0) {\r\n                pointInA = vec4Pool.pop().subset(point, a.position).rotatesconj(a.rotation);\r\n                calcImpulseResponseMat(matA, a, pointInA, pointInA);\r\n            } else { matA.set(); }\r\n            if (b?.mass > 0) {\r\n                pointInB = vec4Pool.pop().subset(point, b.position).rotatesconj(b.rotation);\r\n                calcImpulseResponseMat(matB, b, pointInB, pointInB);\r\n            } else { matB.set(); }\r\n            // dv = dvb(Ib) - dva(Ia) == dvb(I) + dva(I) since I = -Ia = Ib\r\n            let impulse = targetDeltaVelocityByImpulse.mulmatls(matA.adds(matB).invs());\r\n            if (impulse.norm() > 1.0) {\r\n                console.log(\"hq\");\r\n            }\r\n            // if (impulse.norm1() === 0) continue;\r\n            // console.assert(isFinite(impulse.norm1()));\r\n            // console.assert(isFinite(normal.norm1()));\r\n            mat4Pool.push(matA, matB);\r\n            // resolve velocity by applying final impulse\r\n            if (b?.mass > 0) {\r\n                collision.dvB = vec4Pool.pop();\r\n                collision.dwB = bivecPool.pop();\r\n                applyImpulseAndGetDeltaVW(collision.dvB, collision.dwB, b, pointInB, impulse);\r\n            }\r\n            if (a.mass > 0) {\r\n                collision.dvA = vec4Pool.pop();\r\n                collision.dwA = bivecPool.pop();\r\n                applyImpulseAndGetDeltaVW(collision.dvA, collision.dwA, a, pointInA, impulse.negs());\r\n            }\r\n            this.updateSeparateSpeeds(collision);\r\n        }\r\n    }\r\n    updateSeparateSpeeds(collision: PreparedCollision) {\r\n        for (let c of this.collisionList) {\r\n            if (collision.a.mass > 0) {\r\n                if (c.a === collision.a) {\r\n                    this.updateSeparateSpeed(c, true, c.a, collision.dvA, collision.dwA);\r\n                } else if (c.b === collision.a) {\r\n                    this.updateSeparateSpeed(c, false, c.b, collision.dvA, collision.dwA);\r\n                }\r\n            }\r\n            if (collision.b?.mass > 0) {\r\n                if (c.a === collision.b) {\r\n                    this.updateSeparateSpeed(c, true, c.a, collision.dvB, collision.dwB);\r\n                } else if (c.b === collision.b) {\r\n                    this.updateSeparateSpeed(c, false, c.b, collision.dvB, collision.dwB);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateSeparateSpeed(collision: PreparedCollision, rigidIsA: boolean, rigid: Rigid, dv: Vec4, dw: Bivec) {\r\n        let delta = vec4Pool.pop().subset(collision.point, rigid.position).dotbsr(dw).adds(dv);\r\n        if (rigidIsA) delta.negs();\r\n\r\n        console.assert(isFinite(delta.norm1()), \"Numeric error in Collision solver updateDepth\");\r\n        collision.relativeVelocity.adds(delta);\r\n        if (collision.pointConstrain) {\r\n            collision.separateSpeed = -collision.relativeVelocity.norm();\r\n        }\r\n        else {\r\n            let dss = delta.dot(collision.normal); delta.pushPool();\r\n            collision.separateSpeed += dss;\r\n        }\r\n    }\r\n\r\n    resolvePosition() {\r\n        // iteratively solve the deepest\r\n        for (let i = 0; i < this.maxPositionIterations; i++) {\r\n            let collision = this.collisionList.sort((a, b) => b.depth - a.depth)[0];\r\n            if(!collision) return;\r\n            let { point, a, b, depth, normal } = collision;\r\n            if (depth <= 0) return;\r\n            if (depth > 10) {\r\n                console.error(\"Depth direction error in resolvePosition\");\r\n            }\r\n            let invInertiaA = 0, invInertiaB = 0;\r\n            if (a.mass > 0) {\r\n                let pA = vec4Pool.pop().subset(point, a.position);\r\n                let torqueA = bivecPool.pop().wedgevvset(normal, pA);\r\n                if (a.inertiaIsotroy) {\r\n                    collision.dwA = torqueA.mulfs(a.invInertia.xy);\r\n                } else {\r\n                    torqueA.rotatesconj(a.rotation);\r\n                    collision.dwA = mulBivec(torqueA, a.invInertia, torqueA).rotates(a.rotation);\r\n                }\r\n                invInertiaA = -pA.dotbset(pA, collision.dwA).dot(normal);\r\n                pA.pushPool();\r\n            }\r\n            if (b?.mass > 0) {\r\n                let pB = vec4Pool.pop().subset(point, b.position);\r\n                let torqueB = bivecPool.pop().wedgevvset(pB, normal);\r\n                if (b.inertiaIsotroy) {\r\n                    collision.dwB = torqueB.mulfs(b.invInertia.xy);\r\n                } else {\r\n                    torqueB.rotatesconj(b.rotation);\r\n                    collision.dwB = mulBivec(torqueB, b.invInertia, torqueB).rotates(b.rotation);\r\n                }\r\n                invInertiaB = pB.dotbset(pB, collision.dwB).dot(normal);\r\n                pB.pushPool();\r\n            }\r\n            // console.assert(invInertiaA >= 0);\r\n            // console.assert(invInertiaB >= 0);\r\n            let depthDivTotalInvs = depth * this.PositionRelaxationFactor / (a.invMass + (b?.invMass ?? 0) + invInertiaA + invInertiaB);\r\n            if (!isFinite(depthDivTotalInvs)) {\r\n                console.error(\"A numeric error occured in Rigid collision solver: depthDivTotalInvs in resolvePosition\");\r\n            }\r\n            if (a.mass > 0) {\r\n                // here can't mul invInertiaA since dwA is by unit impulse, and linear part is already invInertiaA\r\n                collision.dwA.mulfs(depthDivTotalInvs);\r\n                // clamp rotation\r\n                let angle = collision.dwA.norm();\r\n                if (angle > this.maxResolveRotationAngle) {\r\n                    collision.dwA.mulfs(this.maxResolveRotationAngle / angle);\r\n                }\r\n                collision.dvA = vec4Pool.pop().copy(normal).mulfs(-depthDivTotalInvs * a.invMass);\r\n                if (!isFinite(angle + collision.dvA.norm1() + collision.dwA.norm1() + a.position.norm1())) {\r\n                    console.error(\"A numeric error occured in Rigid collision solver: dvA,dwA in resolvePosition\");\r\n                }\r\n                a.position.adds(collision.dvA);\r\n                let r = rotorPool.pop().expset(collision.dwA);\r\n                a.rotation.mulsl(r); r.pushPool();\r\n                if (!isFinite(a.rotation.l.norm() + a.rotation.r.norm() + a.position.norm1())) {\r\n                    console.error(\"A numeric error occured in Rigid collision solver: dvA,dwA in resolvePosition\");\r\n                }\r\n            }\r\n            if (b?.mass > 0) {\r\n                collision.dwB.mulfs(depthDivTotalInvs);\r\n                // clamp rotation\r\n                let angle = collision.dwB.norm();\r\n                if (angle > this.maxResolveRotationAngle) {\r\n                    collision.dwB.mulfs(this.maxResolveRotationAngle / angle);\r\n                }\r\n                collision.dvB = vec4Pool.pop().copy(normal).mulfs(depthDivTotalInvs * b.invMass);\r\n                if (!isFinite(angle + collision.dvB.norm1() + collision.dwB.norm1() + b.position.norm1())) {\r\n                    console.error(\"A numeric error occured in Rigid collision solver: dvB,dwB in resolvePosition\");\r\n                }\r\n                b.position.adds(collision.dvB);\r\n                let r = rotorPool.pop().expset(collision.dwB!);\r\n                b.rotation.mulsl(r); r.pushPool();\r\n                if (!isFinite(b.rotation.l.norm() + b.rotation.r.norm() + b.position.norm1())) {\r\n                    console.error(\"A numeric error occured in Rigid collision solver: dvB,dwB in resolvePosition\");\r\n                }\r\n            }\r\n            // collision.depth = 0;\r\n            this.updateDepths(collision);\r\n        }\r\n    }\r\n    updateDepths(collision: PreparedCollision) {\r\n        for (let c of this.collisionList) {\r\n            if (collision.a.mass > 0) {\r\n                if (c.a === collision.a) {\r\n                    this.updateDepth(c, true, c.a, collision.dvA, collision.dwA!);\r\n                } else if (c.b === collision.a) {\r\n                    this.updateDepth(c, false, c.b, collision.dvA, collision.dwA!);\r\n                }\r\n            }\r\n            if (collision.b?.mass > 0) {\r\n                if (c.a === collision.b) {\r\n                    this.updateDepth(c, true, c.a, collision.dvB, collision.dwB!);\r\n                } else if (c.b === collision.b) {\r\n                    this.updateDepth(c, false, c.b, collision.dvB, collision.dwB!);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateDepth(collision: PreparedCollision, rigidIsA: boolean, rigid: Rigid, dv: Vec4, dw: Bivec) {\r\n        if (collision.pointConstrain) {\r\n            let a = collision.normal.copy(collision.pointConstrain.pointA).rotates(collision.a.rotation).adds(collision.a.position);\r\n            if (collision.b) {\r\n                let b = vec4Pool.pop().copy(collision.pointConstrain.pointB).rotates(collision.b.rotation).adds(collision.b.position);\r\n                a.subs(b); b.pushPool();\r\n            } else {\r\n                a.subs(collision.pointConstrain.pointB);\r\n            }\r\n            collision.depth = a.norm();\r\n            collision.normal.norms();\r\n        } else {\r\n            let a = vec4Pool.pop().subset(collision.point, rigid.position);\r\n            let dd = a.dotbsr(dw).adds(dv).dot(collision.normal);\r\n            console.assert(isFinite(a.norm1()), \"Numeric error in Collision solver updateDepth\");\r\n            collision.depth += rigidIsA ? dd : -dd;\r\n            a.pushPool();\r\n        }\r\n    }\r\n}\r\nlet _vec4x = new Vec4;\r\nlet _vec4y = new Vec4;\r\nlet _vec4z = new Vec4;\r\nlet _vec4w = new Vec4;\r\nlet _biv = new Bivec;\r\nlet _mat4r = new Mat4;\r\n\r\nfunction calcDeltaVWByImpulse(outV: Vec4, outW: Bivec, rigid: Rigid, localPoint: Vec4, impulse: Vec4) {\r\n    outV.copy(impulse).mulfs(rigid.invMass);\r\n    _vec4x.copy(impulse).rotatesconj(rigid.rotation);\r\n    mulBivec(outW, outW.wedgevvset(localPoint, _vec4x), rigid.invInertia!).rotates(rigid.rotation);\r\n};\r\nfunction applyImpulseAndGetDeltaVW(outV: Vec4, outW: Bivec, rigid: Rigid, localPoint: Vec4, impulse: Vec4) {\r\n    calcDeltaVWByImpulse(outV, outW, rigid, localPoint, impulse);\r\n    { console.assert(isFinite(outV.norm1() + outW.norm1()), \"A numeric error occured in Rigid collision solver: outV, outW in applyImpulseAndGetDeltaVW\"); }\r\n    rigid.velocity.adds(outV);\r\n    rigid.angularVelocity.adds(outW);\r\n    if (!isFinite(rigid.velocity.norm1() + rigid.angularVelocity.norm1())) { console.error(\"A numeric error occured in Rigid collision solver: rigid velocity in applyImpulseAndGetDeltaVW\"); }\r\n}\r\n/** calculate transfer matrix between impulse applying at src position and response delta velocity at dst position\r\n *  src and dst are in rigid's local frame\r\n */\r\nfunction calcImpulseResponseMat(out: Mat4, rigid: Rigid, src: Vec4, dst: Vec4) {\r\n    let ii = rigid.invInertia!;\r\n    // calculate relativePos cross base vectors and get angular part\r\n    _vec4x.dotbset(dst, _biv.set(-src.y * ii.xy, -src.z * ii.xz, -src.w * ii.xw));\r\n    _vec4y.dotbset(dst, _biv.set(src.x * ii.xy, 0, 0, -src.z * ii.yz, -src.w * ii.yw));\r\n    _vec4z.dotbset(dst, _biv.set(0, src.x * ii.xz, 0, src.y * ii.yz, 0, -src.w * ii.zw));\r\n    _vec4w.dotbset(dst, _biv.set(0, 0, src.x * ii.xw, 0, src.y * ii.yw, src.z * ii.zw));\r\n    out.augVec4set(_vec4x, _vec4y, _vec4z, _vec4w);\r\n    // add linear part (add a diagonal matrix inline)\r\n    out.elem[0] += rigid.invMass;\r\n    out.elem[5] += rigid.invMass;\r\n    out.elem[10] += rigid.invMass;\r\n    out.elem[15] += rigid.invMass;\r\n    _mat4r.setFromRotor(rigid.rotation);\r\n    // convert matrix to world frame by Mworld <= R Mlocal R'\r\n    return out.mulsl(_mat4r).mulsr(_mat4r.ts());\r\n}","import { Bivec } from \"../math/algebra/bivec.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { BoundingGlomeBroadPhase, BroadPhase, BroadPhaseConstructor } from \"./broadPhase.js\";\r\nimport { Force, ForceAccumulator, ForceAccumulatorConstructor, force_accumulator } from \"./forces\";\r\nimport { NarrowPhase } from \"./narrowphase.js\";\r\nimport { rigid, Rigid } from \"./rigid.js\";\r\nimport { IterativeImpulseSolver, Solver, SolverConstructor } from \"./solver.js\";\r\n\r\ninterface EngineOption {\r\n    forceAccumulator?: ForceAccumulatorConstructor;\r\n    broadPhase?: BroadPhaseConstructor;\r\n    solver?: SolverConstructor;\r\n    substep?: number;\r\n}\r\nexport class Engine {\r\n    forceAccumulator: ForceAccumulator;\r\n    broadPhase: BroadPhase;\r\n    narrowPhase: NarrowPhase;\r\n    solver: Solver;\r\n    substep: number;\r\n    constructor(option?: EngineOption) {\r\n        this.forceAccumulator = new (option?.forceAccumulator ?? force_accumulator.Predict3)();\r\n        this.broadPhase = new (option?.broadPhase ?? BoundingGlomeBroadPhase)();\r\n        this.narrowPhase = new NarrowPhase();\r\n        this.solver = new (option?.solver ?? IterativeImpulseSolver)();\r\n        this.substep = option?.substep ?? 1;\r\n    }\r\n    update(world: World, dt: number) {\r\n        dt /= this.substep;\r\n        for (let i = 0; i < this.substep; i++) {\r\n            this.step(world, dt);\r\n        }\r\n    }\r\n    step(world: World, dt: number) {\r\n        this.forceAccumulator.run(world, dt);\r\n        world.updateUnionGeometriesCoord();\r\n        this.broadPhase.run(world);\r\n        this.narrowPhase.run(this.broadPhase.checkList);\r\n        this.solver.run(this.narrowPhase.collisionList, world.constrains);\r\n        world.updateUnionGeometriesCoord();\r\n    }\r\n}\r\nexport class World {\r\n    gravity = new Vec4(0, -9.8);\r\n    rigids: Rigid[] = [];\r\n    constrains: Constrain[] = [];\r\n    unionRigids: rigid.Union[] = [];\r\n    forces: Force[] = [];\r\n    time: number = 0;\r\n    add(...args: (Rigid | Force | Constrain)[]) {\r\n        for (let o of args) {\r\n            if (o instanceof Rigid) {\r\n                this.rigids.push(o);\r\n                if (o.geometry instanceof rigid.Union) {\r\n                    this.unionRigids.push(o.geometry);\r\n                }\r\n                continue;\r\n            }\r\n            if (o instanceof Force) {\r\n                this.forces.push(o); continue;\r\n            }\r\n            if (o instanceof Constrain) {\r\n                this.constrains.push(o); continue;\r\n            }\r\n        }\r\n    }\r\n    remove(o: Rigid | Force) {\r\n        if (o instanceof Rigid) {\r\n            let index = this.rigids.indexOf(o);\r\n            if (index !== -1) {\r\n                this.rigids.splice(index, 1);\r\n                if (o.geometry instanceof rigid.Union) {\r\n                    let index = this.unionRigids.indexOf(o.geometry);\r\n                    if (index !== -1) {\r\n                        this.unionRigids.splice(index, 1);\r\n                    } else {\r\n                        console.warn(\"Union Rigid geometry is removed before rigid\");\r\n                    }\r\n                }\r\n            } else {\r\n                console.warn(\"Cannot remove a non-existed child\");\r\n            }\r\n        }\r\n        if (o instanceof Force) {\r\n            let index = this.forces.indexOf(o);\r\n            if (index !== -1) {\r\n                this.forces.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    }\r\n    updateUnionGeometriesCoord() {\r\n        for (let r of this.unionRigids) {\r\n            r.updateCoord();\r\n        }\r\n    }\r\n}\r\nexport class Material {\r\n    friction: number;\r\n    restitution: number;\r\n    constructor(friction: number, restitution: number) {\r\n        this.restitution = restitution;\r\n        this.friction = friction;\r\n    }\r\n    static getContactMaterial(a: Material, b: Material) {\r\n        return { restitution: a.restitution * b.restitution, friction: a.friction * b.friction };\r\n    }\r\n}\r\n/** a helper function for applying inertia to bivec */\r\nexport function mulBivec(self: Bivec, a: Bivec, b: Bivec) {\r\n    return self.set(\r\n        a.xy * b.xy,\r\n        a.xz * b.xz,\r\n        a.xw * b.xw,\r\n        a.yz * b.yz,\r\n        a.yw * b.yw,\r\n        a.zw * b.zw,\r\n    );\r\n}\r\nexport class Constrain {\r\n    a: Rigid;\r\n    b: Rigid | undefined;\r\n    constructor(a: Rigid, b?: Rigid | undefined) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n}\r\nexport class PointConstrain extends Constrain {\r\n    pointA: Vec4;\r\n    pointB: Vec4;\r\n    constructor(a: Rigid, b: Rigid | undefined, pointA: Vec4, pointB: Vec4) {\r\n        super(a, b); this.pointA = pointA; this.pointB = pointB;\r\n    }\r\n}","import { GPU } from \"../gpu.js\";\r\nexport type Size3DDict = { width: number, height: number, depth: number };\r\nfunction toSize3DDict(size: GPUExtent3D): Size3DDict {\r\n    let width: number, height: number, depth: number;\r\n    if ((size as GPUExtent3DDict).width) {\r\n        width = (size as GPUExtent3DDict).width;\r\n        height = (size as GPUExtent3DDict).height;\r\n        depth = (size as GPUExtent3DDict).depthOrArrayLayers;\r\n    } else {\r\n        width = size[0];\r\n        height = size[1];\r\n        depth = size[2];\r\n    }\r\n    return { width, height, depth };\r\n}\r\nexport interface VoxelBuffer {\r\n    buffer: GPUBuffer,\r\n    header?: ArrayBuffer,\r\n    width: number, height: number, depth: number, length: number, formatSize: number,\r\n}\r\nexport function createVoxelBuffer(\r\n    gpu: GPU, size: GPUExtent3D, formatSize: number,\r\n    header?: ArrayBuffer, headerSize?: number\r\n): VoxelBuffer {\r\n    let device = gpu.device;\r\n    let { width, height, depth } = toSize3DDict(size);\r\n    let length = width * height * depth;\r\n    headerSize ??= header?.byteLength ?? 0;\r\n    let buffer = device.createBuffer({\r\n        size: (4 + length * formatSize) * 4 + headerSize,\r\n        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\r\n        mappedAtCreation: true,\r\n        label: `VoxelBuffer<${width},${height},${depth},${formatSize}>`\r\n    });\r\n    let gpuBuffer = buffer.getMappedRange(0, headerSize + 16);\r\n    let jsBuffer = new Uint32Array(gpuBuffer);\r\n    jsBuffer.set([width, height, depth, formatSize]);\r\n    if (header) {\r\n        let headerBuffer = new Uint32Array(header);\r\n        jsBuffer.set(headerBuffer, 4);\r\n    }\r\n    buffer.unmap();\r\n    return { buffer, width, height, depth, length, formatSize, header };\r\n}"],"names":["_r","_vec4","WgslReflect","i","ResourceType","applyAffineMat4","applyObj4","cube","sphere","parametricSurface","face.polygon","face.circle","face.findBorder","Object","Material","range","tetra.tesseract","tetra.cube","tetra.glome","tetra.spheritorus","tetra.torisphere","tetra.spherinderSide","tetra.tiger","tetra.ditorus","tetra.duocylinder","tetra.convexhull","cwmesh","tetra.cwmesh"],"mappings":"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G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,EACpH,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,EACpH,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,EACpH,GAAG,GAAG,MAAM,EACZ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,EACpH,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,EACpH,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,EACpH,GAAG,GAAG,MAAM,EACZ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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AG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;IAC7H,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;IAC7H,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;IAC7H,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;IACrB,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;IAC7H,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;IAC7H,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,G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AAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAA,OAAgB,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAA,OAAgB,EAAE,GAAG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,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,IAAA,GAAG,KAAW,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAA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,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,C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C,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAA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,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CA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AC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CA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AC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,QAAQ,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,iCAAiC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,8BAA8B,CAAC,EAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,uBAAuB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,uBAAuB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,wBAAwB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyyBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,0BAA0B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAM,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,YAAY,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,YAAY,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,wBAAwB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAK,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,EAAE,CAA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AC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,SA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AAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;IAEpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IACnB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IACpB,QAAA,GAAG,EAAE,CAAC,GAAG,EAAE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O,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC,CAAC;IACp9K,IAAA,UAAU,CAAC,IAAU,EAAE,CAAO,EAAE,CAAQ,EAAA;IAC5C,QAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;IACzB,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/E,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;IAAE,YAAA,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IAC1C,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;gBACjD,MAAM,WAAW,GAAG,GAAG,CAAC;gBACxB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,WAAW,CAAC;gBACjC,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE;oBACpB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;oBAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,gBAAA,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAA,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;IAC5C,oBAAA,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACrF,iBAAA;IACJ,aAAA;qBAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACd,gBAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,gBAAA,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,OAAO,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;IACxF,aAAA;IAAM,iBAAA;IACH,gBAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,gBAAA,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1E,aAAA;gBACD,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;IAC7C,SAAA;YACD,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACb,OAAO;SACV;IACJ;;ICrtBD;IACQ,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,MAAM,UAAU,GAAG,EAAE,CAAC;IAEtB,SAAS,OAAO,CAAC,CAAS,EAAE,GAAS,EAAA;IACjC,IAAA,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC;IACxB,IAAA,IAAI,KAAW,CAAC;IAChB,IAAA,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,KAAK,GAAG,OAAO,EAAE;gBACjB,OAAO,GAAG,KAAK,CAAC;gBAChB,KAAK,GAAG,CAAC,CAAC;IACb,SAAA;IACJ,KAAA;IACD,IAAA,OAAO,KAAM,CAAC;IAClB,CAAC;IACD,SAAS,UAAU,CAAC,CAAS,EAAE,GAAS,EAAA;IACpC,IAAA,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC;IACxB,IAAA,IAAI,KAAW,CAAC;IAChB,IAAA,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,KAAK,GAAG,OAAO,EAAE;gBACjB,OAAO,GAAG,KAAK,CAAC;gBAChB,KAAK,GAAG,CAAC,CAAC;IACb,SAAA;IACJ,KAAA;IACD,IAAA,OAAO,KAAM,CAAC;IAClB,CAAC;IACD,SAAS,WAAW,CAAC,EAAU,EAAE,EAAU,EAAE,GAAS,EAAA;QAClD,IAAI,CAAC,GAAG,EAAE;IACN,QAAA,OAAO,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;IAC3E,KAAA;IACD,IAAA,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC;IACxB,IAAA,IAAI,MAAY,CAAC;IACjB,IAAA,IAAI,MAAY,CAAC;IACjB,IAAA,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;YACd,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,KAAK,GAAG,OAAO,EAAE;gBACjB,OAAO,GAAG,KAAK,CAAC;gBAChB,MAAM,GAAG,CAAC,CAAC;IACd,SAAA;IACJ,KAAA;QACD,OAAO,GAAG,CAAC,QAAQ,CAAC;IACpB,IAAA,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;YACd,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,KAAK,GAAG,OAAO,EAAE;gBACjB,OAAO,GAAG,KAAK,CAAC;gBAChB,MAAM,GAAG,CAAC,CAAC;IACd,SAAA;IACJ,KAAA;IACD,IAAA,OAAO,CAAC,MAAO,EAAE,MAAO,CAAC,CAAC;IAC9B,CAAC;IACD,SAAS,eAAe,CAAC,EAAU,EAAE,EAAU,EAAE,GAAS,EAAA;IACtD,IAAA,IAAI,QAAQ,GAAG,CAAC,QAAQ,CAAC;IACzB,IAAA,IAAI,MAAY,CAAC;IACjB,IAAA,IAAI,MAAY,CAAC;IACjB,IAAA,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;YACd,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,KAAK,GAAG,QAAQ,EAAE;gBAClB,QAAQ,GAAG,KAAK,CAAC;gBACjB,MAAM,GAAG,CAAC,CAAC;IACd,SAAA;IACJ,KAAA;IACD,IAAA,IAAI,QAAQ,GAAG,CAAC,QAAQ,CAAC;IACzB,IAAA,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;YACd,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,KAAK,GAAG,QAAQ,EAAE;gBAClB,QAAQ,GAAG,KAAK,CAAC;gBACjB,MAAM,GAAG,CAAC,CAAC;IACd,SAAA;IACJ,KAAA;IACD,IAAA,IAAI,QAAQ,GAAG,QAAQ,GAAG,CAAC;IAAE,QAAA,OAAO,EAAE,CAAC;IACvC,IAAA,OAAO,CAAC,MAAO,EAAE,MAAO,CAAC,CAAC;IAC9B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,wBAAwB,CAAC,CAAO,EAAE,CAAO,EAAA;QAC9C,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;QAAC,IAAI,EAAE,GAAG,CAAC;IAAE,QAAA,OAAO,CAAC,CAAC;QACjD,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;QAAC,IAAI,EAAE,GAAG,CAAC;IAAE,QAAA,OAAO,CAAC,CAAC;QACjD,OAAO,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IACD,SAAS,wBAAwB,CAAC,CAAO,EAAE,CAAO,EAAE,CAAO,EAAA;IACvD,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;IAChC,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACtB,OAAO,CAAC,CAAC,CAAC,CAAC;IACd,KAAA;IACD,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAChC,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtB,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;;IAED,IAAA,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAChC,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtB,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;QACD,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5C,GAAG,CAAC,QAAQ,EAAE,CAAC;IACf,IAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClB,IAAA,OAAO,GAAG,CAAC;IACf,CAAC;IACD,SAAS,wBAAwB,CAAC,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO,EAAA;IAChE,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;QAErC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;YACjD,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC1B,OAAO,CAAC,CAAC,CAAC,CAAC;IACd,KAAA;;IAED,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,IAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACtE,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YAChC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACtE,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YAChC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACtE,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YAChC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;;;IAGD,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACvC,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACvC,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACvC,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;;;;;;;QAOD,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAChC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAA,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,SAAS,gBAAgB,CAAC,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,YAAqB,EAAA;;;;;IAMxF,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAErC,IAAA,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;YAClE,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC9B,OAAO,CAAC,CAAC,CAAC,CAAC;IACd,KAAA;;IAED,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAC1G,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpC,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAC1G,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpC,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAC1G,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpC,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAC1G,QAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpC,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,KAAA;;;;IAID,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAChF,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAChF,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAChF,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAChF,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAChF,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAChF,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,QAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,KAAA;IACD,IAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpC,IAAA,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;;IAG7C,IAAA,IAAI,YAAY,EAAE;YACd,IAAI,CAAC,IAAI,EAAE,CAAC;YAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5B,KAAA;IAAM,SAAA;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;YAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5B,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,KAAA;;IAED,IAAA,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;IAC/D,CAAC;IACe,SAAA,cAAc,CAAC,MAAc,EAAE,WAAoB,EAAA;QAO/D,IAAI,CAAC,WAAW,EAAE;IACd,QAAA,WAAW,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,KAAA;;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,WAAW,CAAC;QACpB,IAAI,aAAsB,CAAC;;IAE3B,IAAA,IAAI,CAAO,CAAC;IACZ,IAAA,IAAI,EAA8D,CAAC;;IAEnE,IAAA,OAAO,KAAK,EAAE,GAAG,UAAU,EAAE;;YAEzB,QAAQ,CAAC,CAAC,MAAM;IACZ,YAAA,KAAK,CAAC;;oBAEF,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBACZ,OAAO;IACH,wBAAA,OAAO,EAAE,CAAC;IACV,wBAAA,MAAM,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;IACxC,wBAAA,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;yBACxB,CAAC;IACL,iBAAA;IACD,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACV,MAAM;IACV,YAAA,KAAK,CAAC;IACF,gBAAA,EAAE,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE1C,gBAAA,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAAC,CAAC,CAAC,GAAG,EAAE,CAAC;wBAAC,SAAS;IAAE,iBAAA;;IAEpD,gBAAA,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;IAAE,oBAAA,OAAO,EAAE,CAAC;IAAE,iBAAA;;IAEpC,gBAAA,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;IAExB,gBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,iBAAA;oBACrG,EAAE,CAAC,QAAQ,EAAE,CAAC;IACd,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACV,MAAM;IACV,YAAA,KAAK,CAAC;IACF,gBAAA,EAAE,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,IAAK,EAAa,CAAC,MAAM,EAAE;;wBAEvB,CAAC,GAAG,EAAY,CAAC;wBAAC,SAAS;IAC9B,iBAAA;;IAED,gBAAA,IAAK,EAAW,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;IAAE,oBAAA,OAAO,EAAE,CAAC;IAAE,iBAAA;;IAG9C,gBAAA,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAU,CAAC,CAAC;;oBAEhC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBACxC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAG,EAAW,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAE,EAAW,CAAC,EAAE,CAAC;IAC1F,iBAAA;oBACA,EAAW,CAAC,QAAQ,EAAE,CAAC;IACxB,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACV,MAAM;IACV,YAAA,KAAK,CAAC;oBACF,EAAE,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtD,IAAK,EAAa,CAAC,MAAM,EAAE;;wBAEvB,CAAC,GAAG,EAAY,CAAC;wBAAC,SAAS;IAC9B,iBAAA;oBACD,IAAI,MAAM,GAAG,EAAU,CAAC;IACxB,gBAAA,IAAI,SAAS,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,gBAAA,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;IAC9B,gBAAA,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;IAExB,gBAAA,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;IAAE,oBAAA,OAAO,EAAE,CAAA;IAAE,iBAAA;;IAGvC,gBAAA,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;;oBAE5B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAAE,iBAAA;oBACzI,MAAM,CAAC,QAAQ,EAAE,CAAC;IAClB,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACV,MAAM;IACV,YAAA,KAAK,CAAC;;IAEF,gBAAA,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,aAAc,CAAC,CAAC;oBACpE,IAAK,EAAa,CAAC,MAAM,EAAE;;wBAEvB,CAAC,GAAG,EAAY,CAAC;wBAAC,SAAS;IAC9B,iBAAA;IAAM,qBAAA;;wBAEH,IAAI,IAAI,GAAG,EAGV,CAAC;IACF,oBAAA,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjF,oBAAA,OAAO,GAAG,CAAC;IACd,iBAAA;gBAEL,SAAS,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;IAC1D,SAAA;IACJ,KAAA;IACD,IAAA,OAAO,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;IAAC,IAAA,OAAO,EAAE,CAAC;IACpG,CAAC;IACD;IACM,SAAU,WAAW,CAAC,OAAe,EAAE,OAAe,EAAE,YAAqB,EAAE,YAAqB,EAAA;QAMtG,IAAI,CAAC,YAAY,EAAE;IACf,QAAA,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAA;QACD,IAAI,CAAC,YAAY,EAAE;IACf,QAAA,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAA;;QAED,IAAI,EAAE,GAAG,YAAY,CAAC;QACtB,IAAI,EAAE,GAAG,YAAY,CAAC;IACtB,IAAA,IAAI,aAAsB,CAAC;;IAE3B,IAAA,IAAI,EAAQ,CAAC;IACb,IAAA,IAAI,EAAQ,CAAC;IACb,IAAA,IAAI,MAAY,CAAC;IACjB,IAAA,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;;;;QAI3B,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,IAAA,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACvC,QAAA,OAAO,EAAE,CAAC;IACb,KAAA;IACD,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAC,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;QAGzB,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,IAAA,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;IAAE,QAAA,OAAO,EAAE,CAAC;IAAE,KAAA;IACxC,IAAA,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;IAErD,IAAA,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,QAAA,OAAO,EAAE,CAAC;IAAE,KAAA;QAC3F,MAAM,CAAC,QAAQ,EAAE,CAAC;IAClB,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAC,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;IAGzB,IAAA,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAA,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;IAAE,QAAA,OAAO,EAAE,CAAC;IAAE,KAAA;IACxC,IAAA,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;QAErD,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3G,QAAA,OAAO,EAAE,CAAC;IACb,KAAA;QACD,MAAM,CAAC,QAAQ,EAAE,CAAC;IAClB,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAC,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;IAGzB,IAAA,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,IAAA,IAAI,SAAS,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,IAAI,SAAS,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7D,IAAA,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACxB,IAAA,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;IAAE,QAAA,OAAO,EAAE,CAAC;IAAE,KAAA;IACxC,IAAA,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;IAC9B,IAAA,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;IAErD,IAAA,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7I,QAAA,OAAO,EAAE,CAAC;IACb,KAAA;QACD,MAAM,CAAC,QAAQ,EAAE,CAAC;IAClB,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAC,IAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzB,IAAA,OAAO,IAAI,EAAE;YACT,IAAI,GAAG,GAAG,cAAc,CACpB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EACjC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,CACnD,CAAC;IACF,QAAA,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;;gBAEb,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,GAAG,CAAC,YAAY,EAAE,CAAC;IAC/F,SAAA;IACD,QAAA,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC;IACjC,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;;IAEzD,QAAA,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC/K,YAAA,OAAO,EAAE,CAAC;IACb,SAAA;IACD,QAAA,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC;IAAC,QAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/B,QAAA,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC;IAAC,QAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,KAAA;IACL,CAAC;IACD,SAAS,cAAc,CAAC,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAA;IAC1D,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACtC,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;QAC3B,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;QAC3B,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,IAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,IAAA,OAAO,GAAG,CAAC;IACf,CAAC;IACD,SAAS,cAAc,CACnB,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAC5B,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAA;IAE5B,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAErC,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7C,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5C,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC3C,IAAA,OAAO,GAAG,CAAC;IACf,CAAC;IACD,SAAS,cAAc,CACnB,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EACtC,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAA;IAEtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAErC,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAC9C,GAAG,CAAC,QAAQ,EAAE,CAAC;IACf,IAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,SAAS,cAAc,CACnB,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAChD,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAChD,YAAqB,EAAA;IAErB,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAErC,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAE7C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAA,IAAI,YAAY,EAAE;YACd,IAAI,CAAC,IAAI,EAAE,CAAC;YAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5B,KAAA;IAAM,SAAA;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;YAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5B,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,QAAA,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC;IAC/G,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,QAAA,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,YAAY,EAAE,CAAC;IAChH,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,QAAA,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC;IAC/G,KAAA;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,QAAA,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,YAAY,EAAE,CAAC;IAChH,KAAA;QACD,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9B,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE7C,IAAA,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;IAC/D,CAAC;IAiJD;aACgB,OAAO,CAAC,OAAe,EAAE,OAAe,EAAE,aAKzD,EAAA;IACG,IAAA,IAAI,EAAE,GAAG,aAAa,CAAC,QAAQ,CAAC;IAChC,IAAA,IAAI,EAAE,GAAG,aAAa,CAAC,QAAQ,CAAC;IAChC,IAAA,IAAI,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;QACpC,IAAI,aAAa,CAAC,YAAY,EAAE;IAC5B,QAAA,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAAC,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,QAAA,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAAC,QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC1C,QAAA,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAAC,QAAA,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACvE,KAAA;IACD,IAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IACtB,QAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,QAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,QAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAErE,QAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,QAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;YACjD,GAAG,CAAC,QAAQ,EAAE,CAAC;YACf,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7B,KAAA;;IAED,IAAA,IAAI,GAAG,GAAG;IACN,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/B,CAAA;IACD,IAAA,IAAI,GAAG,GAAG;IACN,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/B,CAAA;;QAED,IAAI,EAAE,GAAG,OAAO,CAAC;;QAEjB,IAAI,EAAE,GAAY,EAAE,CAAC;QACrB,IAAI,IAAI,GAAG,QAAQ,CAAC;IACpB,IAAA,IAAI,KAAa,CAAC;IAElB,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IACxB,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IACxB,IAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IACxB,IAAA,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IACzB,IAAA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxB,QAAA,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACd,QAAA,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,QAAA,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACb,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,wBAAwB,CAAC,CAAC;YAClD,IAAI,GAAG,GAAG,IAAI,EAAE;gBACZ,KAAK,GAAG,CAAC,CAAC;gBACV,IAAI,GAAG,GAAG,CAAC;IACd,SAAA;IACJ,KAAA;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAA,OAAO,KAAK,EAAE,GAAG,UAAU,EAAE;IACzB,QAAA,IAAI,KAAK,GAAG,GAAG,CAAC,KAAM,CAAC,CAAC;IACxB,QAAA,IAAI,KAAK,GAAG,GAAG,CAAC,KAAM,CAAC,CAAC;IACxB,QAAA,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,KAAM,CAAC,CAAC,CAAC;IACzD,QAAA,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACnB,IAAI,EAAE,CAAC,KAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI;IAC3B,aAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,aAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,aAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,aAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,EACtC;;IAEE,YAAA,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;IACd,gBAAA,IAAI,CAAC,KAAK,EAAE,CAAC,KAAM,CAAC;wBAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtC,aAAA;gBACD,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1B,YAAA,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;gBAGpB,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,KAAM,CAAC,EAAE,CAAA;IACnF,SAAA;YAED,IAAI,GAAG,QAAQ,CAAC;;YAGhB,IAAI,MAAM,GAAa,EAAE,CAAC;YAC1B,IAAI,MAAM,GAAa,EAAE,CAAC;YAC1B,IAAI,KAAK,GAAW,EAAE,CAAC;YACvB,IAAI,KAAK,GAAa,EAAE,CAAC;;;;YAIzB,IAAI,MAAM,GAAuG,EAAE,CAAC;IACpH,QAAA,SAAS,WAAW,CAChB,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAC5B,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAA;IAE5B,YAAA,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;IAClB,gBAAA,IACI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;IACvF,qBAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACxF,qBAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAC1F;IACE,oBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;wBAAC,OAAO;IAC5B,iBAAA;IACJ,aAAA;IACD,YAAA,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;aACzC;IACD,QAAA,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;IAClD,YAAA,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,YAAA,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAAC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAAC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAAC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAAC,YAAA,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3D,IAAI,WAAW,GAAG,CAAC,EAAE;IACjB,gBAAA,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,gBAAA,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,gBAAA,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,gBAAA,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,aAAA;IAAM,iBAAA;IACH,gBAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,gBAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;oBACpB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACpB,gBAAA,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;IAChB,oBAAA,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAAC,oBAAA,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5C,iBAAA;IACJ,aAAA;IACJ,SAAA;IACD,QAAA,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;IAClB,YAAA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAAE,SAAS;IACpB,YAAA,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC;IACjC,YAAA,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC;IAClC,YAAA,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC;IAClC,YAAA,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;IACvC,YAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;gBAC1D,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,GAAG,CAAC;oBAAE,OAAO;;gBAElB,IAAI,CAAC,GAAG,IAAI,EAAE;oBACV,IAAI,GAAG,CAAC,CAAC;IAAC,gBAAA,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;IAClC,aAAA;IACD,YAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACd,YAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,SAAA;YACD,EAAE,GAAG,KAAK,CAAC;YACX,GAAG,GAAG,MAAM,CAAC;YACb,GAAG,GAAG,MAAM,CAAC;YACb,EAAE,GAAG,KAAK,CAAC;IACd,KAAA;;IAEL;;ICl2BR;IACA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC;IACrB,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC;UACN,WAAW,CAAA;QACpB,aAAa,GAAgB,EAAE,CAAC;;QAEhC,YAAY,GAAG,CAAC,CAAC;QACjB,kBAAkB,GAAA;IACd,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SAC3B;IACD,IAAA,GAAG,CAAC,IAAoB,EAAA;YACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE;IACrB,YAAA,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,SAAA;SACJ;QACD,eAAe,CAAC,MAAa,EAAE,MAAa,EAAA;YACxC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;IAC7C,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,YAAY,EAAE;IACjC,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK,EAAE;IAC1B,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,MAAM;oBAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU;oBAAE,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,YAAY;oBAAE,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClF,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK,EAAE;IAC1B,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,MAAM;oBAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU;oBAAE,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxE,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,MAAM,EAAE;IAC3B,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,MAAM,EAAE;;oBAE3B,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM;wBACjC,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzC,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,aAAA;IACJ,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW,EAAE;IAChC,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC,4BAA4B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnF,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU;oBAAE,OAAO,IAAI,CAAC,2BAA2B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9E,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU,EAAE;IAC/B,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU;oBAAE,OAAO,IAAI,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChF,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC,2BAA2B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClF,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7E,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK,EAAE;IAC1B,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU;oBAAE,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpE,SAAA;IACD,QAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO,EAAE;IAC5B,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,UAAU;oBAAE,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,YAAA,IAAI,CAAC,YAAY,KAAK,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E,SAAA;SACJ;QACO,gBAAgB,CAAC,CAAc,EAAE,CAAc,EAAA;IACnD,QAAA,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAA,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACpC,IAAI,KAAK,GAAG,CAAC;IAAE,YAAA,OAAO,IAAI,CAAC;;YAE3B,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACpC,QAAA,IAAI,KAAW,CAAC;IAChB,QAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;gBACvB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtE,SAAA;IAAM,aAAA;IACH,YAAA,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IAC3C,YAAA,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IACtG,SAAA;YACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7E;QACO,uBAAuB,CAAC,CAAc,EAAE,CAAqB,EAAA;IACjE,QAAA,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAA,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACpC,IAAI,KAAK,GAAG,CAAC;IAAE,YAAA,OAAO,IAAI,CAAC;;YAE3B,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;YAE5E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7E;QACO,gBAAgB,CAAC,CAAc,EAAE,CAAc,EAAA;YACnD,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;YACnE,IAAI,KAAK,GAAG,CAAC;IAAE,YAAA,OAAO,IAAI,CAAC;YAC3B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IAChF,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7F;QACO,iBAAiB,CAAC,CAAe,EAAE,CAAc,EAAA;;IAErD,QAAA,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACvD,QAAA,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;IACpB,YAAA,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBACtC,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IACrG,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7F,SAAA;SACJ;QACO,iBAAiB,CAAC,CAAe,EAAE,CAAc,EAAA;YACrD,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC/E,IAAI,CAAC,CAAC,YAAY,EAAE;IAChB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7C,gBAAA,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAChD,aAAA;IACJ,SAAA;IAAM,aAAA;gBACH,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACvE,SAAA;YACD,IAAI,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;IAC5C,QAAA,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAElC,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACvC,IAAI,KAAK,GAAG,CAAC;oBAAE,OAAO;gBACtB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACxC,YAAA,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAA;IAC9G,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5F,SAAA;;SAEJ;QACO,kBAAkB,CAAC,CAAe,EAAE,CAAe,EAAA;;YAEvD,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC/E,QAAA,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;gBACtD,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IAChF,SAAA;YACD,IAAI,CAAC,CAAC,YAAY,EAAE;IAChB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC7C,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,aAAA;IACJ,SAAA;IAAM,aAAA;IACH,YAAA,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CACzB,CAAC,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CACtD,CAAC;IACL,SAAA;;IAED,QAAA,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;YAClD,IAAI,CAAC,KAAK,CAAC,OAAO;gBAAE,OAAO;;IAE3B,QAAA,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,YAAY,EAAE,KAK9C,CAAC,CAAC;YACH,IAAI,MAAM,EAAE,MAAM,EAAE;IAChB,YAAA,IAAI,KAAK,GAAG,CAAE,MAAM,CAAC,QAAQ,CAAC;IAC9B,YAAA,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;IACvC,YAAA,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;IACvC,YAAA,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAC3B,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;;IAErC,gBAAA,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;IACjE,aAAA;qBAAM,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;;IAE5C,gBAAA,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;IAClE,aAAA;IAAM,iBAAA;IACH,gBAAA,IAAI,CAAC,GAAW,EAAE,EAAE,CAAC,GAAW,EAAE,CAAC;IACnC,gBAAA,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ;wBAAE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAAE,wBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClE,gBAAA,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ;wBAAE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAAE,wBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAClE,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;;IAE1E,oBAAA,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;IACnC,oBAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;4BAChB,IAAI,IAAI,GAAG,CAAC,CAAC;4BAAC,CAAC,GAAG,CAAC,CAAC;4BAAC,CAAC,GAAG,IAAI,CAAC;4BAC9B,MAAM,GAAG,CAAC,MAAM,CAAC;IACpB,qBAAA;IACD,oBAAA,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,oBAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,oBAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,oBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtF,oBAAA,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC;wBACrE,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC;IAE9D,oBAAA,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;wBAC1G,IAAI,GAAG,KAAK,CAAC;4BAAE,OAAO;IACtB,oBAAA,IAAI,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;IACrB,oBAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,MAAM,CAAC;wBAEnH,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACtE,iBAAA;IACJ,aAAA;;IAED,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7D,gBAAA,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;oBAC/C,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAChC,aAAA,CAAC,CAAC;IACN,SAAA;SACJ;QACO,sBAAsB,CAAC,CAAoB,EAAE,CAAc,EAAA;;IAE/D,QAAA,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACvD,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;YACzD,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;YAEtB,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;;gBAElC,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;IACxF,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7F,SAAA;IAAM,aAAA;;gBAEH,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;;IAE3E,YAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;IACvG,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7F,SAAA;SACJ;QACO,sBAAsB,CAAC,CAAoB,EAAE,CAAc,EAAA;;YAE/D,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACvF,QAAA,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAA,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAC/F,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAChD,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;YAEtB,IAAI,EAAE,KAAK,CAAC,EAAE;;IAEV,YAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,IAAI,QAAQ,CAAC;IAClD,YAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACpE,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;gBACnC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7B,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/G,SAAA;IAAM,aAAA;IACH,YAAA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;IAC/B,YAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACvE,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/E,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;gBACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7E,SAAA;SACJ;QAEO,4BAA4B,CAAC,CAAoB,EAAE,CAAoB,EAAA;;YAE3E,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;IAChC,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAEnC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;aACrC,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,YAAY,GAAG,KAAK,CAAC;IACzB,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnD,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;wBAAE,YAAY,GAAG,IAAI,CAAC;wBAAC,MAAM;IAAE,iBAAA;;IAEjD,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;wBAAE,YAAY,GAAG,IAAI,CAAC;wBAAC,MAAM;IAAE,iBAAA;;IAEjD,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEvC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,OAAO,EAAE;wBAAE,MAAM;IAAE,iBAAA;IACpC,aAAA;IACD,YAAA,IAAI,YAAY;oBAAE,SAAS;;;gBAG3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;;IAExB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;IACD,QAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;SAC/B;QAEO,qBAAqB,CAAC,CAAmB,EAAE,CAAc,EAAA;;IAE7D,QAAA,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACvD,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;YACzD,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;IAEtB,QAAA,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;;gBAEpD,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;IACxF,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7F,SAAA;IAAM,aAAA;;IAEH,YAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;;IAElF,YAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;IACvG,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7F,SAAA;SACJ;QACO,qBAAqB,CAAC,CAAmB,EAAE,CAAc,EAAA;;YAE7D,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvF,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAChG,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAChD,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;YAEtB,IAAI,GAAG,KAAK,CAAC,EAAE;;IAEX,YAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,IAAI,QAAQ,CAAC;gBAClD,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC3D,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;gBACnC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7B,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/G,SAAA;IAAM,aAAA;IACH,YAAA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC7E,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/E,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;gBACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7E,SAAA;SACJ;QAEO,0BAA0B,CAAC,CAAmB,EAAE,CAAmB,EAAA;;YAEvE,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAElC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IACzC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC;IACzC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;aAC5C,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACtC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3D,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;oBAExB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAC1C,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;oBAExB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEhD,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IACrC,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QAEO,2BAA2B,CAAC,CAAmB,EAAE,CAAoB,EAAA;;YAEzE,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;IAChC,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAEnC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;aACrC,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACtC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3D,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;oBAExB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;IAExB,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEvC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IAChC,aAAA;;;gBAGD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QACO,gBAAgB,CAAC,CAAc,EAAE,CAAc,EAAA;;IAEnD,QAAA,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACvD,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC;YACnF,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;IAEtB,QAAA,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC;IAC3C,QAAA,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC;IAC3C,QAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;IAEjF,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;IACvG,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7F;QACO,gBAAgB,CAAC,CAAc,EAAE,CAAc,EAAA;;YAEnD,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACvF,QAAA,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAA,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CACpB,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY;IAC/D,cAAA,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC,YAAY,CAAC,CACtE,CAAC;YACF,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAChD,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;IAEtB,QAAA,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC;IAC9C,QAAA,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC;IAC9C,QAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvF,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/E,QAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7E;QACO,gBAAgB,CAAC,CAAc,EAAE,CAAc,EAAA;;YAEnD,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC;IAC3B,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC;;IAE3B,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;aAC3C,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;;oBAEzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7D,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;;oBAEzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;IAE7D,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IAC1C,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QACO,qBAAqB,CAAC,CAAc,EAAE,CAAmB,EAAA;;YAE7D,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAElC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IACzC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC;IACzC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;aAC5C,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;;oBAEzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7D,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3D,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;oBAExB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEhD,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IACrC,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QACO,sBAAsB,CAAC,CAAc,EAAE,CAAoB,EAAA;;YAE/D,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;IAChC,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAEnC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;aACrC,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;;oBAEzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7D,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnD,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;IAExB,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEvC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IAChC,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QACO,kBAAkB,CAAC,CAAgB,EAAE,CAAc,EAAA;;IAEvD,QAAA,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACvD,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACtC,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC;YAClF,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;;IAEtB,QAAA,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC;YAC3C,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;YAEjD,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;;IAErE,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;IACvG,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7F;QACO,kBAAkB,CAAC,CAAgB,EAAE,CAAc,EAAA;;YAEvD,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACvF,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC;IAChC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,YAAY,CAAC;YAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChD,QAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;IAC9B,QAAA,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;YACjC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;YACtB,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;IACtB,QAAA,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAClF,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/E,QAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SAC7E;QACO,wBAAwB,CAAC,CAAgB,EAAE,CAAoB,EAAA;;YAEnE,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;IAChC,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAEnC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;aACrC,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC;IAChC,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;IAC9B,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;IACjC,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAAE,MAAM;oBAC1B,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;;oBAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACrD,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnD,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;IAExB,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEvC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IAChC,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QACO,uBAAuB,CAAC,CAAgB,EAAE,CAAmB,EAAA;;YAEjE,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;;IAElC,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IACzC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC;IACzC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;aAC5C,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC;IAChC,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;IAC9B,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;IACjC,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAAE,MAAM;oBAC1B,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;;oBAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACrD,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3D,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAAE,MAAM;;oBAExB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEhD,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IACrC,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QAEO,kBAAkB,CAAC,CAAgB,EAAE,CAAc,EAAA;;YAEvD,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC;IAC3B,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC;;IAE3B,QAAA,IAAI,SAAS,GAAG;IACZ,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;IACtC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;IACvC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;aAC3C,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC;IAChC,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;IAC9B,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;IACjC,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAAE,MAAM;oBAC1B,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;;oBAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACrD,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;;oBAEzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;IAE7D,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IAC1C,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;QAEO,oBAAoB,CAAC,CAAgB,EAAE,CAAgB,EAAA;;YAE3D,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,CAAC;IAC1B,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC;;IAE3B,QAAA,IAAI,SAAS,GAAG;gBACZ,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;gBAClC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;gBAClC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;IACnC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC;IACpC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;IACpC,YAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC;aACxC,CAAC;IACF,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC9B,QAAA,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5D,QAAA,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;;IAErB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACb,YAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,EAAE;;oBAE/E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,gBAAA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC;IAChC,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,gBAAA,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;IAC9B,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;IACjC,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAAE,MAAM;oBAC1B,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;;oBAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACrD,gBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,gBAAA,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpC,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC;IAC5B,gBAAA,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAA,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;IAC1B,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAAE,MAAM;IACzB,gBAAA,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;IAC7B,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAAE,MAAM;oBAC1B,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;;oBAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;;IAErD,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,gBAAA,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;wBAAE,MAAM;IACrC,aAAA;;;;gBAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC;oBAAE,SAAS;IACxB,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAA,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IACrD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,gBAAA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK;IAC/C,aAAA,CAAC,CAAA;IACL,SAAA;SACJ;IACJ;;UCz9BqB,MAAM,CAAA;IAE3B,CAAA;IAYK,MAAO,sBAAuB,SAAQ,MAAM,CAAA;QAC9C,qBAAqB,GAAW,EAAE,CAAC;QACnC,qBAAqB,GAAW,EAAE,CAAC;IACnC,IAAA,uBAAuB,GAAG,EAAE,GAAG,QAAQ,CAAC;QACxC,oBAAoB,GAAG,IAAI,CAAC;QAC5B,wBAAwB,GAAG,GAAG,CAAC;IAC/B,IAAA,aAAa,CAAsB;QAC3B,MAAM,GAAG,IAAI,IAAI,CAAC;QAClB,MAAM,GAAG,IAAI,IAAI,CAAC;QAClB,sBAAsB,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC3D,GAAG,CAAC,aAA0B,EAAE,aAA0B,EAAA;YACtD,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM;gBAAE,OAAO;IAC3D,QAAA,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QACD,OAAO,CAAC,aAA0B,EAAE,aAA0B,EAAA;YAC1D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,IAAG;gBACvC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,SAAS,GAAG,CAAsB,CAAC;IACvC,YAAA,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC;IACjC,YAAA,SAAS,CAAC,SAAS,GAAG,CAAC,EAAE,QAAQ,CAAC;;gBAElC,IAAK,CAAc,CAAC,MAAM;IAAE,gBAAA,SAAS,CAAC,CAAC,GAAI,CAAc,CAAC,MAAO,CAAC;gBAClE,IAAK,CAAc,CAAC,MAAM;IAAE,gBAAA,SAAS,CAAC,CAAC,GAAI,CAAc,CAAC,MAAO,CAAC;IAClE,YAAA,SAAS,CAAC,gBAAgB,GAAG,SAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC,IAAI,CAClF,SAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CACpD,CAAC;gBACF,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACjE,YAAA,OAAO,SAAS,CAAC;IACrB,SAAC,CAAC,CAAC;IACH,QAAA,KAAK,IAAI,CAAC,IAAI,aAAa,EAAE;gBACzB,IAAI,CAAC,YAAY,cAAc,EAAE;oBAC7B,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;IACjC,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC7C,IAAI,gBAAgB,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,CACzC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,CACjC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnB,gBAAA,IAAI,MAAY,CAAC;IACjB,gBAAA,IAAI,KAAW,CAAC;IAChB,gBAAA,IAAI,CAAC,EAAE;IACH,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAC7C,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CACrC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,CACjC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACpB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxE,oBAAA,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,iBAAA;IAAM,qBAAA;IACH,oBAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClD,oBAAA,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/C,iBAAA;IACD,gBAAA,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;oBAAC,IAAI,KAAK,KAAK,CAAC;wBAAE,SAAS;IAAC,gBAAA,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC1E,gBAAgB,CAAC,IAAI,EAAE,CAAC;IACxB,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpB,oBAAA,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK;wBACnB,SAAS,EAAE,IAAI,CAAC,sBAAsB;wBACtC,SAAS,EAAE,IAAI,CAAC,sBAAsB;wBACtC,gBAAgB;IAChB,oBAAA,aAAa,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE;wBACvC,KAAK;IACL,oBAAA,cAAc,EAAE,CAAC;IACpB,iBAAA,CAAC,CAAC;IACN,aAAA;IACJ,SAAA;SACJ;QAED,eAAe,GAAA;;IAEX,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,EAAE,EAAE;IACjD,YAAA,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MACzC,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,aAAa;IAChE,mBAAC,CAAC,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CACxE,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,YAAA,IAAG,CAAC,SAAS;oBAAE,OAAO;IACtB,YAAA,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,MAAM,EAAE,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,SAAS,CAAC;IAC/F,YAAA,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;oBAC3B,IAAI,aAAa,IAAI,CAAC;wBAAE,OAAO;IAClC,aAAA;qBAAM,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,oBAAoB,EAAE;oBAAE,OAAO;IAAE,aAAA;IAC3E,YAAA,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC,kBAAkB,CAAC,SAAS,EAAE,SAAU,CAAC,CAAC;IACnF,YAAA,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,oBAAoB;oBAAE,WAAW,GAAG,CAAC,CAAC;IAChE,YAAA,IAAI,cAAc,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACtE,YAAA,IAAI,eAAe,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;IAC9E,YAAA,IAAI,YAAY,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC;;;;;;;IAO1C,YAAA,IAAI,aAAa,GAAG,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAC3C,CAAC,GAAG,QAAQ,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,aAAa,GAAG,YAAY,EAAE,CAAC,CACrE,GAAG,CAAC,CAAC;gBACN,IAAI,4BAA4B,GAAG,eAAe,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBACvH,IAAI,QAAc,EAAE,QAAc,CAAC;IACnC,YAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAA;IAChD,YAAA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;oBACZ,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC5E,sBAAsB,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACvD,aAAA;IAAM,iBAAA;oBAAE,IAAI,CAAC,GAAG,EAAE,CAAC;IAAE,aAAA;IACtB,YAAA,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;oBACb,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC5E,sBAAsB,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACvD,aAAA;IAAM,iBAAA;oBAAE,IAAI,CAAC,GAAG,EAAE,CAAC;IAAE,aAAA;;IAEtB,YAAA,IAAI,OAAO,GAAG,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5E,YAAA,IAAI,OAAO,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE;IACtB,gBAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrB,aAAA;;;;IAID,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;IAE1B,YAAA,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;IACb,gBAAA,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC/B,gBAAA,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;IAChC,gBAAA,yBAAyB,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACjF,aAAA;IACD,YAAA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;IACZ,gBAAA,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC/B,gBAAA,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;IAChC,gBAAA,yBAAyB,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACxF,aAAA;IACD,YAAA,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACxC,SAAA;SACJ;IACD,IAAA,oBAAoB,CAAC,SAA4B,EAAA;IAC7C,QAAA,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;IAC9B,YAAA,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;IACtB,gBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IACrB,oBAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;IACxE,iBAAA;IAAM,qBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IAC5B,oBAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;IACzE,iBAAA;IACJ,aAAA;IACD,YAAA,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;IACvB,gBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IACrB,oBAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;IACxE,iBAAA;IAAM,qBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IAC5B,oBAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;IACzE,iBAAA;IACJ,aAAA;IACJ,SAAA;SACJ;QACD,mBAAmB,CAAC,SAA4B,EAAE,QAAiB,EAAE,KAAY,EAAE,EAAQ,EAAE,EAAS,EAAA;YAClG,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvF,QAAA,IAAI,QAAQ;gBAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IAE3B,QAAA,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;IACzF,QAAA,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,SAAS,CAAC,cAAc,EAAE;gBAC1B,SAAS,CAAC,aAAa,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IAChE,SAAA;IACI,aAAA;gBACD,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACxD,YAAA,SAAS,CAAC,aAAa,IAAI,GAAG,CAAC;IAClC,SAAA;SACJ;QAED,eAAe,GAAA;;IAEX,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,EAAE,EAAE;gBACjD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,YAAA,IAAG,CAAC,SAAS;oBAAE,OAAO;IACtB,YAAA,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC;gBAC/C,IAAI,KAAK,IAAI,CAAC;oBAAE,OAAO;gBACvB,IAAI,KAAK,GAAG,EAAE,EAAE;IACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;IAC7D,aAAA;IACD,YAAA,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;IACrC,YAAA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;IACZ,gBAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClD,gBAAA,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;oBACrD,IAAI,CAAC,CAAC,cAAc,EAAE;IAClB,oBAAA,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAClD,iBAAA;IAAM,qBAAA;IACH,oBAAA,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAChC,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChF,iBAAA;IACD,gBAAA,WAAW,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACzD,EAAE,CAAC,QAAQ,EAAE,CAAC;IACjB,aAAA;IACD,YAAA,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;IACb,gBAAA,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClD,gBAAA,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;oBACrD,IAAI,CAAC,CAAC,cAAc,EAAE;IAClB,oBAAA,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAClD,iBAAA;IAAM,qBAAA;IACH,oBAAA,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAChC,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChF,iBAAA;IACD,gBAAA,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACxD,EAAE,CAAC,QAAQ,EAAE,CAAC;IACjB,aAAA;;;gBAGD,IAAI,iBAAiB,GAAG,KAAK,GAAG,IAAI,CAAC,wBAAwB,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,GAAG,WAAW,GAAG,WAAW,CAAC,CAAC;IAC5H,YAAA,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;IAC9B,gBAAA,OAAO,CAAC,KAAK,CAAC,yFAAyF,CAAC,CAAC;IAC5G,aAAA;IACD,YAAA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;;IAEZ,gBAAA,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;;oBAEvC,IAAI,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACjC,gBAAA,IAAI,KAAK,GAAG,IAAI,CAAC,uBAAuB,EAAE;wBACtC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC;IAC7D,iBAAA;oBACD,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,iBAAiB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;oBAClF,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;IACvF,oBAAA,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;IAClG,iBAAA;oBACD,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC/B,gBAAA,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC9C,gBAAA,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAClC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;IAC3E,oBAAA,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;IAClG,iBAAA;IACJ,aAAA;IACD,YAAA,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;IACb,gBAAA,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;;oBAEvC,IAAI,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACjC,gBAAA,IAAI,KAAK,GAAG,IAAI,CAAC,uBAAuB,EAAE;wBACtC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC;IAC7D,iBAAA;oBACD,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;oBACjF,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;IACvF,oBAAA,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;IAClG,iBAAA;oBACD,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC/B,gBAAA,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,GAAI,CAAC,CAAC;IAC/C,gBAAA,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAClC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;IAC3E,oBAAA,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;IAClG,iBAAA;IACJ,aAAA;;IAED,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAChC,SAAA;SACJ;IACD,IAAA,YAAY,CAAC,SAA4B,EAAA;IACrC,QAAA,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;IAC9B,YAAA,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;IACtB,gBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IACrB,oBAAA,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAI,CAAC,CAAC;IACjE,iBAAA;IAAM,qBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IAC5B,oBAAA,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAI,CAAC,CAAC;IAClE,iBAAA;IACJ,aAAA;IACD,YAAA,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE;IACvB,gBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IACrB,oBAAA,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAI,CAAC,CAAC;IACjE,iBAAA;IAAM,qBAAA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;IAC5B,oBAAA,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAI,CAAC,CAAC;IAClE,iBAAA;IACJ,aAAA;IACJ,SAAA;SACJ;QACD,WAAW,CAAC,SAA4B,EAAE,QAAiB,EAAE,KAAY,EAAE,EAAQ,EAAE,EAAS,EAAA;YAC1F,IAAI,SAAS,CAAC,cAAc,EAAE;IAC1B,YAAA,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACxH,IAAI,SAAS,CAAC,CAAC,EAAE;IACb,gBAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtH,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC3B,aAAA;IAAM,iBAAA;oBACH,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3C,aAAA;IACD,YAAA,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3B,YAAA,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IAC5B,SAAA;IAAM,aAAA;IACH,YAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC/D,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACrD,YAAA,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;IACrF,YAAA,SAAS,CAAC,KAAK,IAAI,QAAQ,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;gBACvC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChB,SAAA;SACJ;IACJ,CAAA;IACD,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;IACtB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;IACtB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;IACtB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;IACtB,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC;IACrB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;IAEtB,SAAS,oBAAoB,CAAC,IAAU,EAAE,IAAW,EAAE,KAAY,EAAE,UAAgB,EAAE,OAAa,EAAA;IAChG,IAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACxC,IAAA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACjD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,UAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACnG,CAAC;IACD,SAAS,yBAAyB,CAAC,IAAU,EAAE,IAAW,EAAE,KAAY,EAAE,UAAgB,EAAE,OAAa,EAAA;QACrG,oBAAoB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAC7D,IAAA;IAAE,QAAA,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,4FAA4F,CAAC,CAAC;IAAE,KAAA;IACxJ,IAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAA,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,IAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,EAAE;IAAE,QAAA,OAAO,CAAC,KAAK,CAAC,gGAAgG,CAAC,CAAC;IAAE,KAAA;IAC/L,CAAC;IACD;;IAEG;IACH,SAAS,sBAAsB,CAAC,GAAS,EAAE,KAAY,EAAE,GAAS,EAAE,GAAS,EAAA;IACzE,IAAA,IAAI,EAAE,GAAG,KAAK,CAAC,UAAW,CAAC;;IAE3B,IAAA,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9E,IAAA,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnF,IAAA,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrF,IAAA,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpF,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;QAE/C,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC;QAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC;QAC9B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC;IAC9B,IAAA,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;IAEpC,IAAA,OAAO,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAChD;;UCzUa,MAAM,CAAA;IACf,IAAA,gBAAgB,CAAmB;IACnC,IAAA,UAAU,CAAa;IACvB,IAAA,WAAW,CAAc;IACzB,IAAA,MAAM,CAAS;IACf,IAAA,OAAO,CAAS;IAChB,IAAA,WAAA,CAAY,MAAqB,EAAA;IAC7B,QAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,MAAM,EAAE,gBAAgB,IAAI,iBAAiB,CAAC,QAAQ,GAAG,CAAC;IACvF,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,MAAM,EAAE,UAAU,IAAI,uBAAuB,GAAG,CAAC;IACxE,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;IACrC,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM,EAAE,MAAM,IAAI,sBAAsB,GAAG,CAAC;YAC/D,IAAI,CAAC,OAAO,GAAG,MAAM,EAAE,OAAO,IAAI,CAAC,CAAC;SACvC;QACD,MAAM,CAAC,KAAY,EAAE,EAAU,EAAA;IAC3B,QAAA,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC;IACnB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;IACnC,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACxB,SAAA;SACJ;QACD,IAAI,CAAC,KAAY,EAAE,EAAU,EAAA;YACzB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACrC,KAAK,CAAC,0BAA0B,EAAE,CAAC;IACnC,QAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAChD,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;YAClE,KAAK,CAAC,0BAA0B,EAAE,CAAC;SACtC;IACJ,CAAA;UACY,KAAK,CAAA;QACd,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,GAAY,EAAE,CAAC;QACrB,UAAU,GAAgB,EAAE,CAAC;QAC7B,WAAW,GAAkB,EAAE,CAAC;QAChC,MAAM,GAAY,EAAE,CAAC;QACrB,IAAI,GAAW,CAAC,CAAC;QACjB,GAAG,CAAC,GAAG,IAAmC,EAAA;IACtC,QAAA,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;gBAChB,IAAI,CAAC,YAAY,KAAK,EAAE;IACpB,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,gBAAA,IAAI,CAAC,CAAC,QAAQ,YAAY,KAAK,CAAC,KAAK,EAAE;wBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACrC,iBAAA;oBACD,SAAS;IACZ,aAAA;gBACD,IAAI,CAAC,YAAY,KAAK,EAAE;IACpB,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAAC,SAAS;IACjC,aAAA;gBACD,IAAI,CAAC,YAAY,SAAS,EAAE;IACxB,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAAC,SAAS;IACrC,aAAA;IACJ,SAAA;SACJ;IACD,IAAA,MAAM,CAAC,CAAgB,EAAA;YACnB,IAAI,CAAC,YAAY,KAAK,EAAE;gBACpB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,YAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7B,gBAAA,IAAI,CAAC,CAAC,QAAQ,YAAY,KAAK,CAAC,KAAK,EAAE;IACnC,oBAAA,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACjD,oBAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;4BACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,qBAAA;IAAM,yBAAA;IACH,wBAAA,OAAO,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;IAChE,qBAAA;IACJ,iBAAA;IACJ,aAAA;IAAM,iBAAA;IACH,gBAAA,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IACrD,aAAA;IACJ,SAAA;YACD,IAAI,CAAC,YAAY,KAAK,EAAE;gBACpB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,YAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChC,aAAA;IACJ,SAAA;SAEJ;QACD,0BAA0B,GAAA;IACtB,QAAA,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC5B,CAAC,CAAC,WAAW,EAAE,CAAC;IACnB,SAAA;SACJ;IACJ,CAAA;UACY,QAAQ,CAAA;IACjB,IAAA,QAAQ,CAAS;IACjB,IAAA,WAAW,CAAS;QACpB,WAAY,CAAA,QAAgB,EAAE,WAAmB,EAAA;IAC7C,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC/B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;IACD,IAAA,OAAO,kBAAkB,CAAC,CAAW,EAAE,CAAW,EAAA;YAC9C,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC5F;IACJ,CAAA;IACD;aACgB,QAAQ,CAAC,IAAW,EAAE,CAAQ,EAAE,CAAQ,EAAA;QACpD,OAAO,IAAI,CAAC,GAAG,CACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CACd,CAAC;IACN,CAAC;UACY,SAAS,CAAA;IAClB,IAAA,CAAC,CAAQ;IACT,IAAA,CAAC,CAAoB;QACrB,WAAY,CAAA,CAAQ,EAAE,CAAqB,EAAA;IACvC,QAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACX,QAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;IACJ,CAAA;IACK,MAAO,cAAe,SAAQ,SAAS,CAAA;IACzC,IAAA,MAAM,CAAO;IACb,IAAA,MAAM,CAAO;IACb,IAAA,WAAA,CAAY,CAAQ,EAAE,CAAoB,EAAE,MAAY,EAAE,MAAY,EAAA;IAClE,QAAA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAAC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SAC3D;IACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICnID,SAAS,YAAY,CAAC,IAAiB,EAAA;IACnC,IAAA,IAAI,KAAa,EAAE,MAAc,EAAE,KAAa,CAAC;QACjD,IAAK,IAAwB,CAAC,KAAK,EAAE;IACjC,QAAA,KAAK,GAAI,IAAwB,CAAC,KAAK,CAAC;IACxC,QAAA,MAAM,GAAI,IAAwB,CAAC,MAAM,CAAC;IAC1C,QAAA,KAAK,GAAI,IAAwB,CAAC,kBAAkB,CAAC;IACxD,KAAA;IAAM,SAAA;IACH,QAAA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAChB,QAAA,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,QAAA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,KAAA;IACD,IAAA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;IACpC,CAAC;IAMK,SAAU,iBAAiB,CAC7B,GAAQ,EAAE,IAAiB,EAAE,UAAkB,EAC/C,MAAoB,EAAE,UAAmB,EAAA;IAEzC,IAAA,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IACxB,IAAA,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAClD,IAAA,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;IACpC,IAAA,UAAU,KAAK,MAAM,EAAE,UAAU,IAAI,CAAC,CAAC;IACvC,IAAA,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;YAC7B,IAAI,EAAE,CAAC,CAAC,GAAG,MAAM,GAAG,UAAU,IAAI,CAAC,GAAG,UAAU;IAChD,QAAA,KAAK,EAAE,cAAc,CAAC,OAAO,GAAG,cAAc,CAAC,QAAQ;IACvD,QAAA,gBAAgB,EAAE,IAAI;YACtB,KAAK,EAAE,eAAe,KAAK,CAAA,CAAA,EAAI,MAAM,CAAI,CAAA,EAAA,KAAK,CAAI,CAAA,EAAA,UAAU,CAAG,CAAA,CAAA;IAClE,KAAA,CAAC,CAAC;IACH,IAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC;IAC1D,IAAA,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;IAC1C,IAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;IACjD,IAAA,IAAI,MAAM,EAAE;IACR,QAAA,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3C,QAAA,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACjC,KAAA;QACD,MAAM,CAAC,KAAK,EAAE,CAAC;IACf,IAAA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;IACxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}