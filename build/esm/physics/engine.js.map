{"version":3,"file":"engine.js","sources":["../../../src/physics/engine.ts"],"sourcesContent":["import { Bivec } from \"../math/algebra/bivec.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { BoundingGlomeBroadPhase, BroadPhase, BroadPhaseConstructor } from \"./broadPhase.js\";\r\nimport { Force, ForceAccumulator, ForceAccumulatorConstructor, force_accumulator } from \"./forces\";\r\nimport { NarrowPhase } from \"./narrowphase.js\";\r\nimport { rigid, Rigid } from \"./rigid.js\";\r\nimport { IterativeImpulseSolver, Solver, SolverConstructor } from \"./solver.js\";\r\n\r\ninterface EngineOption {\r\n    forceAccumulator?: ForceAccumulatorConstructor;\r\n    broadPhase?: BroadPhaseConstructor;\r\n    solver?: SolverConstructor;\r\n    substep?: number;\r\n}\r\nexport class Engine {\r\n    forceAccumulator: ForceAccumulator;\r\n    broadPhase: BroadPhase;\r\n    narrowPhase: NarrowPhase;\r\n    solver: Solver;\r\n    substep: number;\r\n    constructor(option?: EngineOption) {\r\n        this.forceAccumulator = new (option?.forceAccumulator ?? force_accumulator.Predict3)();\r\n        this.broadPhase = new (option?.broadPhase ?? BoundingGlomeBroadPhase)();\r\n        this.narrowPhase = new NarrowPhase();\r\n        this.solver = new (option?.solver ?? IterativeImpulseSolver)();\r\n        this.substep = option?.substep ?? 1;\r\n    }\r\n    update(world: World, dt: number) {\r\n        dt /= this.substep;\r\n        for (let i = 0; i < this.substep; i++) {\r\n            this.step(world, dt);\r\n        }\r\n    }\r\n    step(world: World, dt: number) {\r\n        this.forceAccumulator.run(world, dt);\r\n        world.updateUnionGeometriesCoord();\r\n        this.broadPhase.run(world);\r\n        this.narrowPhase.run(this.broadPhase.checkList);\r\n        this.solver.run(this.narrowPhase.collisionList, world.constrains);\r\n        world.updateUnionGeometriesCoord();\r\n    }\r\n}\r\nexport class World {\r\n    gravity = new Vec4(0, -9.8);\r\n    rigids: Rigid[] = [];\r\n    constrains: Constrain[] = [];\r\n    unionRigids: rigid.Union[] = [];\r\n    forces: Force[] = [];\r\n    time: number = 0;\r\n    add(...args: (Rigid | Force | Constrain)[]) {\r\n        for (let o of args) {\r\n            if (o instanceof Rigid) {\r\n                this.rigids.push(o);\r\n                if (o.geometry instanceof rigid.Union) {\r\n                    this.unionRigids.push(o.geometry);\r\n                }\r\n                continue;\r\n            }\r\n            if (o instanceof Force) {\r\n                this.forces.push(o); continue;\r\n            }\r\n            if (o instanceof Constrain) {\r\n                this.constrains.push(o); continue;\r\n            }\r\n        }\r\n    }\r\n    remove(o: Rigid | Force) {\r\n        if (o instanceof Rigid) {\r\n            let index = this.rigids.indexOf(o);\r\n            if (index !== -1) {\r\n                this.rigids.splice(index, 1);\r\n                if (o.geometry instanceof rigid.Union) {\r\n                    let index = this.unionRigids.indexOf(o.geometry);\r\n                    if (index !== -1) {\r\n                        this.unionRigids.splice(index, 1);\r\n                    } else {\r\n                        console.warn(\"Union Rigid geometry is removed before rigid\");\r\n                    }\r\n                }\r\n            } else {\r\n                console.warn(\"Cannot remove a non-existed child\");\r\n            }\r\n        }\r\n        if (o instanceof Force) {\r\n            let index = this.forces.indexOf(o);\r\n            if (index !== -1) {\r\n                this.forces.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    }\r\n    updateUnionGeometriesCoord() {\r\n        for (let r of this.unionRigids) {\r\n            r.updateCoord();\r\n        }\r\n    }\r\n}\r\nexport class Material {\r\n    friction: number;\r\n    restitution: number;\r\n    constructor(friction: number, restitution: number) {\r\n        this.restitution = restitution;\r\n        this.friction = friction;\r\n    }\r\n    static getContactMaterial(a: Material, b: Material) {\r\n        return { restitution: a.restitution * b.restitution, friction: a.friction * b.friction };\r\n    }\r\n}\r\n/** a helper function for applying inertia to bivec */\r\nexport function mulBivec(self: Bivec, a: Bivec, b: Bivec) {\r\n    return self.set(\r\n        a.xy * b.xy,\r\n        a.xz * b.xz,\r\n        a.xw * b.xw,\r\n        a.yz * b.yz,\r\n        a.yw * b.yw,\r\n        a.zw * b.zw,\r\n    );\r\n}\r\nexport class Constrain {\r\n    a: Rigid;\r\n    b: Rigid | undefined;\r\n    constructor(a: Rigid, b?: Rigid | undefined) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n}\r\nexport class PointConstrain extends Constrain {\r\n    pointA: Vec4;\r\n    pointB: Vec4;\r\n    constructor(a: Rigid, b: Rigid | undefined, pointA: Vec4, pointB: Vec4) {\r\n        super(a, b); this.pointA = pointA; this.pointB = pointB;\r\n    }\r\n}"],"names":[],"mappings":"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"}