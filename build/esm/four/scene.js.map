{"version":3,"file":"scene.js","sources":["../../../src/four/scene.ts"],"sourcesContent":["import { AffineMat4, Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { OrthographicCamera as IOrthographicCamera, PerspectiveCamera as IPerspectiveCamera } from \"../math/geometry/camera.js\";\r\nimport { AABB } from \"../math/geometry/primitive.js\";\r\nimport { TetraMesh, TetraMeshData } from \"../mesh/tetra.js\";\r\nimport { RaytracingPipeline, RaytracingPipelineDescriptor } from \"../render/slice/slice.js\";\r\nimport { Material } from \"./material.js\";\r\nimport { Renderer } from \"./renderer.js\";\r\nimport { WireFrameScene } from \"./wireframe.js\";\r\n\r\nexport class Scene {\r\n    child: Object[] = [];\r\n    backGroundColor: GPUColor;\r\n    skyBox?: SkyBox;\r\n    wireframe?: WireFrameScene;\r\n    add(...obj: Object[]) {\r\n        this.child.push(...obj);\r\n    }\r\n    removeChild(obj: Object) {\r\n        let index = this.child.indexOf(obj);\r\n        if (index !== -1) {\r\n            this.child.splice(index, 1);\r\n        } else {\r\n            console.warn(\"Cannot remove a non-existed child\");\r\n        }\r\n    }\r\n    setBackgroudColor(color: GPUColor) {\r\n        this.backGroundColor = color;\r\n    }\r\n}\r\nexport class Object extends Obj4 {\r\n    child: Object[] = [];\r\n    worldCoord: AffineMat4;\r\n    needsUpdateCoord = true;\r\n    alwaysUpdateCoord = false;\r\n    visible = true;\r\n    constructor() {\r\n        super();\r\n        this.worldCoord = new AffineMat4();\r\n    }\r\n    updateCoord() {\r\n        this.needsUpdateCoord = true;\r\n        return this;\r\n    }\r\n    add(...obj: Object[]) {\r\n        this.child.push(...obj);\r\n    }\r\n    removeChild(obj: Object) {\r\n        let index = this.child.indexOf(obj);\r\n        if (index !== -1) {\r\n            this.child.splice(index, 1);\r\n        } else {\r\n            console.warn(\"Cannot remove a non-existed child\");\r\n        }\r\n    }\r\n}\r\nexport class PerspectiveCamera extends Object implements IPerspectiveCamera {\r\n    fov: number = 90;\r\n    near: number = 0.1;\r\n    far: number = 100;\r\n    alwaysUpdateCoord = true;\r\n    needsUpdate = true;\r\n}\r\n\r\nexport class OrthographicCamera extends Object implements IOrthographicCamera {\r\n    size: number = 2;\r\n    near: number = -10;\r\n    far: number = 10;\r\n    alwaysUpdateCoord = true;\r\n    needsUpdate = true;\r\n}\r\nexport type Camera = PerspectiveCamera | OrthographicCamera;\r\nexport class Mesh extends Object {\r\n    geometry: Geometry;\r\n    material: Material;\r\n    uObjMatBuffer: GPUBuffer;\r\n    bindGroup: GPUBindGroup;\r\n    constructor(geometry: Geometry, material: Material) {\r\n        super();\r\n        this.geometry = geometry;\r\n        this.material = material;\r\n    }\r\n}\r\nexport class Geometry {\r\n    jsBuffer: TetraMesh;\r\n    gpuBuffer: { [name: string]: GPUBuffer };\r\n    needsUpdate = true;\r\n    dynamic: boolean = false;\r\n    obb = new AABB;\r\n    constructor(data: TetraMeshData) {\r\n        this.jsBuffer = data instanceof TetraMesh ? data : new TetraMesh(data);\r\n    }\r\n    updateOBB() {\r\n        let obb = this.obb;\r\n        let pos = this.jsBuffer.position;\r\n        obb.min.set(Infinity, Infinity, Infinity, Infinity);\r\n        obb.max.set(-Infinity, -Infinity, -Infinity, -Infinity);\r\n        for (let i = 0, l = this.jsBuffer.count << 4; i < l; i += 4) {\r\n            obb.min.x = Math.min(obb.min.x, pos[i]);\r\n            obb.min.y = Math.min(obb.min.y, pos[i + 1]);\r\n            obb.min.z = Math.min(obb.min.z, pos[i + 2]);\r\n            obb.min.w = Math.min(obb.min.w, pos[i + 3]);\r\n            obb.max.x = Math.max(obb.max.x, pos[i]);\r\n            obb.max.y = Math.max(obb.max.y, pos[i + 1]);\r\n            obb.max.z = Math.max(obb.max.z, pos[i + 2]);\r\n            obb.max.w = Math.max(obb.max.w, pos[i + 3]);\r\n        }\r\n    }\r\n}\r\nexport abstract class SkyBox {\r\n    pipeline: RaytracingPipeline;\r\n    uBuffer: GPUBuffer;\r\n    jsBuffer: Float32Array;\r\n    compiling = false;\r\n    compiled = false;\r\n    needsUpdate = true;\r\n    bindGroups: GPUBindGroup[];\r\n    readonly bufferSize: number;\r\n    uuid: string;\r\n    static readonly commonCode: string = `\r\n    struct rayOut{\r\n        @location(0) outO: vec4f,\r\n        @location(1) outR: vec4f,\r\n        @location(2) coord: vec3<f32>\r\n    }\r\n    @ray fn mainRay(\r\n        @builtin(ray_origin) ro: vec4f,\r\n        @builtin(ray_direction) rd: vec4f,\r\n        @builtin(voxel_coord) coord: vec3<f32>,\r\n        @builtin(aspect_matrix) aspect: mat3x3<f32>\r\n    ) -> rayOut {\r\n        return rayOut(\r\n            transpose(camMat.matrix)*(ro-camMat.vector),\r\n            transpose(camMat.matrix)*rd,\r\n            aspect * coord\r\n        );\r\n    }\r\n    struct fOut{\r\n        @location(0) color: vec4f,\r\n        @builtin(frag_depth) depth: f32\r\n    }\r\n    \r\n    // converted to 4D from shadertoy 3D: https://www.shadertoy.com/view/WtBXWw\r\n    fn ACESFilm(x: vec3<f32>)->vec3<f32>\r\n    {\r\n        let tA = 2.51;\r\n        let tB = vec3<f32>(0.03);\r\n        let tC = 2.43;\r\n        let tD = vec3<f32>(0.59);\r\n        let tE = vec3<f32>(0.14);\r\n        return clamp((x*(tA*x+tB))/(x*(tC*x+tD)+tE),vec3<f32>(0.0),vec3<f32>(1.0));\r\n    }\r\n    `;\r\n    async compile(r: Renderer) {\r\n        if (this.compiling || this.compiled) return;\r\n        this.compiling = true;\r\n        this.pipeline = await r.core.createRaytracingPipeline(this.getShaderCode());\r\n        this.compiling = false;\r\n        this.compiled = true;\r\n    }\r\n    abstract getShaderCode(): RaytracingPipelineDescriptor;\r\n    constructor() {\r\n    }\r\n    getBindgroups(r: Renderer) {\r\n        this.uBuffer = r.gpu.createBuffer(GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST, this.bufferSize << 2, \"uSimpleSky\");\r\n        this.bindGroups = [\r\n            r.core.createVertexShaderBindGroup(this.pipeline, 1, [\r\n                r.uCamMatBuffer,\r\n                this.uBuffer\r\n            ], \"SimpleSkyBindgroup\")\r\n        ];\r\n    }\r\n    update(r: Renderer) {\r\n        this.needsUpdate = false;\r\n        r.gpu.device.queue.writeBuffer(this.uBuffer, 0, this.jsBuffer.buffer);\r\n    }\r\n}\r\nexport class SimpleSkyBox extends SkyBox {\r\n    readonly bufferSize = 8;\r\n    constructor() {\r\n        super();\r\n        this.jsBuffer = new Float32Array(this.bufferSize);\r\n        this.setSunPosition(new Vec4(0.2, 0.9, 0.1, 0.3).norms());\r\n        this.setOpacity(0.2);\r\n    }\r\n    setSunPosition(pos: Vec4) {\r\n        this.needsUpdate = true;\r\n        pos.writeBuffer(this.jsBuffer);\r\n    }\r\n    setOpacity(o: number) {\r\n        this.needsUpdate = true;\r\n        this.jsBuffer[4] = o;\r\n    }\r\n    getOpacity() {\r\n        return this.jsBuffer[4];\r\n    }\r\n    getSunPosition() {\r\n        return new Vec4(this.jsBuffer[0], this.jsBuffer[1], this.jsBuffer[2], this.jsBuffer[3]);\r\n    }\r\n    getShaderCode(): RaytracingPipelineDescriptor {\r\n        return {\r\n            code: `\r\n        struct UIn{\r\n            sunDir: vec4f,\r\n            opacity: f32\r\n        }\r\n        @group(1) @binding(0) var<uniform> camMat: tsxAffineMat;\r\n        @group(1) @binding(1) var<uniform> uIn: UIn;\r\n        ${SkyBox.commonCode}\r\n        const betaR = vec3<f32>(1.95e-2, 1.1e-1, 2.94e-1); \r\n        const betaM = vec3<f32>(4e-2, 4e-2, 4e-2);\r\n        const Rayleigh = 1.0;\r\n        const Mie = 1.0;\r\n        const RayleighAtt = 1.0;\r\n        const MieAtt = 1.2;\r\n        const g = -0.9;\r\n        fn sky (rd: vec4f)->vec3<f32>{\r\n            let D = normalize(rd);\r\n            let t = max(0.001, D.y)*0.92+0.08;\r\n\r\n            // optical depth -> zenithAngle\r\n            let sR = RayleighAtt / t ;\r\n            let sM = MieAtt / t ;\r\n            let cosine = clamp(dot(D,normalize(uIn.sunDir)),0.0,1.0);\r\n            let cosine2 =dot(D,normalize(uIn.sunDir))+1.0;\r\n            let extinction = exp(-(betaR * sR + betaM * sM));\r\n\r\n            // scattering phase\r\n            let g2 = g * g;\r\n            let fcos2 = cosine * cosine;\r\n            let miePhase = Mie * pow(1.0 + g2 + 2.0 * g * cosine, -1.5) * (1.0 - g2) / (2.0 + g2);\r\n            \r\n            let rayleighPhase = Rayleigh;\r\n\r\n            let inScatter = (1.0 + fcos2) * vec3<f32>(rayleighPhase + betaM / betaR * miePhase);\r\n\r\n            var color = inScatter*(1.0-extinction) * 1.4;\r\n            // sun\r\n            color += 0.47*vec3<f32>(1.8,1.4,0.3)*pow( cosine, 350.0 ) * extinction;\r\n            // sun haze\r\n            color += 0.4*vec3<f32>(0.8,0.9,0.1)*pow( cosine2 *0.5, 2.0 )* extinction;\r\n            color *= vec3<f32>(1.4,1.7,1.2);\r\n            return ACESFilm(color);\r\n        }\r\n        @fragment fn mainFragment(@location(0) ro: vec4f, @location(1) rd: vec4f, @location(2) coord: vec3<f32>)->fOut{            \r\n            return fOut(vec4f(sky(rd),uIn.opacity),0.999999);\r\n        }`,\r\n            rayEntryPoint: \"mainRay\",\r\n            fragmentEntryPoint: \"mainFragment\"\r\n        }\r\n    }\r\n}\r\n\r\n"],"names":["Object"],"mappings":"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"}