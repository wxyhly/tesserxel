{"version":3,"file":"geom.js","sources":["../../../src/four/geom.ts"],"sourcesContent":["import { Obj4 } from \"../math/algebra/affine.js\";\r\nimport { Vec3 } from \"../math/algebra/vec3.js\";\r\nimport { Vec4 } from \"../math/algebra/vec4.js\";\r\nimport { CWMesh, tetra } from \"../mesh/mesh.js\";\r\nimport { Geometry } from \"./scene.js\";\r\n\r\nexport class TesseractGeometry extends Geometry {\r\n    constructor(size?: number | Vec4) {\r\n        super(tetra.tesseract());\r\n        if (size) this.jsBuffer.applyObj4(new Obj4(null, null,\r\n            size instanceof Vec4 ? size : new Vec4(size, size, size, size)\r\n        ));\r\n    }\r\n}\r\nexport class CubeGeometry extends Geometry {\r\n    constructor(size?: number | Vec3) {\r\n        super(tetra.cube.clone());\r\n        if (size) this.jsBuffer.applyObj4(new Obj4(null, null,\r\n            size instanceof Vec3 ? new Vec4(size.x, 1, size.y, size.z) : new Vec4(size, 1, size, size)\r\n        ));\r\n    }\r\n}\r\nexport class GlomeGeometry extends Geometry {\r\n    constructor(size: number = 1, detail: number | { xy: number, zw: number, latitude: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.glome(size, detail * 8, detail * 8, detail * 6));\r\n        else\r\n            super(tetra.glome(size, detail.xy, detail.zw, detail.latitude));\r\n    }\r\n}\r\nexport class SpheritorusGeometry extends Geometry {\r\n    constructor(sphereRadius: number = 0.4, circleRadius: number = 1, detail: number | { longitude: number, latitude: number, circle: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.spheritorus(sphereRadius, detail * 8, detail * 6, circleRadius, detail * 8));\r\n        else\r\n            super(tetra.spheritorus(sphereRadius, detail.longitude, detail.latitude, circleRadius, detail.circle));\r\n    }\r\n}\r\nexport class TorisphereGeometry extends Geometry {\r\n    constructor(circleRadius: number = 0.2, sphereRadius: number = 0.8, detail: number | { longitude: number, latitude: number, circle: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.torisphere(circleRadius, detail * 6, sphereRadius, detail * 8, detail * 6));\r\n        else\r\n            super(tetra.torisphere(circleRadius, detail.circle, sphereRadius, detail.longitude, detail.latitude));\r\n    }\r\n}\r\nexport class SpherinderSideGeometry extends Geometry {\r\n    constructor(sphereRadius1: number = 0.4, sphereRadius2: number = sphereRadius1, height: number = 1, detail: number | { longitude: number, latitude: number, height?: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.spherinderSide(sphereRadius1, sphereRadius2, detail * 8, detail * 6, height, detail * 2));\r\n        else\r\n            super(tetra.spherinderSide(sphereRadius1, sphereRadius2, detail.longitude, detail.latitude, height, detail.height));\r\n    }\r\n}\r\nexport class TigerGeometry extends Geometry {\r\n    constructor(circleRadius: number = 0.2, radius1: number = 0.8, radius2: number = 0.8, detail: number | { xy: number, zw: number, circle: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.tiger(radius1, detail * 8, radius2, detail * 8, circleRadius, detail * 6));\r\n        else\r\n            super(tetra.tiger(radius1, detail.xy, radius2, detail.zw, circleRadius, detail.circle));\r\n    }\r\n}\r\nexport class DitorusGeometry extends Geometry {\r\n    constructor(circleRadius: number = 0.2, radius1: number = 0.8, radius2: number = 0.4, detail: number | { major: number, middle: number, minor: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.ditorus(radius1, detail * 8, radius2, detail * 8, circleRadius, detail * 6));\r\n        else\r\n            super(tetra.ditorus(radius1, detail.major, radius2, detail.middle, circleRadius, detail.minor));\r\n    }\r\n}\r\nexport class DuocylinderGeometry extends Geometry {\r\n    constructor(radius1: number = 0.8, radius2: number = 0.8, detail: number | { xy: number, zw: number } = 2) {\r\n        if (typeof detail === \"number\")\r\n            super(tetra.duocylinder(radius1, detail * 8, radius2, detail * 8));\r\n        else\r\n            super(tetra.duocylinder(radius1, detail.xy, radius2, detail.zw));\r\n    }\r\n}\r\nexport class ConvexHullGeometry extends Geometry {\r\n    constructor(points: Vec4[]) {\r\n        super(tetra.convexhull(points).generateNormal().setUVWAsPosition());\r\n    }\r\n}\r\nexport class CWMeshGeometry extends Geometry {\r\n    constructor(cwmesh: CWMesh) {\r\n        super(tetra.cwmesh(cwmesh).setUVWAsPosition());\r\n    }\r\n}"],"names":["tetra.tesseract","tetra.cube","tetra.glome","tetra.spheritorus","tetra.torisphere","tetra.spherinderSide","tetra.tiger","tetra.ditorus","tetra.duocylinder","tetra.convexhull","cwmesh","tetra.cwmesh"],"mappings":"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"}