{"version":3,"file":"app.js","sources":["../../../src/four/app.ts"],"sourcesContent":["import { ControllerConfig, ControllerRegistry, IController, RetinaController } from \"../util/ctrl.js\";\r\nimport { Renderer, RendererConfig } from \"./renderer.js\";\r\nimport { Camera, PerspectiveCamera, Scene } from \"./scene.js\";\r\n\r\nexport class App {\r\n    canvas: HTMLCanvasElement;\r\n    renderer: Renderer;\r\n    scene: Scene;\r\n    camera: Camera;\r\n    controllerRegistry: ControllerRegistry;\r\n    retinaController?: RetinaController;\r\n    onresize?: (e: { width: number, height: number }) => void;\r\n    private _onFrame?: () => void;\r\n    private _running: boolean = false;\r\n    private _autoResize: boolean = false;\r\n    private _resizeHandler?: () => void;\r\n\r\n    enableAutoResize() {\r\n        if (this._autoResize) return;\r\n        this._autoResize = true;\r\n        this.canvas.style.width = \"100%\";\r\n        this.canvas.style.height = \"100%\";\r\n        this._resizeHandler = () => {\r\n            const width = window.innerWidth * window.devicePixelRatio;\r\n            const height = window.innerHeight * window.devicePixelRatio;\r\n            if (this.onresize) this.onresize({ width, height });\r\n            this.renderer.setSize({ width, height });\r\n        };\r\n        this._resizeHandler();\r\n        window.addEventListener(\"resize\", this._resizeHandler);\r\n    }\r\n    disableAutoResize() {\r\n        if (!this._autoResize || !this._resizeHandler) return;\r\n        window.removeEventListener(\"resize\", this._resizeHandler);\r\n        this._autoResize = false;\r\n        this._resizeHandler = undefined;\r\n    }\r\n    private constructor(\r\n        canvas: HTMLCanvasElement,\r\n        renderer: Renderer,\r\n        scene: Scene,\r\n        camera: Camera,\r\n        controllerRegistry: ControllerRegistry\r\n    ) {\r\n        this.canvas = canvas;\r\n        this.renderer = renderer;\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.controllerRegistry = controllerRegistry;\r\n    }\r\n\r\n    static async create(opts: {\r\n        canvas: HTMLCanvasElement;\r\n        scene?: Scene;\r\n        camera?: Camera;\r\n        controls?: IController[];\r\n        autoSetSize?: boolean;\r\n        renderConfig?: RendererConfig;\r\n        controllerConfig?: ControllerConfig;\r\n    }): Promise<App> {\r\n        const renderer = await new Renderer(opts.canvas, opts.renderConfig).init();\r\n        const scene = opts.scene ?? new Scene();\r\n        const camera = opts.camera ?? new PerspectiveCamera();\r\n        scene.add(camera);\r\n        const controls = opts.controls ?? [new RetinaController(renderer.core)];\r\n        const controllerRegistry = new ControllerRegistry(opts.canvas, controls, opts.controllerConfig);\r\n\r\n        const app = new App(opts.canvas, renderer, scene, camera, controllerRegistry);\r\n        if (opts.autoSetSize !== false) {\r\n            app.enableAutoResize();\r\n        }\r\n        if (!opts.controls) app.retinaController = controls[0] as RetinaController;\r\n        return app;\r\n    }\r\n    run(onFrame?: () => void) {\r\n        this._onFrame = onFrame;\r\n        this._running = true;\r\n        const frame = () => {\r\n            if (!this._running) return;\r\n            this.controllerRegistry.update();\r\n            this._onFrame?.();\r\n            this.renderer.render(this.scene, this.camera);\r\n            requestAnimationFrame(frame);\r\n        };\r\n        frame();\r\n    }\r\n    stop() {\r\n        this._running = false;\r\n    }\r\n}"],"names":[],"mappings":"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"}