{"version":3,"file":"vertexshader.js","sources":["../../../src/four/vertexshader.ts"],"sourcesContent":["//  tetra vertex shaders\r\nlet commonHeader = `\r\nstruct tsxAffineMat{\r\n    matrix: mat4x4<f32>,\r\n    vector: vec4<f32>,\r\n}\r\nstruct UObjMats{\r\n    pos: tsxAffineMat,\r\n    normal: mat4x4<f32>,\r\n}\r\nstruct fourInputType{\r\n    @location(0) pos: mat4x4<f32>,{fourInputType}\r\n}\r\nstruct fourOutputType{\r\n    @builtin(position) position: mat4x4<f32>,\r\n    {fourOutputType}\r\n}\r\n@group(1) @binding({0}) var<uniform> uObjMat: UObjMats;\r\n@group(1) @binding({1}) var<uniform> uCamMat: tsxAffineMat;\r\nfn apply(afmat: tsxAffineMat, points: mat4x4<f32>) -> mat4x4<f32>{\r\n    let biais = mat4x4<f32>(afmat.vector, afmat.vector, afmat.vector, afmat.vector);\r\n    return afmat.matrix * points + biais;\r\n}\r\nfn normalizeVec4s(vec4s: mat4x4<f32>) -> mat4x4<f32>{\r\n    return mat4x4<f32>(\r\n        normalize(vec4s[0]), normalize(vec4s[1]), normalize(vec4s[2]), normalize(vec4s[3]),\r\n    );\r\n}\r\n@tetra fn main(input : fourInputType, @builtin(instance_index) index: u32) -> fourOutputType{\r\n    let worldPos = apply(uObjMat.pos,input.pos);\r\n    return fourOutputType({fourOutputReturn});\r\n}\r\n`;\r\nconst outputReturn = {\r\n    position: `apply(uCamMat,worldPos)`,\r\n    uvw: `input.uvw`,\r\n    normal: `normalizeVec4s(uObjMat.normal * input.normal)`,\r\n    pos: `worldPos`\r\n};\r\nexport function _generateVertShader(inputs: string[], outputs: string[]) {\r\n    const bindingOffset = inputs.length + 1;\r\n    let header = commonHeader;\r\n    let fourInputType = \"\";\r\n    let fourOutputType = \"\";\r\n    let fourOutputReturn = outputReturn.position;\r\n    for (let i = 0, l = inputs.length; i < l; i++) {\r\n        fourInputType += `\r\n        @location(${i + 1}) ${inputs[i]}: mat4x4<f32>,`;\r\n    }\r\n    if (outputs.length === 1) {\r\n        fourOutputType = `\r\n        @location(0) ${outputs[0]}: mat4x4<f32>,`;\r\n        fourOutputReturn += \",\" + outputReturn[outputs[0]];\r\n    } else if (outputs.length === 2) {\r\n        fourOutputType = `\r\n        @location(0) ${outputs[0]}: mat4x4<f32>,\r\n        @location(1) ${outputs[1]}: mat4x4<f32>`;\r\n        fourOutputReturn += \",\" + outputReturn[outputs[0]] + \",\" + outputReturn[outputs[1]];\r\n    } else if (outputs.length === 3) {\r\n        fourOutputType = `\r\n        @location(0) ${outputs[0]}_${outputs[1]}: array<mat4x4<f32>,2>,\r\n        @location(1) ${outputs[2]}: mat4x4<f32>`;\r\n        fourOutputReturn += \", array<mat4x4<f32>,2>(\" + outputReturn[outputs[0]] + \",\" +\r\n            outputReturn[outputs[1]] + \"),\" + outputReturn[outputs[2]];\r\n    }\r\n    for (let i = 0; i < 32; i++) {\r\n        header = header.replace(`@binding({${i}})`, `@binding(${i + bindingOffset})`);\r\n    }\r\n    return header.replace(\"{fourOutputReturn}\", fourOutputReturn).replace(\"{fourOutputType}\", fourOutputType).replace(\"{fourInputType}\", fourInputType);\r\n}"],"names":[],"mappings":"AAAA;AACA,IAAI,YAAY,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+BlB,CAAC;AACF,MAAM,YAAY,GAAG;AACjB,IAAA,QAAQ,EAAE,CAAyB,uBAAA,CAAA;AACnC,IAAA,GAAG,EAAE,CAAW,SAAA,CAAA;AAChB,IAAA,MAAM,EAAE,CAA+C,6CAAA,CAAA;AACvD,IAAA,GAAG,EAAE,CAAU,QAAA,CAAA;CAClB,CAAC;AACc,SAAA,mBAAmB,CAAC,MAAgB,EAAE,OAAiB,EAAA;AACnE,IAAA,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACxC,IAAI,MAAM,GAAG,YAAY,CAAC;IAC1B,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,cAAc,GAAG,EAAE,CAAC;AACxB,IAAA,IAAI,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC;AAC7C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAA,aAAa,IAAI,CAAA;oBACL,CAAC,GAAG,CAAC,CAAK,EAAA,EAAA,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC;AACnD,KAAA;AACD,IAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,QAAA,cAAc,GAAG,CAAA;AACF,qBAAA,EAAA,OAAO,CAAC,CAAC,CAAC,CAAA,cAAA,CAAgB,CAAC;QAC1C,gBAAgB,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,KAAA;AAAM,SAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,QAAA,cAAc,GAAG,CAAA;uBACF,OAAO,CAAC,CAAC,CAAC,CAAA;AACV,qBAAA,EAAA,OAAO,CAAC,CAAC,CAAC,CAAA,aAAA,CAAe,CAAC;QACzC,gBAAgB,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,KAAA;AAAM,SAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,QAAA,cAAc,GAAG,CAAA;AACF,qBAAA,EAAA,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAA;AACxB,qBAAA,EAAA,OAAO,CAAC,CAAC,CAAC,CAAA,aAAA,CAAe,CAAC;QACzC,gBAAgB,IAAI,yBAAyB,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;AAC1E,YAAA,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,KAAA;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACzB,QAAA,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAa,UAAA,EAAA,CAAC,CAAI,EAAA,CAAA,EAAE,YAAY,CAAC,GAAG,aAAa,CAAA,CAAA,CAAG,CAAC,CAAC;AACjF,KAAA;IACD,OAAO,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;AACxJ;;;;"}