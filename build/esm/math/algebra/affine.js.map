{"version":3,"file":"affine.js","sources":["../../../../src/math/algebra/affine.ts"],"sourcesContent":["import { Bivec } from \"./bivec\";\r\nimport { Mat4 } from \"./mat4\";\r\nimport { Rotor, _r } from \"./rotor\";\r\nimport { Vec4, _vec4, _vec4_1 } from \"./vec4\";\r\n\r\n/** [A(4x4), b(1x4)]\r\n * \r\n *  [0(4x1), 1(1x1)]\r\n * \r\n *  a blocked 5x5 matrix for transform in 4d\r\n */\r\nexport class AffineMat4 {\r\n    mat: Mat4;\r\n    vec: Vec4;\r\n    constructor(mat: Mat4 = new Mat4(), vec: Vec4 = new Vec4()) {\r\n        this.mat = mat; this.vec = vec;\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        this.mat.writeBuffer(b, offset);\r\n        this.vec.writeBuffer(b, offset + 16);\r\n    }\r\n    inv(): AffineMat4 {\r\n        let m = this.mat.inv();\r\n        return new AffineMat4(m, m.mulv(this.vec).negs());\r\n    }\r\n    invs(): AffineMat4 {\r\n        this.mat.invs();\r\n        this.vec.copy(this.mat.mulv(this.vec).negs());\r\n        return this;\r\n    }\r\n    mul(m: AffineMat4): AffineMat4 {\r\n        return new AffineMat4(this.mat.mul(m.mat), this.mat.mulv(m.vec).adds(this.vec));\r\n    }\r\n    /** this = this * m */\r\n    mulsr(m: AffineMat4): AffineMat4 {\r\n        this.vec.adds(this.mat.mulv(m.vec));\r\n        this.mat.mulsr(m.mat);\r\n        return this;\r\n    }\r\n    /** this = m * this */\r\n    mulsl(m: AffineMat4): AffineMat4 {\r\n        this.vec.mulmatls(m.mat).adds(m.vec);\r\n        this.mat.mulsl(m.mat);\r\n        return this;\r\n    }\r\n    setFromObj4(o: Obj4) {\r\n        this.mat.setFromRotor(o.rotation);\r\n        if (o.scale) {\r\n            this.mat.mulsr(Mat4.diag(o.scale.x, o.scale.y, o.scale.z, o.scale.w));\r\n        }\r\n        this.vec.copy(o.position);\r\n        return this;\r\n    }\r\n    setFromObj4inv(o: Obj4) {\r\n        this.vec.copy(o.position).negs().rotatesconj(o.rotation);\r\n        this.mat.setFromRotorconj(o.rotation);\r\n        if (o.scale) {\r\n            let x = 1 / o.scale.x;\r\n            let y = 1 / o.scale.y;\r\n            let z = 1 / o.scale.z;\r\n            let w = 1 / o.scale.w;\r\n            this.mat.mulsl(Mat4.diag(x, y, z, w));\r\n            this.vec.x *= x; this.vec.y *= y; this.vec.z *= z; this.vec.w *= w;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n/** an coordinate transform of rotation translation and scale */\r\nexport class Obj4 {\r\n    position: Vec4;\r\n    rotation: Rotor;\r\n    scale: Vec4 | undefined;\r\n    constructor(\r\n        position?: Vec4, rotation?: Rotor,\r\n        scale?: Vec4\r\n    ) {\r\n        this.position = position ?? new Vec4();\r\n        this.rotation = rotation ?? new Rotor();\r\n        this.scale = scale;\r\n    }\r\n    copyObj4(o: Obj4) {\r\n        if (o.position) this.position.copy(o.position);\r\n        if (o.rotation) this.rotation.copy(o.rotation);\r\n        if (o.scale) { if (!this.scale) this.scale = new Vec4; this.scale.copy(o.scale); }\r\n        return this;\r\n    }\r\n    local2world(point: Vec4): Vec4 {\r\n        if (this.scale)\r\n            return new Vec4(\r\n                this.scale.x * point.x, this.scale.y * point.y,\r\n                this.scale.z * point.z, this.scale.w * point.w\r\n            ).rotates(this.rotation).adds(this.position);\r\n\r\n        return point.rotate(this.rotation).adds(this.position);\r\n    }\r\n    world2local(point: Vec4): Vec4 {\r\n        let a = point.sub(this.position).rotatesconj(this.rotation);\r\n        if (this.scale) return new Vec4(\r\n            a.x / this.scale.x, a.y / this.scale.y,\r\n            a.z / this.scale.z, a.w / this.scale.w\r\n        );\r\n        return a;\r\n    }\r\n    getMat4(): Mat4 {\r\n        if (this.scale)\r\n            return this.rotation.toMat4().mul(\r\n                Mat4.diag(this.scale.x, this.scale.y, this.scale.z, this.scale.w)\r\n            );\r\n        return this.rotation.toMat4();\r\n    }\r\n    getMat4inv(): Mat4 {\r\n        if (this.scale)\r\n            return Mat4.diag(1 / this.scale.x, 1 / this.scale.y, 1 / this.scale.z, 1 / this.scale.w).mul(\r\n                this.rotation.conj().toMat4()\r\n            );\r\n        return this.rotation.conj().toMat4();\r\n    }\r\n    getAffineMat4(): AffineMat4 {\r\n        if (this.scale)\r\n            return new AffineMat4(this.rotation.toMat4().mulsr(\r\n                Mat4.diag(this.scale.x, this.scale.y, this.scale.z, this.scale.w)\r\n            ), this.position.clone());\r\n        return new AffineMat4(this.rotation.toMat4(), this.position.clone());\r\n    }\r\n    getAffineMat4inv(): AffineMat4 {\r\n        let b = this.position.neg().rotatesconj(this.rotation);\r\n        if (!this.scale) return new AffineMat4(\r\n            this.rotation.conj().toMat4(), b\r\n        );\r\n        let x = 1 / this.scale.x;\r\n        let y = 1 / this.scale.y;\r\n        let z = 1 / this.scale.z;\r\n        let w = 1 / this.scale.w;\r\n        return new AffineMat4(Mat4.diag(x, y, z, w).mulsr(\r\n            this.rotation.conj().toMat4()\r\n        ), new Vec4(b.x * x, b.y * y, b.z * z, b.w * w));\r\n    }\r\n    translates(v: Vec4): this {\r\n        this.position.adds(v);\r\n        return this;\r\n    }\r\n    rotates(r: Rotor): this {\r\n        this.rotation.mulsl(r);\r\n        return this;\r\n    }\r\n    rotatesconj(r: Rotor): this {\r\n        this.rotation.mulslconj(r);\r\n        return this;\r\n    }\r\n    rotatesb(b: Bivec): this {\r\n        this.rotation.mulsl(_r.expset(b));\r\n        return this;\r\n    }\r\n    rotatesAt(r: Rotor, center: Vec4 = new Vec4()): this {\r\n        this.rotation.mulsl(r);\r\n        this.position.subs(center).rotates(r).adds(center);\r\n        return this;\r\n    }\r\n    lookAt(front: Vec4, target: Vec4) {\r\n        let dir = _vec4.subset(target, this.position);\r\n        this.rotates(_r.setFromLookAt(_vec4_1.copy(front).rotates(this.rotation), dir.norms()));\r\n        return this;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}