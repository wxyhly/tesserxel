{"version":3,"file":"vec2.js","sources":["../../../../src/math/algebra/vec2.ts"],"sourcesContent":["\r\nimport { Complex } from \"./cplx.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport {_360} from \"../const.js\";\r\nimport { Pool } from \"../pool.js\";\r\nexport class Vec2Pool extends Pool<Vec2>{\r\n    constructObject() { return new Vec2; }\r\n}\r\nexport const vec2Pool = new Vec2Pool;\r\nexport class Vec2 {\r\n    x: number;\r\n    y: number;\r\n    static readonly x = new Vec2(1, 0);\r\n    static readonly y = new Vec2(0, 1);\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x; this.y = y;\r\n    }\r\n    flat(): number[] {\r\n        return [this.x, this.y];\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        b[offset] = this.x;\r\n        b[offset + 1] = this.y;\r\n    }\r\n    set(x: number = 0, y: number = 0): Vec2 {\r\n        this.x = x; this.y = y; return this;\r\n    }\r\n    copy(v: Vec2): Vec2 {\r\n        this.x = v.x; this.y = v.y; return this;\r\n    }\r\n    copyc(v: Complex): Vec2 {\r\n        this.x = v.re; this.y = v.im; return this;\r\n    }\r\n    clone(): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n    add(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x + v2.x, this.y + v2.y);\r\n    }\r\n    addset(v1: Vec2, v2: Vec2): Vec2 {\r\n        this.x = v1.x + v2.x; this.y = v1.y + v2.y; return this;\r\n    }\r\n    addf(v2: number): Vec2 {\r\n        return new Vec2(this.x + v2, this.y + v2);\r\n    }\r\n    adds(v2: Vec2): Vec2 {\r\n        this.x += v2.x; this.y += v2.y; return this;\r\n    }\r\n    addfs(v2: number): Vec2 {\r\n        this.x += v2; this.y += v2; return this;\r\n    }\r\n    /** this += v * k */\r\n    addmulfs(v: Vec2, k: number) {\r\n        this.x += v.x * k; this.y += v.y * k; return this;\r\n    }\r\n    neg(): Vec2 {\r\n        return new Vec2(-this.x, -this.y);\r\n    }\r\n    negs(): Vec2 {\r\n        this.x = - this.x; this.y = -this.y;\r\n        return this;\r\n    }\r\n    sub(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x - v2.x, this.y - v2.y);\r\n    }\r\n    subset(v1: Vec2, v2: Vec2): Vec2 {\r\n        this.x = v1.x - v2.x; this.y = v1.y - v2.y; return this;\r\n    }\r\n    subf(v2: number): Vec2 {\r\n        return new Vec2(this.x - v2, this.y - v2);\r\n    }\r\n    subs(v2: Vec2): Vec2 {\r\n        this.x -= v2.x; this.y -= v2.y; return this;\r\n    }\r\n    subfs(v2: number): Vec2 {\r\n        this.x -= v2; this.y -= v2; return this;\r\n    }\r\n    mulf(v2: number): Vec2 {\r\n        return new Vec2(this.x * v2, this.y * v2);\r\n    }\r\n    mulfs(v2: number): Vec2 {\r\n        this.x *= v2; this.y *= v2; return this;\r\n    }\r\n    mul(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x * v2.x, this.y * v2.y);\r\n    }\r\n    muls(v2: Vec2): Vec2 {\r\n        this.x *= v2.x; this.y *= v2.y; return this;\r\n    }\r\n    divf(v2: number): Vec2 {\r\n        v2 = 1 / v2;\r\n        return new Vec2(this.x * v2, this.y * v2);\r\n    }\r\n    divfs(v2: number): Vec2 {\r\n        v2 = 1 / v2;\r\n        this.x *= v2; this.y *= v2; return this;\r\n    }\r\n    div(v2: Vec2): Vec2 {\r\n        return new Vec2(this.x / v2.x, this.y / v2.y);\r\n    }\r\n    divs(v2: Vec2): Vec2 {\r\n        this.x /= v2.x; this.y /= v2.y; return this;\r\n    }\r\n    dot(v2: Vec2): number {\r\n        return this.x * v2.x + this.y * v2.y;\r\n    }\r\n    norm(): number {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n    norms(): Vec2 {\r\n        let v2 = Math.hypot(this.x, this.y);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.x *= v2; this.y *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    norm1(): number {\r\n        return Math.abs(this.x) + Math.abs(this.y);\r\n    }\r\n    norminf(): number {\r\n        return Math.max(Math.abs(this.x), Math.abs(this.y));\r\n    }\r\n    normi(i: number): number {\r\n        return Math.pow(Math.pow(this.x, i) + Math.pow(this.y, i), 1 / i);\r\n    }\r\n    wedge(v2: Vec2): number {\r\n        return this.x * v2.y - this.y * v2.x;\r\n    }\r\n    rotate(angle: number): Vec2 {\r\n        let s = Math.sin(angle); let c = Math.cos(angle);\r\n        return new Vec2(\r\n            this.x * c - this.y * s,\r\n            this.x * s + this.y * c,\r\n        )\r\n    }\r\n    rotates(angle: number): Vec2 {\r\n        let s = Math.sin(angle); let c = Math.cos(angle);\r\n        let x = this.x * c - this.y * s;\r\n        this.y = this.x * s + this.y * c;\r\n        this.x = x;\r\n        return this;\r\n    }\r\n    static rand(): Vec2 {\r\n        let a = Math.random() * _360;\r\n        return new Vec2(Math.cos(a), Math.sin(a));\r\n    }\r\n    static srand(seed: Srand): Vec2 {\r\n        let a = seed.nextf() * _360;\r\n        return new Vec2(Math.cos(a), Math.sin(a));\r\n    }\r\n    distanceTo(p: Vec2) {\r\n        return Math.hypot(p.x - this.x, p.y - this.y);\r\n    }\r\n    distanceSqrTo(p: Vec2) {\r\n        let x = p.x - this.x, y = p.y - this.y;\r\n        return x * x + y * y;\r\n    }\r\n    equal(v: Vec2) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n    pushPool(pool: Vec2Pool = vec2Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\n\r\nexport let _vec2 = new Vec2();"],"names":[],"mappings":"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"}