{"version":3,"file":"cplx.js","sources":["../../../../src/math/algebra/cplx.ts"],"sourcesContent":["import { Vec2 } from \"./vec2\"\r\nexport class Complex {\r\n    re: number;\r\n    im: number;\r\n    static i = new Complex(0, 1);\r\n    constructor(re: number = 0, im: number = 0) {\r\n        this.re = re; this.im = im;\r\n    }\r\n    flat(): number[] {\r\n        return [this.re, this.im];\r\n    }\r\n    set(v: Complex): Complex {\r\n        this.re = v.re; this.im = v.im; return this;\r\n    }\r\n    setv(v: Vec2): Complex {\r\n        this.re = v.x; this.im = v.y; return this;\r\n    }\r\n    clone(): Complex {\r\n        return new Complex(this.re, this.im);\r\n    }\r\n    add(v2: Complex): Complex {\r\n        return new Complex(this.re + v2.re, this.im + v2.im);\r\n    }\r\n    addf(v2: number): Complex {\r\n        return new Complex(this.re + v2, this.im);\r\n    }\r\n    adds(v2: Complex): Complex {\r\n        this.re += v2.re; this.im += v2.im; return this;\r\n    }\r\n    addfs(v2: number): Complex {\r\n        this.re += v2; return this;\r\n    }\r\n    neg(): Complex {\r\n        return new Complex(-this.re, -this.im);\r\n    }\r\n    negs(): Complex {\r\n        this.re = - this.re; this.im = -this.im;\r\n        return this;\r\n    }\r\n    sub(v2: Complex): Complex {\r\n        return new Complex(this.re - v2.re, this.im - v2.im);\r\n    }\r\n    subf(v2: number): Complex {\r\n        return new Complex(this.re - v2, this.im);\r\n    }\r\n    subs(v2: Complex): Complex {\r\n        this.re -= v2.re; this.im -= v2.im; return this;\r\n    }\r\n    subfs(v2: number): Complex {\r\n        this.re -= v2; return this;\r\n    }\r\n    mulf(v2: number): Complex {\r\n        return new Complex(this.re * v2, this.im * v2);\r\n    }\r\n    mulfs(v2: number): Complex {\r\n        this.re *= v2; this.im *= v2; return this;\r\n    }\r\n    mul(k: Complex): Complex {\r\n        return new Complex(this.re * k.re - k.im * this.im, this.re * k.im + k.re * this.im);\r\n    }\r\n    muls(k: Complex): Complex {\r\n        let re = this.re * k.re - k.im * this.im;\r\n        this.im = this.re * k.im + k.re * this.im;\r\n        this.re = re; return this;\r\n    }\r\n    divf(v2: number): Complex {\r\n        v2 = 1 / v2;\r\n        return new Complex(this.re * v2, this.im * v2);\r\n    }\r\n    divfs(v2: number): Complex {\r\n        v2 = 1 / v2;\r\n        this.re *= v2; this.im *= v2; return this;\r\n    }\r\n    div(k: Complex): Complex {\r\n        let n = 1 / (k.re * k.re + k.im * k.im);\r\n        return new Complex((this.re * k.re + k.im * this.im) * n, (k.re * this.im - this.re * k.im) * n);\r\n    }\r\n    divs(k: Complex): Complex {\r\n\r\n        let n = 1 / (k.re * k.re + k.im * k.im);\r\n        let im = (k.re * this.im - this.re * k.im) * n;\r\n        this.re = (this.re * k.re + k.im * this.im) * n;\r\n        this.im = im; return this;\r\n    }\r\n    dot(v2: Complex): number {\r\n        return this.re * v2.re + this.im * v2.im;\r\n    }\r\n    norm(): number {\r\n        return Math.sqrt(this.re * this.re + this.im * this.im);\r\n    }\r\n    norms(): Complex {\r\n        let v2 = Math.sqrt(this.re * this.re + this.im * this.im);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.re *= v2; this.im *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.re * this.re + this.im * this.im;\r\n    }\r\n    conj(): Complex {\r\n        return new Complex(this.re, -this.im);\r\n    }\r\n    conjs(): Complex {\r\n        this.im = -this.im; return this;\r\n    }\r\n    exp(): Complex {\r\n        let r = Math.exp(this.re);\r\n        return new Complex(Math.cos(this.im) * r, Math.sin(this.im) * r);\r\n    }\r\n    exps(): Complex {\r\n        let r = Math.exp(this.re);\r\n        this.re = Math.cos(this.im) * r;\r\n        this.im = Math.sin(this.im) * r;\r\n        return this;\r\n    }\r\n    arg(): number {\r\n        return Math.atan2(this.im, this.re);\r\n    }\r\n    log(): Complex {\r\n        return new Complex(\r\n            Math.log(this.re * this.re + this.im * this.im) / 2,\r\n            Math.atan2(this.im, this.re)\r\n        );\r\n    }\r\n    logs(): Complex {\r\n        let a = Math.atan2(this.im, this.re);\r\n        this.re = Math.log(this.re * this.re + this.im * this.im) / 2;\r\n        this.im = a;\r\n        return this;\r\n    }\r\n    pow(p: Complex): Complex {\r\n        return this.log().muls(p).exps();\r\n    }\r\n    powf(n: number): Complex {\r\n        return this.log().mulfs(n).exps();\r\n    }\r\n    pows(p: Complex): Complex {\r\n        return this.logs().muls(p).exps();\r\n    }\r\n    powfs(n: number): Complex {\r\n        return this.logs().mulfs(n).exps();\r\n    }\r\n}\r\nexport class CMat2 {\r\n    // todo PSL(2,C)\r\n}"],"names":[],"mappings":"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"}