{"version":3,"file":"vec3.js","sources":["../../../../src/math/algebra/vec3.ts"],"sourcesContent":["import { Vec2 } from \"./vec2.js\";\r\nimport { Vec4 } from \"./vec4.js\";\r\nimport { Quaternion, _Q } from \"./quaternion.js\";\r\nimport { Pool } from \"../pool.js\";\r\nimport { Srand } from \"../random.js\";\r\nimport { _360 } from \"../const.js\";\r\nexport class Vec3Pool extends Pool<Vec3>{\r\n    constructObject() { return new Vec3; }\r\n}\r\nexport const vec3Pool = new Vec3Pool;\r\nexport class Vec3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    static readonly x = new Vec3(1, 0, 0);\r\n    static readonly y = new Vec3(0, 1, 0);\r\n    static readonly z = new Vec3(0, 0, 1);\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x; this.y = y; this.z = z;\r\n    }\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n    writeBuffer(b: Float32Array, offset: number = 0) {\r\n        b[offset] = this.x;\r\n        b[offset + 1] = this.y;\r\n        b[offset + 2] = this.z;\r\n    }\r\n    copy(v: Vec3): Vec3 {\r\n        this.x = v.x; this.y = v.y; this.z = v.z;\r\n        return this;\r\n    }\r\n    set(x: number = 0, y: number = 0, z: number = 0): Vec3 {\r\n        this.x = x; this.y = y; this.z = z; return this;\r\n    }\r\n    xy(): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n    yx(): Vec2 {\r\n        return new Vec2(this.y, this.x);\r\n    }\r\n    xz(): Vec2 {\r\n        return new Vec2(this.x, this.z);\r\n    }\r\n    yz(): Vec2 {\r\n        return new Vec2(this.y, this.z);\r\n    }\r\n    zy(): Vec2 {\r\n        return new Vec2(this.z, this.y);\r\n    }\r\n    yzx(): Vec3 {\r\n        return new Vec3(this.y, this.z, this.x);\r\n    }\r\n    yxz(): Vec3 {\r\n        return new Vec3(this.y, this.x, this.z);\r\n    }\r\n    zyx(): Vec3 {\r\n        return new Vec3(this.z, this.y, this.x);\r\n    }\r\n    zxy(): Vec3 {\r\n        return new Vec3(this.z, this.x, this.y);\r\n    }\r\n    xzy(): Vec3 {\r\n        return new Vec3(this.x, this.z, this.y);\r\n    }\r\n    xyz0(): Vec4 {\r\n        return new Vec4(this.x, this.y, this.z);\r\n    }\r\n    x0yz(): Vec4 {\r\n        return new Vec4(this.x, 0, this.y, this.z);\r\n    }\r\n    clone(): Vec3 {\r\n        return new Vec3(this.x, this.y, this.z);\r\n    }\r\n    add(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x + v2.x, this.y + v2.y, this.z + v2.z);\r\n    }\r\n\r\n    addset(v1: Vec3, v2: Vec3): Vec3 {\r\n        this.x = v1.x + v2.x; this.y = v1.y + v2.y; this.z = v1.z + v2.z; return this;\r\n    }\r\n    addf(v2: number): Vec3 {\r\n        return new Vec3(this.x + v2, this.y + v2, this.z + v2);\r\n    }\r\n    adds(v2: Vec3): Vec3 {\r\n        this.x += v2.x; this.y += v2.y; this.z += v2.z; return this;\r\n    }\r\n    addfs(v2: number): Vec3 {\r\n        this.x += v2; this.y += v2; this.z += v2; return this;\r\n    }\r\n    /** this += v * k */\r\n    addmulfs(v: Vec3, k: number) {\r\n        this.x += v.x * k; this.y += v.y * k; this.z += v.z * k; return this;\r\n    }\r\n    neg(): Vec3 {\r\n        return new Vec3(-this.x, -this.y, -this.z);\r\n    }\r\n    negs(): Vec3 {\r\n        this.x = - this.x; this.y = -this.y; this.z = -this.z;\r\n        return this;\r\n    }\r\n    sub(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x - v2.x, this.y - v2.y, this.z - v2.z);\r\n    }\r\n\r\n    subset(v1: Vec3, v2: Vec3): Vec3 {\r\n        this.x = v1.x - v2.x; this.y = v1.y - v2.y; this.z = v1.z - v2.z; return this;\r\n    }\r\n    subf(v2: number): Vec3 {\r\n        return new Vec3(this.x - v2, this.y - v2, this.z - v2);\r\n    }\r\n    subs(v2: Vec3): Vec3 {\r\n        this.x -= v2.x; this.y -= v2.y; this.z -= v2.z; return this;\r\n    }\r\n    subfs(v2: number): Vec3 {\r\n        this.x -= v2; this.y -= v2; this.z -= v2; return this;\r\n    }\r\n    mulf(v2: number): Vec3 {\r\n        return new Vec3(this.x * v2, this.y * v2, this.z * v2);\r\n    }\r\n    mulfs(v2: number): Vec3 {\r\n        this.x *= v2; this.y *= v2; this.z *= v2; return this;\r\n    }\r\n    mul(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x * v2.x, this.y * v2.y, this.z * v2.z);\r\n    }\r\n    muls(v2: Vec3): Vec3 {\r\n        this.x *= v2.x; this.y *= v2.y; this.z *= v2.z; return this;\r\n    }\r\n    divf(v2: number): Vec3 {\r\n        v2 = 1 / v2;\r\n        return new Vec3(this.x * v2, this.y * v2, this.z * v2);\r\n    }\r\n    divfs(v2: number): Vec3 {\r\n        v2 = 1 / v2;\r\n        this.x *= v2; this.y *= v2; this.z *= v2; return this;\r\n    }\r\n    div(v2: Vec3): Vec3 {\r\n        return new Vec3(this.x / v2.x, this.y / v2.y, this.z / v2.z);\r\n    }\r\n    divs(v2: Vec3): Vec3 {\r\n        this.x /= v2.x; this.y /= v2.y; this.z /= v2.z; return this;\r\n    }\r\n    dot(v2: Vec3): number {\r\n        return this.x * v2.x + this.y * v2.y + this.z * v2.z;\r\n    }\r\n    norm(): number {\r\n        return Math.hypot(this.x, this.y, this.z);\r\n    }\r\n    norms(): Vec3 {\r\n        let v2 = Math.hypot(this.x, this.y, this.z);\r\n        v2 = v2 == 0 ? 0 : (1 / v2);\r\n        this.x *= v2; this.y *= v2; this.z *= v2; return this;\r\n    }\r\n    normsqr(): number {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n    norm1(): number {\r\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n    }\r\n    norminf(): number {\r\n        return Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z));\r\n    }\r\n    normi(i: number): number {\r\n        return Math.pow(\r\n            Math.pow(Math.abs(this.x), i) +\r\n            Math.pow(Math.abs(this.y), i) +\r\n            Math.pow(Math.abs(this.z), i), 1 / i\r\n        );\r\n    }\r\n    wedge(v3: Vec3): Vec3 {\r\n        return new Vec3(\r\n            this.y * v3.z - this.z * v3.y,\r\n            this.z * v3.x - this.x * v3.z,\r\n            this.x * v3.y - this.y * v3.x,\r\n        );\r\n    }\r\n    /** this.set(v1 ^ v2) */\r\n    wedgeset(v1: Vec3, v2: Vec3): Vec3 {\r\n        this.x = v1.y * v2.z - v1.z * v2.y;\r\n        this.y = v1.z * v2.x - v1.x * v2.z;\r\n        this.z = v1.x * v2.y - v1.y * v2.x;\r\n        return this;\r\n    }\r\n    /** this = this ^ v */\r\n    wedgesr(v: Vec3): Vec3 {\r\n        return this.set(\r\n            this.y * v.z - this.z * v.y,\r\n            this.z * v.x - this.x * v.z,\r\n            this.x * v.y - this.y * v.x,\r\n        );\r\n    }\r\n    exp(): Quaternion {\r\n        let g = this.norm() * 0.5;\r\n        let s = Math.abs(g) > 0.005 ? Math.sin(g) / g * 0.5 : 0.5 - g * g / 12;\r\n        return new Quaternion(Math.cos(g), s * this.x, s * this.y, s * this.z);\r\n    }\r\n    rotate(q: Quaternion): Vec3 {\r\n        return _Q.set(0, this.x, this.y, this.z).mulsl(q).mulsr(q.conj()).yzw();\r\n    }\r\n    rotates(q: Quaternion): Vec3 {\r\n        let q2 = _Q.set(0, this.x, this.y, this.z).mulsl(q).mulsr(q.conj());\r\n        this.x = q2.y; this.y = q2.z; this.z = q2.w; return this;\r\n    }\r\n    randset(): Vec3 {\r\n        let a = Math.random() * _360;\r\n        let c = Math.random() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return this.set(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n    srandset(seed: Srand): Vec3 {\r\n        let a = seed.nextf() * _360;\r\n        let c = seed.nextf() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return this.set(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n    static rand(): Vec3 {\r\n        let a = Math.random() * _360;\r\n        let c = Math.random() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return new Vec3(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n    static srand(seed: Srand): Vec3 {\r\n        let a = seed.nextf() * _360;\r\n        let c = seed.nextf() * 2.0 - 1.0;\r\n        let b = Math.sqrt(1.0 - c * c);\r\n        return new Vec3(b * Math.cos(a), b * Math.sin(a), c);\r\n    }\r\n\r\n    distanceTo(p: Vec3) {\r\n        return Math.hypot(p.x - this.x, p.y - this.y, p.z - this.z);\r\n    }\r\n    distanceSqrTo(p: Vec3) {\r\n        let x = p.x - this.x, y = p.y - this.y, z = p.z - this.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n    reflect(normal: Vec3): Vec3 {\r\n        return this.sub(normal.mulf(this.dot(normal) * 2));\r\n    }\r\n    reflects(normal: Vec3): Vec3 {\r\n        return this.subs(normal.mulf(this.dot(normal) * 2));\r\n    }\r\n    equal(v: Vec3) {\r\n        return this.x === v.x && this.y === v.y && this.z === v.z;\r\n    }\r\n\r\n    pushPool(pool: Vec3Pool = vec3Pool) {\r\n        pool.push(this);\r\n    }\r\n}\r\n\r\nexport let _vec3 = new Vec3();\r\nexport let _vec3_1 = new Vec3();\r\nexport let _vec3_2 = new Vec3();\r\nexport let _vec3_3 = new Vec3();\r\nexport let _vec3_4 = new Vec3();\r\nexport let _vec3_5 = new Vec3();"],"names":[],"mappings":"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"}