{"version":3,"file":"polytope.js","sources":["../../../../src/math/geometry/polytope.ts"],"sourcesContent":["import { CosetTable } from \"../algebra/group.js\";\r\nimport { Bivec, Rotor, Vec4 } from \"../math.js\";\r\n\r\nexport class Polytope {\r\n    private gens: string;\r\n    private rels: string[];\r\n    private schlafli: number[];\r\n    private fullgroupRepresentatives: number[][];\r\n    private fullgroupTable: CosetTable;\r\n\r\n    // reflection directions: these dirs are sqrt(1/2) length for calc convenience\r\n    // [b2[0], 0 ..]\r\n    // [b1[1],b2[1],0..]\r\n    // [0,b1[2],b2[2],0..]\r\n    // [0,0,b1[2],b2[2],0..]\r\n    // ...\r\n    private basis1 = [0,];\r\n    private basis2 = [1,];\r\n\r\n    constructor(schlafli: number[]) {\r\n        let len = schlafli.length + 1;\r\n        this.schlafli = schlafli;\r\n\r\n        // get group descriptors\r\n\r\n        let gens = \"\";\r\n        let rels: string[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            gens += i;\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const si = i.toString();\r\n            for (let j = i; j < len; j++) {\r\n                const sj = j.toString();\r\n                const mij = i === j ? 1 : j === i + 1 ? schlafli[i] : 2;\r\n                rels.push((si + sj).repeat(mij));\r\n            }\r\n        }\r\n        this.gens = gens;\r\n        this.rels = rels;\r\n\r\n        // get reflection descriptors\r\n\r\n        for (let i = 1; i < len; i++) {\r\n            const cos = Math.cos(Math.PI / this.schlafli[i - 1]);\r\n            this.basis1.push(Math.abs(cos / this.basis2[i - 1]));\r\n            this.basis2.push(Math.sqrt(1 - this.basis1[i] * this.basis1[i]));\r\n        }\r\n        // these dirs are sqrt(1/2) length for calc convenience\r\n        for (let i = 1; i < len; i++) {\r\n            this.basis1[i] *= Math.SQRT2;\r\n            this.basis2[i] *= Math.SQRT2;\r\n        }\r\n    }\r\n    private generateVertices(v0: Vec4, cosetTable: CosetTable) {\r\n        const vertices = new Array<Vec4>(cosetTable.length);\r\n        vertices[0] = v0.clone();\r\n        for (const [c, coset] of cosetTable.cosets.entries()) {\r\n            const v = vertices[c];\r\n            for (const [x, cx] of coset.entries()) {\r\n                if (vertices[cx]) continue;\r\n                if (x === 0) {\r\n                    const nv = v.clone(); nv.x = -nv.x;\r\n                    vertices[cx] = nv; continue;\r\n                }\r\n\r\n                const vs = v.flat();\r\n                // these dirs are sqrt(1/2) length, no need to mul 2\r\n                const proj = (vs[x - 1] * this.basis1[x] + vs[x] * this.basis2[x]);\r\n                vs[x - 1] -= proj * this.basis1[x];\r\n                vs[x] -= proj * this.basis2[x];\r\n                vertices[cx] = new Vec4(...vs);\r\n            }\r\n        }\r\n        return vertices;\r\n    }\r\n    private getInitVertex(vertexPosition: number[]) {\r\n        if (this.gens.length !== vertexPosition.length + 1) throw (\"Polytope.getInitVertex: vertexPosition length must be\" + (this.gens.length - 1));\r\n        const pqr = vertexPosition.slice(0);\r\n        const remain = pqr.length ? 1 - pqr.reduce((a, b) => a + b) : 1;\r\n        if (remain < 0) throw \"vertexPosition's sum must be less than or equal to 1\";\r\n        pqr.push(remain);\r\n        const basisVec = [Vec4.x];\r\n        for (let i = 1; i < this.basis1.length; i++) {\r\n            const v = [0, 0, 0, 0];\r\n            v[i - 1] = this.basis1[i];\r\n            v[i] = this.basis2[i];\r\n            basisVec.push(new Vec4(...v));\r\n        }\r\n        const points: Vec4[] = [];\r\n        for (let j = 0; j < this.gens.length; j++) {\r\n            let a: Vec4 | Bivec;\r\n            for (let i = 0; i < this.gens.length; i++) {\r\n                if (i === j) continue;\r\n                if (!a) { a = basisVec[i]; continue; }\r\n                if (a instanceof Vec4) { a = a.wedge(basisVec[i]); continue; }\r\n                if (a instanceof Bivec) { a = a.wedgev(basisVec[i]); continue; }\r\n            }\r\n            if (vertexPosition.length === 1) {\r\n                const na = (a as Vec4).yxzw(); na.x = -na.x;\r\n                points.push(na);\r\n            } else if (vertexPosition.length === 2) {\r\n                points.push((a as Bivec).wedgev(Vec4.w));\r\n            } else if (vertexPosition.length === 3) {\r\n                points.push(a as Vec4);\r\n            }\r\n        }\r\n        const v0 = new Vec4;\r\n        for (const [i, k] of pqr.entries()) {\r\n            v0.addmulfs(points[i].norms(), k);\r\n        }\r\n        return v0;\r\n    }\r\n    generateFaceLinkTable(srcNum: number, srcTable: number[], ...destTable: number[][]) {\r\n        const src: Set<number>[] = new Array(srcNum);\r\n        for (let i = 0; i < srcTable.length; i++) {\r\n            src[srcTable[i]] ??= new Set<number>();\r\n            for (const val of destTable.map(dt => dt[i])) {\r\n                src[srcTable[i]].add(val);\r\n            }\r\n        }\r\n        return src.map(e => Array.from(e));\r\n    }\r\n    getRegularPolytope() {\r\n        if (this.gens.length === 1) return [];\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getFirstStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(0); if (pqr.length) pqr[0] = 1;\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[0].cosetTable);\r\n        let polytope: (Array<number>[] | Vec4[])[] = [V];\r\n        for (let i = 1; i < this.gens.length; i++) {\r\n            polytope.push(this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i - 1].subGroupTable));\r\n        }\r\n        return polytope;\r\n    }\r\n    getTrucatedRegularPolytope(t: number) {\r\n        if (t <= 0 || t >= 1) throw \"Trucation parameter must be in range (0,1)!\";\r\n        if (this.gens.length === 1) return [];\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getTrucatedStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(0); if (pqr.length > 1) { pqr[0] = 1 - t; pqr[1] = t; }\r\n        let vi = this.gens.length;\r\n        // if > 4, return abstract vertex without coord\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[vi].cosetTable);\r\n        let polytope: (Array<number>[] | Vec4[])[] = [V];\r\n        let tOffset: number;\r\n        for (let i = 1; i < this.gens.length; i++) {\r\n            // [vi->ei vi->e]\r\n            // [ei->fi (ei+e)->f]\r\n            // [fi->ci (fi+f)->c]\r\n            const t = this.generateFaceLinkTable(kfaceTable[i === vi - 1 ? 0 : (i + vi)].cosetTable.length, kfaceTable[i === vi - 1 ? 0 : (i + vi)].subGroupTable, kfaceTable[i + vi - 1].subGroupTable);\r\n            let offset = t.length;\r\n            if (i > 1)\r\n                t.push(...this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i + vi - 1].subGroupTable, kfaceTable[i - 1].subGroupTable.map(e => e + tOffset)));\r\n            else\r\n                t.push(...this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i + vi - 1].subGroupTable));\r\n            polytope.push(t);\r\n            tOffset = offset;\r\n        }\r\n        return polytope;\r\n    }\r\n    getBitrucatedRegularPolytope(t: number = 0.5) {\r\n        if (t <= 0 || t >= 1) throw \"BiTrucation parameter must be in range (0,1)!\";\r\n        if (this.gens.length !== 4) throw \"BiTrucation is only implemented in 4D!\";\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getBitrucatedStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(0); if (pqr.length > 1) { pqr[0] = 0; pqr[1] = t; pqr[2] = 1 - t; }\r\n        let vi = this.gens.length;\r\n        // if > 4, return abstract vertex without coord\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[vi].cosetTable);\r\n\r\n        let tOffset: number;\r\n        const link = (src: number, ...dst: number[]) => {\r\n            return this.generateFaceLinkTable(kfaceTable[src].cosetTable.length, kfaceTable[src].subGroupTable, ...dst.map(n => kfaceTable[n].subGroupTable));\r\n        }\r\n        // [vi->ei vi->e]\r\n        const ei = link(5, 4);\r\n        const e = link(7, 4);\r\n        const edge = [...ei, ...e];\r\n        kfaceTable[7].subGroupTable = kfaceTable[7].subGroupTable.map(e => e + ei.length);\r\n        // [ei->f (ei+e)->fi e->fe]\r\n        const f = link(2, 5);\r\n        const fi = link(6, 5, 7);\r\n        const fe = link(1, 7);\r\n        const face = [...f, ...fi, ...fe];\r\n        kfaceTable[6].subGroupTable = kfaceTable[6].subGroupTable.map(e => e + f.length);\r\n        kfaceTable[1].subGroupTable = kfaceTable[1].subGroupTable.map(e => e + f.length + fi.length);\r\n        // [(fi+fe)->ci (fi+f)->c ]\r\n        const ci = link(0, 1, 6);\r\n        const c = link(3, 2, 6);\r\n        const cell = [...ci, ...c];\r\n        return [V, edge, face, cell];\r\n    }\r\n    getStructures(subgroups: string[][]) {\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        return subgroups.map(subgroup => {\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            return { cosetTable, subGroupTable };\r\n        })\r\n    }\r\n    getFirstStructure() {\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            // example: V: \"b,c,d\"  E: \"a,c,d\" F: \"a,b,d\" C: \"a,b,c\"\r\n            const subgroup = Array.from(this.gens); subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        return table;\r\n    }\r\n    getTrucatedStructure() {\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            // Ct: \"b,c,d\" E: \"a,c,d\" F: \"a,b,d\" C: \"a,b,c\"\r\n            const subgroup = Array.from(this.gens); subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n\r\n        for (let i = 0; i < this.gens.length - 1; i++) {\r\n            // Vt:\"c,d\" Et:\"b,d\" Ft:\"b,c\" \r\n            let subgroup = Array.from(this.gens); subgroup = subgroup.slice(1); subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        return table;\r\n    }\r\n    getBitrucatedStructure() {\r\n        if (this.gens.length !== 4) throw \"not implemented yet\";\r\n        this.fullgroupTable ??= new CosetTable(this.gens, this.rels, []).enumerate();\r\n        this.fullgroupRepresentatives ??= this.fullgroupTable.getRepresentatives();\r\n        const table: { cosetTable: CosetTable, subGroupTable: number[] }[] = [];\r\n        // Ct: \"b,c,d\" Fe: \"a,c,d\" F: \"a,b,d\" C: \"a,b,c\"\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            const subgroup = Array.from(this.gens);\r\n            subgroup.splice(i, 1);\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        // Vt:\"a,d\" Et:\"b,d\" Ft:\"b,c\" E: \"a,c\" \r\n\r\n        for (let i = 0; i < this.gens.length; i++) {\r\n            let subgroup = Array.from(this.gens);\r\n            if (i === 0) {\r\n                subgroup = [subgroup[0], subgroup[3]];\r\n            } else if (i === this.gens.length - 1) {\r\n                subgroup = [subgroup[0], subgroup[2]];\r\n            } else { subgroup = subgroup.slice(1); subgroup.splice(i, 1); }\r\n            const cosetTable = new CosetTable(this.gens, this.rels, subgroup).enumerate();\r\n            const subGroupTable = this.fullgroupRepresentatives.map(w => cosetTable.findCoset(w));\r\n            console.log(subgroup, cosetTable.length);\r\n            table.push({ cosetTable, subGroupTable });\r\n        }\r\n        return table;\r\n    }\r\n\r\n\r\n    getPolytope() {\r\n        if (this.gens.length === 1) return [];\r\n        // kface[0] : Vtable, kface[1] : Etable...\r\n        const kfaceTable = this.getFirstStructure();\r\n        let pqr = new Array(this.gens.length - 1);\r\n        pqr.fill(1 / pqr.length);\r\n        const V = this.gens.length > 4 ? kfaceTable[0].cosetTable.cosets.map(() => new Array<number>()) : this.generateVertices(this.getInitVertex(pqr), kfaceTable[0].cosetTable);\r\n        let polytope: (Array<number>[] | Vec4[])[] = [V];\r\n        for (let i = 1; i < this.gens.length; i++) {\r\n            polytope.push(this.generateFaceLinkTable(kfaceTable[i].cosetTable.length, kfaceTable[i].subGroupTable, kfaceTable[i - 1].subGroupTable));\r\n        }\r\n        return polytope;\r\n    }\r\n}"],"names":[],"mappings":"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"}