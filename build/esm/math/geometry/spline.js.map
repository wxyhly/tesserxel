{"version":3,"file":"spline.js","sources":["../../../../src/math/geometry/spline.ts"],"sourcesContent":["import { Obj4 } from \"../algebra/affine.js\";\r\nimport { Rotor } from \"../algebra/rotor.js\";\r\nimport { Vec4 } from \"../algebra/vec4.js\";\r\ninterface SplineData { points: Vec4[], rotors: Rotor[], curveLength: number[] }\r\nexport class Spline {\r\n    points: Vec4[];\r\n    derives: Vec4[];\r\n    constructor(points: Vec4[], derives: Vec4[]) {\r\n        if (points.length !== derives.length) console.error(\"Spline: points and derives lengths don't agree\");\r\n        this.points = points;\r\n        this.derives = derives;\r\n    }\r\n    generate(seg: number): SplineData {\r\n        let points: Vec4[] = [];\r\n        let prevPoint: Vec4 | undefined;\r\n        let prevDir = Vec4.w;\r\n        let prevRotor = new Rotor();\r\n        let rotors: Rotor[] = [];\r\n        let curveLength: number[] = [];\r\n        let curveLenSum = 0;\r\n        for (let i = 0; i < this.points.length - 1; i++) {\r\n            let p0 = this.points[i];\r\n            let p1 = this.points[i + 1];\r\n            let d0 = this.derives[i];\r\n            let d1 = this.derives[i + 1];\r\n            let p01 = p0.sub(p1);\r\n            let A = p01.mulf(2).adds(d0).adds(d1);\r\n            let B = d0.mulf(-2).subs(d1).subs(p01.mulfs(3));\r\n            let seginv = 1 / seg;\r\n            for (let j = 0; j <= seg; j++) {\r\n                if (j === seg && i !== this.points.length - 2) break;\r\n                let t = j * seginv;\r\n                let curPoint = new Vec4(\r\n                    p0.x + t * (d0.x + t * (B.x + t * A.x)),\r\n                    p0.y + t * (d0.y + t * (B.y + t * A.y)),\r\n                    p0.z + t * (d0.z + t * (B.z + t * A.z)),\r\n                    p0.w + t * (d0.w + t * (B.w + t * A.w))\r\n                );\r\n                if (prevPoint) {\r\n                    let curDir = curPoint.sub(prevPoint);\r\n                    let dirLen = curDir.norm();\r\n                    curDir.divfs(dirLen);\r\n                    prevRotor.mulsl(Rotor.lookAt(prevDir, curDir));\r\n                    // console.log(curDir.dot(Vec4.w.rotate(prevRotor)));\r\n                    prevDir = curDir;\r\n                    rotors.push(prevRotor.clone());\r\n                    curveLength.push(curveLenSum);\r\n                    curveLenSum += dirLen;\r\n                }\r\n                prevPoint = curPoint;\r\n                points.push(curPoint);\r\n            }\r\n        }\r\n        let lastDerive = this.derives[this.derives.length - 1];\r\n        if (\r\n            points[0].x == prevPoint!.x && points[0].y == prevPoint!.y &&\r\n            points[0].z == prevPoint!.z && points[0].w == prevPoint!.w &&\r\n            this.derives[0].x == lastDerive.x && this.derives[0].y == lastDerive.y &&\r\n            this.derives[0].z == lastDerive.z && this.derives[0].w == lastDerive.w\r\n        ) {\r\n            rotors.push(rotors[0]);\r\n        } else {\r\n            rotors.push(prevRotor);\r\n        }\r\n        curveLength.push(curveLenSum);\r\n        return { points, rotors, curveLength }\r\n    }\r\n    getValue(t: number) {\r\n        let i = Math.floor(t);\r\n        t -= i;\r\n        // i %= this.points.length - 1;\r\n        // if (i < 0) i += this.points.length - 1\r\n        let p0 = this.points[i];\r\n        let p1 = this.points[i + 1];\r\n        let d0 = this.derives[i];\r\n        let d1 = this.derives[i + 1];\r\n        let p01 = p0.sub(p1);\r\n        let A = p01.mulfs(2).adds(d0).adds(d1);\r\n        let B = d0.mulf(-2).subs(d1).subs(p01.mulfs(1.5));\r\n        let x = p0.x + t * (d0.x + t * (B.x + t * A.x));\r\n        let y = p0.y + t * (d0.y + t * (B.y + t * A.y));\r\n        let z = p0.z + t * (d0.z + t * (B.z + t * A.z));\r\n        let w = p0.w + t * (d0.w + t * (B.w + t * A.w));\r\n        return new Vec4(x, y, z, w);\r\n    }\r\n    getPositionAtLength(s: number, data: SplineData) {\r\n        let i = 0;\r\n        for (; i < data.curveLength.length; i++) {\r\n            if (data.curveLength[i] > s) { break; }\r\n        }\r\n        let a = data.curveLength[i - 1];\r\n        let b = data.curveLength[i];\r\n        let ratio = (s - a) / (b - a);\r\n        return data.points[i - 1].mulf(1 - ratio).addmulfs(data.points[i], ratio);\r\n    }\r\n    getObj4AtLength(s: number, data: SplineData) {\r\n        let i = 0;\r\n        for (; i < data.curveLength.length; i++) {\r\n            if (data.curveLength[i] > s) { break; }\r\n        }\r\n        let a = data.curveLength[i - 1];\r\n        let b = data.curveLength[i];\r\n        let ratio = (s - a) / (b - a);\r\n        return new Obj4(\r\n            data.points[i - 1].mulf(1 - ratio).addmulfs(data.points[i], ratio),\r\n            Rotor.slerp(data.rotors[i - 1], data.rotors[i], ratio)\r\n        );\r\n    }\r\n}"],"names":[],"mappings":"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"}