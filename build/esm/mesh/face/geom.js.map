{"version":3,"file":"geom.js","sources":["../../../../src/mesh/face/geom.ts"],"sourcesContent":["import { Vec2 } from \"../../math/algebra/vec2\";\r\nimport { Vec4 } from \"../../math/algebra/vec4\";\r\nimport { Bivec } from \"../../math/algebra/bivec\";\r\nimport { Rotor } from \"../../math/algebra/rotor\";\r\nimport { Obj4 } from \"../../math/algebra/affine\";\r\nimport { _180, _360, _90 } from \"../../math/const\";\r\nimport { FaceIndexMesh, FaceIndexMeshData, FaceMesh } from \"./facemesh\";\r\nexport let square = new FaceMesh({\r\n    quad: {\r\n        normal: new Float32Array([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]),\r\n        position: new Float32Array([-1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0]),\r\n        uvw: new Float32Array([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0]),\r\n    }\r\n});\r\nexport function cube() {\r\n    let rotor = new Rotor();\r\n    let biv = new Bivec();\r\n    let yface = square.clone().applyObj4(new Obj4(Vec4.y, rotor.expset(biv.set(0, _90))));\r\n    let meshes = [\r\n        biv.set(_90).exp(),\r\n        biv.set(-_90).exp(),\r\n        biv.set(0, 0, 0, _90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(0, 0, 0, -_90).exp().mulsl(rotor.expset(biv.set(_90, 0, 0, 0, 0))),\r\n        biv.set(_180).exp(),\r\n    ].map(r => yface.clone().applyObj4(new Obj4(new Vec4(), r)));\r\n    for (const m of meshes) yface = yface.concat(m);\r\n    let m = yface;\r\n    // for (let i = 0; i < 6; i++) {\r\n    //     for (let j = 0; j < 8; j++) {\r\n    //         m.uvw[i * 80 + j * 4 + 2] = i;\r\n    //     }\r\n    // }\r\n    return m;\r\n}\r\nexport function sphere(radius: number, u: number, v: number, uAngle: number = _360, vAngle: number = _180) {\r\n    if (u < 3) u = 3;\r\n    if (v < 3) v = 3;\r\n    return parametricSurface((uvw, pos, norm) => {\r\n        let u = uvw.x * uAngle;\r\n        let v = uvw.y * vAngle;\r\n        let sv = Math.sin(v);\r\n        let cv = Math.cos(v);\r\n        norm.set(\r\n            sv * Math.cos(u), sv * Math.sin(u), cv, 0\r\n        );\r\n        sv *= radius;\r\n        pos.set(\r\n            sv * Math.cos(u), sv * Math.sin(u), cv * radius, 0\r\n        );\r\n    }, u, v);\r\n}\r\nexport function polygon(points: Vec4[]): FaceIndexMesh {\r\n    //todo: concave polygon\r\n    const len = points.length;\r\n    if (len < 3) console.error(`Polygon must have at least 3 points, ${len} points found`);\r\n    const ret = new FaceIndexMesh({\r\n        position: new Float32Array(len << 2),\r\n        uvw: new Float32Array(len << 2),\r\n        triangle: {\r\n            position: new Uint32Array(len * 3 - 6),\r\n            uvw: new Uint32Array(len * 3 - 6),\r\n            count: len - 2\r\n        }\r\n    });\r\n    let offset = 0;\r\n    for (let i = 0; i < len; i++) {\r\n        points[i].writeBuffer(ret.position, i << 2);\r\n        points[i].writeBuffer(ret.uvw, i << 2);\r\n        if (i > 1) {\r\n            ret.triangle.position[offset++] = 0;\r\n            ret.triangle.position[offset++] = i;\r\n            ret.triangle.position[offset++] = i - 1;\r\n            offset -= 3;\r\n            ret.triangle.uvw[offset++] = 0;\r\n            ret.triangle.uvw[offset++] = i;\r\n            ret.triangle.uvw[offset++] = i - 1;\r\n        }\r\n    }\r\n    // ret.position\r\n    return ret;\r\n}\r\nexport function circle(radius: number, segment: number) {\r\n    return polygon(new Array(segment).fill(0).map((_, i) =>\r\n        new Vec4(\r\n            Math.cos(i / segment * _360) * radius,\r\n            Math.sin(i / segment * _360) * radius,\r\n        )\r\n    ));\r\n}\r\nexport function parametricSurface(\r\n    fn: (inputuvw: Vec2, outputPosition: Vec4, outputNormal: Vec4) => void,\r\n    uSegment: number, vSegment: number\r\n) {\r\n    if (uSegment < 1) uSegment = 1;\r\n    if (vSegment < 1) vSegment = 1;\r\n    let arraySize = vSegment * vSegment << 4;\r\n    uSegment++; vSegment++;\r\n    let uvw_seg = uSegment * uSegment;\r\n    let positions = new Float32Array((uvw_seg) << 2);\r\n    let normals = new Float32Array((uvw_seg) << 2);\r\n    let uvws = new Float32Array((uvw_seg) << 2);\r\n    let position = new Float32Array(arraySize);\r\n    let normal = new Float32Array(arraySize);\r\n    let uvw = new Float32Array(arraySize);\r\n    let inputuvw = new Vec2;\r\n    let outputVertex = new Vec4;\r\n    let outputNormal = new Vec4;\r\n    let ptr = 0;\r\n    let idxPtr = 0;\r\n    function pushIdx(i: number) {\r\n        position[idxPtr++] = positions[i];\r\n        position[idxPtr++] = positions[i + 1];\r\n        position[idxPtr++] = positions[i + 2];\r\n        position[idxPtr++] = positions[i + 3];\r\n        idxPtr -= 4;\r\n        normal[idxPtr++] = normals[i];\r\n        normal[idxPtr++] = normals[i + 1];\r\n        normal[idxPtr++] = normals[i + 2];\r\n        normal[idxPtr++] = normals[i + 3];\r\n        idxPtr -= 4;\r\n        uvw[idxPtr++] = uvws[i];\r\n        uvw[idxPtr++] = uvws[i + 1];\r\n        uvw[idxPtr++] = uvws[i + 2];\r\n        uvw[idxPtr++] = uvws[i + 3];\r\n    }\r\n    for (let u_index = 0; u_index < uSegment; u_index++) {\r\n        inputuvw.x = u_index / (uSegment - 1);\r\n        let offset = vSegment * u_index;\r\n        for (let v_index = 0; v_index < vSegment; v_index++, offset++) {\r\n            inputuvw.y = v_index / (vSegment - 1);\r\n            fn(inputuvw, outputVertex, outputNormal);\r\n            positions[ptr++] = outputVertex.x;\r\n            positions[ptr++] = outputVertex.y;\r\n            positions[ptr++] = outputVertex.z;\r\n            positions[ptr++] = outputVertex.w;\r\n            ptr -= 4;\r\n            normals[ptr++] = outputNormal.x;\r\n            normals[ptr++] = outputNormal.y;\r\n            normals[ptr++] = outputNormal.z;\r\n            normals[ptr++] = outputNormal.w;\r\n            ptr -= 4;\r\n            uvws[ptr++] = inputuvw.x;\r\n            uvws[ptr++] = inputuvw.y;\r\n            uvws[ptr++] = 0;\r\n            uvws[ptr++] = 0;\r\n            if (u_index && v_index) {\r\n                // todo: if same -> no push or push to triangle\r\n                pushIdx(offset << 2);\r\n                pushIdx(offset - 1 << 2);\r\n                pushIdx(offset - vSegment << 2);\r\n                pushIdx(offset - vSegment - 1 << 2);\r\n            }\r\n        }\r\n    }\r\n    return new FaceMesh({\r\n        quad: { position, normal, uvw }\r\n    });\r\n}\r\n/** m must be a manifold or manifold with border */\r\nexport function findBorder(m: FaceIndexMeshData) {\r\n    if (!m.position) console.error(\"findBorder can onnly apply to FaceIndexMesh.\");\r\n    let borders = [];\r\n    for (let i = 0, l = m.quad?.position?.length; i < l!; i += 4) {\r\n        let p = m.quad!.position;\r\n        pushBorder(p[i], p[i + 1]);\r\n        pushBorder(p[i + 1], p[i + 2]);\r\n        pushBorder(p[i + 2], p[i + 3]);\r\n        pushBorder(p[i + 3], p[i]);\r\n    }\r\n    for (let i = 0, l = m.triangle?.position?.length; i < l!; i += 3) {\r\n        let p = m.triangle!.position;\r\n        pushBorder(p[i], p[i + 1]);\r\n        pushBorder(p[i + 1], p[i + 2]);\r\n        pushBorder(p[i + 2], p[i]);\r\n    }\r\n    function pushBorder(a: number, b: number) {\r\n        let count = 0;\r\n        let found = false;\r\n        for (let [j, k] of borders) {\r\n            if (j === b && k === a) {\r\n                found = true;\r\n                break;\r\n            }\r\n            if (j === a && k === b) {\r\n                found = true;\r\n                console.warn(\"findBorder: Non manifold mesh found.\");\r\n                break;\r\n            }\r\n            count++;\r\n        }\r\n        if (found) {\r\n            borders.splice(count, 1);\r\n        } else {\r\n            borders.push([a, b]);\r\n        }\r\n    }\r\n    return borders;\r\n}"],"names":[],"mappings":"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"}