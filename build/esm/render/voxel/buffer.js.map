{"version":3,"file":"buffer.js","sources":["../../../../src/render/voxel/buffer.ts"],"sourcesContent":["import { GPU } from \"../gpu.js\";\r\nexport type Size3DDict = { width: number, height: number, depth: number };\r\nfunction toSize3DDict(size: GPUExtent3D): Size3DDict {\r\n    let width: number, height: number, depth: number;\r\n    if ((size as GPUExtent3DDict).width) {\r\n        width = (size as GPUExtent3DDict).width;\r\n        height = (size as GPUExtent3DDict).height;\r\n        depth = (size as GPUExtent3DDict).depthOrArrayLayers;\r\n    } else {\r\n        width = size[0];\r\n        height = size[1];\r\n        depth = size[2];\r\n    }\r\n    return { width, height, depth };\r\n}\r\nexport interface VoxelBuffer {\r\n    buffer: GPUBuffer,\r\n    header?: ArrayBuffer,\r\n    width: number, height: number, depth: number, length: number, formatSize: number,\r\n}\r\nexport function createVoxelBuffer(\r\n    gpu: GPU, size: GPUExtent3D, formatSize: number,\r\n    header?: ArrayBuffer, headerSize?: number\r\n): VoxelBuffer {\r\n    let device = gpu.device;\r\n    let { width, height, depth } = toSize3DDict(size);\r\n    let length = width * height * depth;\r\n    headerSize ??= header?.byteLength ?? 0;\r\n    let buffer = device.createBuffer({\r\n        size: (4 + length * formatSize) * 4 + headerSize,\r\n        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\r\n        mappedAtCreation: true,\r\n        label: `VoxelBuffer<${width},${height},${depth},${formatSize}>`\r\n    });\r\n    let gpuBuffer = buffer.getMappedRange(0, headerSize + 16);\r\n    let jsBuffer = new Uint32Array(gpuBuffer);\r\n    jsBuffer.set([width, height, depth, formatSize]);\r\n    if (header) {\r\n        let headerBuffer = new Uint32Array(header);\r\n        jsBuffer.set(headerBuffer, 4);\r\n    }\r\n    buffer.unmap();\r\n    return { buffer, width, height, depth, length, formatSize, header };\r\n}"],"names":[],"mappings":"AAEA,SAAS,YAAY,CAAC,IAAiB,EAAA;AACnC,IAAA,IAAI,KAAa,EAAE,MAAc,EAAE,KAAa,CAAC;IACjD,IAAK,IAAwB,CAAC,KAAK,EAAE;AACjC,QAAA,KAAK,GAAI,IAAwB,CAAC,KAAK,CAAC;AACxC,QAAA,MAAM,GAAI,IAAwB,CAAC,MAAM,CAAC;AAC1C,QAAA,KAAK,GAAI,IAAwB,CAAC,kBAAkB,CAAC;AACxD,KAAA;AAAM,SAAA;AACH,QAAA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,QAAA,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB,KAAA;AACD,IAAA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AACpC,CAAC;AAMK,SAAU,iBAAiB,CAC7B,GAAQ,EAAE,IAAiB,EAAE,UAAkB,EAC/C,MAAoB,EAAE,UAAmB,EAAA;AAEzC,IAAA,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACxB,IAAA,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;AACpC,IAAA,UAAU,KAAK,MAAM,EAAE,UAAU,IAAI,CAAC,CAAC;AACvC,IAAA,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QAC7B,IAAI,EAAE,CAAC,CAAC,GAAG,MAAM,GAAG,UAAU,IAAI,CAAC,GAAG,UAAU;AAChD,QAAA,KAAK,EAAE,cAAc,CAAC,OAAO,GAAG,cAAc,CAAC,QAAQ;AACvD,QAAA,gBAAgB,EAAE,IAAI;QACtB,KAAK,EAAE,eAAe,KAAK,CAAA,CAAA,EAAI,MAAM,CAAI,CAAA,EAAA,KAAK,CAAI,CAAA,EAAA,UAAU,CAAG,CAAA,CAAA;AAClE,KAAA,CAAC,CAAC;AACH,IAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC;AAC1D,IAAA,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;AAC1C,IAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AACjD,IAAA,IAAI,MAAM,EAAE;AACR,QAAA,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;AAC3C,QAAA,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AACjC,KAAA;IACD,MAAM,CAAC,KAAK,EAAE,CAAC;AACf,IAAA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;AACxE;;;;"}